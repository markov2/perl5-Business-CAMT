# Describing complex x0:Document
#     {urn:iso:std:iso:20022:tech:xsd:camt.014.001.05}Document
#
# Produced by XML::Compile::Translate::Template version undef
#          on Mon Nov 25 09:42:44 2024
#
# BE WARNED: in most cases, the example below cannot be used without
# interpretation.  The comments will guide you.
#
# xmlns:x0        urn:iso:std:iso:20022:tech:xsd:camt.014.001.05
# xmlns:xs        http://www.w3.org/2001/XMLSchema

# is a x0:Document
{ # sequence of RtrMmb

  # is a x0:ReturnMemberV05
  RtrMmb =>
  { # sequence of MsgHdr, RptOrErr, SplmtryData

    # is a x0:MessageHeader7
    MsgHdr =>
    { # sequence of MsgId, CreDtTm, ReqTp, OrgnlBizQry, QryNm

      # is a xs:string
      # length <= 35
      # length >= 1
      MsgId => "example",

      # is a xs:dateTime
      # is optional
      CreDtTm => "2006-10-06T00:23:02Z",

      # is a x0:RequestType4Choice
      # is optional
      ReqTp =>
      { # choice of PmtCtrl, Enqry, Prtry

        # is a xs:string
        # length <= 4
        # length >= 1
        PmtCtrl => "example",

        # is a xs:string
        # length <= 4
        # length >= 1
        Enqry => "example",

        # is a x0:GenericIdentification1
        Prtry =>
        { # sequence of Id, SchmeNm, Issr

          # is a xs:string
          # length <= 35
          # length >= 1
          Id => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          SchmeNm => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          Issr => "example", }, },

      # is a x0:OriginalBusinessQuery1
      # is optional
      OrgnlBizQry =>
      { # sequence of MsgId, MsgNmId, CreDtTm

        # is a xs:string
        # length <= 35
        # length >= 1
        MsgId => "example",

        # is a xs:string
        # is optional
        # length <= 35
        # length >= 1
        MsgNmId => "example",

        # is a xs:dateTime
        # is optional
        CreDtTm => "2006-10-06T00:23:02Z", },

      # is a xs:string
      # is optional
      # length <= 35
      # length >= 1
      QryNm => "example", },

    # is a x0:MemberReportOrError7Choice
    RptOrErr =>
    { # choice of Rpt, OprlErr

      # is a x0:MemberReport6
      # occurs 1 <= # <= unbounded times
      Rpt =>
      [ { # sequence of MmbId, MmbOrErr

          # is a x0:MemberIdentification3Choice
          MmbId =>
          { # choice of BICFI, ClrSysMmbId, Othr

            # is a xs:string
            # Pattern:
            #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
            BICFI => "example",

            # is a x0:ClearingSystemMemberIdentification2
            ClrSysMmbId =>
            { # sequence of ClrSysId, MmbId

              # is a x0:ClearingSystemIdentification2Choice
              # is optional
              ClrSysId =>
              { # choice of Cd, Prtry

                # is a xs:string
                # length <= 5
                # length >= 1
                Cd => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                Prtry => "example", },

              # is a xs:string
              # length <= 35
              # length >= 1
              MmbId => "example", },

            # is a x0:GenericFinancialIdentification1
            Othr =>
            { # sequence of Id, SchmeNm, Issr

              # is a xs:string
              # length <= 35
              # length >= 1
              Id => "example",

              # is a x0:FinancialIdentificationSchemeName1Choice
              # is optional
              SchmeNm =>
              { # choice of Cd, Prtry

                # is a xs:string
                # length <= 4
                # length >= 1
                Cd => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                Prtry => "example", },

              # is a xs:string
              # is optional
              # length <= 35
              # length >= 1
              Issr => "example", }, },

          # is a x0:MemberReportOrError8Choice
          MmbOrErr =>
          { # choice of Mmb, BizErr

            # is a x0:Member7
            Mmb =>
            { # sequence of Nm, RtrAdr, Acct, Tp, Sts, CtctRef, ComAdr

              # is a xs:string
              # is optional
              # length <= 35
              # length >= 1
              Nm => "example",

              # is a x0:MemberIdentification3Choice
              # complex structure shown above
              # occurs any number of times
              RtrAdr => [{},],

              # is a x0:CashAccount40
              # occurs any number of times
              Acct =>
              [ { # sequence of Id, Tp, Ccy, Nm, Prxy

                  # is a x0:AccountIdentification4Choice
                  # is optional
                  Id =>
                  { # choice of IBAN, Othr

                    # is a xs:string
                    # Pattern: [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
                    IBAN => "example",

                    # is a x0:GenericAccountIdentification1
                    # complex structure shown above
                    Othr => {}, },

                  # is a x0:CashAccountType2Choice
                  # is optional
                  Tp =>
                  { # choice of Cd, Prtry

                    # is a xs:string
                    # length <= 4
                    # length >= 1
                    Cd => "example",

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Prtry => "example", },

                  # is a xs:string
                  # is optional
                  # Pattern: [A-Z]{3,3}
                  Ccy => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Nm => "example",

                  # is a x0:ProxyAccountIdentification1
                  # is optional
                  Prxy =>
                  { # sequence of Tp, Id

                    # is a x0:ProxyAccountType1Choice
                    # complex structure shown above
                    # is optional
                    Tp => [{},],

                    # is a xs:string
                    # length <= 2048
                    # length >= 1
                    Id => "example", }, }, ],

              # is a x0:SystemMemberType1Choice
              # complex structure shown above
              # is optional
              Tp => [{},],

              # is a x0:SystemMemberStatus1Choice
              # is optional
              Sts =>
              { # choice of Cd, Prtry

                # is a xs:string
                # Enum: DLTD DSBL ENBL JOIN
                Cd => "ENBL",

                # is a xs:string
                # length <= 35
                # length >= 1
                Prtry => "example", },

              # is a x0:ContactIdentificationAndAddress2
              # occurs any number of times
              CtctRef =>
              [ { # sequence of Nm, Role, ComAdr

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  Nm => "example",

                  # is a x0:PaymentRole1Choice
                  Role =>
                  { # choice of Cd, Prtry

                    # is a xs:string
                    # length <= 4
                    # length >= 1
                    Cd => "example",

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Prtry => "example", },

                  # is a x0:CommunicationAddress10
                  ComAdr =>
                  { # sequence of PstlAdr, PhneNb, FaxNb, EmailAdr

                    # is a x0:LongPostalAddress1Choice
                    PstlAdr =>
                    { # choice of Ustrd, Strd

                      # is a xs:string
                      # length <= 140
                      # length >= 1
                      Ustrd => "example",

                      # is a x0:StructuredLongPostalAddress1
                      Strd =>
                      { # sequence of BldgNm, StrtNm, StrtBldgId, Flr, TwnNm,
                        #   DstrctNm, RgnId, Stat, CtyId, Ctry, PstCdId, POB

                        # is a xs:string
                        # is optional
                        # length <= 35
                        # length >= 1
                        BldgNm => "example",

                        # is a xs:string
                        # is optional
                        # length <= 35
                        # length >= 1
                        StrtNm => "example",

                        # is a xs:string
                        # is optional
                        # length <= 35
                        # length >= 1
                        StrtBldgId => "example",

                        # is a xs:string
                        # is optional
                        # length <= 16
                        # length >= 1
                        Flr => "example",

                        # is a xs:string
                        # length <= 35
                        # length >= 1
                        TwnNm => "example",

                        # is a xs:string
                        # is optional
                        # length <= 35
                        # length >= 1
                        DstrctNm => "example",

                        # is a xs:string
                        # is optional
                        # length <= 35
                        # length >= 1
                        RgnId => "example",

                        # is a xs:string
                        # is optional
                        # length <= 35
                        # length >= 1
                        Stat => "example",

                        # is a xs:string
                        # is optional
                        # length <= 35
                        # length >= 1
                        CtyId => "example",

                        # is a xs:string
                        # Pattern: [A-Z]{2,2}
                        Ctry => "example",

                        # is a xs:string
                        # length <= 16
                        # length >= 1
                        PstCdId => "example",

                        # is a xs:string
                        # is optional
                        # length <= 16
                        # length >= 1
                        POB => "example", }, },

                    # is a xs:string
                    # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                    PhneNb => "example",

                    # is a xs:string
                    # is optional
                    # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                    FaxNb => "example",

                    # is a xs:string
                    # is optional
                    # length <= 2048
                    # length >= 1
                    EmailAdr => "example", }, }, ],

              # is a x0:CommunicationAddress10
              # complex structure shown above
              # is optional
              ComAdr => [{},], },

            # is a x0:ErrorHandling3
            BizErr =>
            { # sequence of Err, Desc

              # is a x0:ErrorHandling1Choice
              Err =>
              { # choice of Cd, Prtry

                # is a xs:string
                # Enum: X020 X030 X050
                Cd => "X020",

                # is a xs:string
                # length <= 4
                # length >= 1
                # Pattern: [a-zA-Z0-9]{1,4}
                Prtry => "example", },

              # is a xs:string
              # is optional
              # length <= 140
              # length >= 1
              Desc => "example", }, }, }, ],

      # is a x0:ErrorHandling3
      # complex structure shown above
      # occurs 1 <= # <= unbounded times
      OprlErr => [{},], },

    # is a x0:SupplementaryData1
    # occurs any number of times
    SplmtryData =>
    [ { # sequence of PlcAndNm, Envlp

        # is a xs:string
        # is optional
        # length <= 350
        # length >= 1
        PlcAndNm => "example",

        # is a x0:SupplementaryDataEnvelope1
        Envlp =>
        { # sequence of ANY

          # any element in any namespace
          ANY => "Anything", }, }, ], }, }
