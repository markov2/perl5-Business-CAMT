# Describing complex x0:Document
#     {urn:iso:std:iso:20022:tech:xsd:camt.072.001.02}Document
#
# Produced by XML::Compile::Translate::Template version undef
#          on Mon Nov 25 09:42:46 2024
#
# BE WARNED: in most cases, the example below cannot be used without
# interpretation.  The comments will guide you.
#
# xmlns:x0        urn:iso:std:iso:20022:tech:xsd:camt.072.001.02
# xmlns:xs        http://www.w3.org/2001/XMLSchema

# is a x0:Document
{ # sequence of IntraBalMvmntModReq

  # is a x0:IntraBalanceMovementModificationRequestV02
  IntraBalMvmntModReq =>
  { # sequence of Id, CshAcct, CshAcctOwnr, CshAcctSvcr, ReqDtls,
    #   UndrlygIntraBal, SplmtryData

    # is a x0:DocumentIdentification51
    # is optional
    Id =>
    { # sequence of Id, CreDtTm, CpyDplct, MsgOrgtr, MsgRcpt

      # is a xs:string
      # length <= 35
      # length >= 1
      Id => "example",

      # is a x0:DateAndDateTime2Choice
      # is optional
      CreDtTm =>
      { # choice of Dt, DtTm

        # is a xs:date
        Dt => "2006-10-06",

        # is a xs:dateTime
        DtTm => "2006-10-06T00:23:02Z", },

      # is a xs:string
      # is optional
      # Enum: CODU COPY DUPL
      CpyDplct => "CODU",

      # is a x0:PartyIdentification136
      # is optional
      MsgOrgtr =>
      { # sequence of Id, LEI

        # is a x0:PartyIdentification120Choice
        # probably a recursive complex
        Id => {},

        # is a xs:string
        # is optional
        # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
        LEI => "example", },

      # is a x0:PartyIdentification136
      # complex structure shown above
      # is optional
      MsgRcpt => [{},], },

    # is a x0:CashAccount40
    CshAcct =>
    { # sequence of Id, Tp, Ccy, Nm, Prxy

      # is a x0:AccountIdentification4Choice
      # complex structure shown above
      # is optional
      Id => [{},],

      # is a x0:CashAccountType2Choice
      # is optional
      Tp =>
      { # choice of Cd, Prtry

        # is a xs:string
        # length <= 4
        # length >= 1
        Cd => "example",

        # is a xs:string
        # length <= 35
        # length >= 1
        Prtry => "example", },

      # is a xs:string
      # is optional
      # Pattern: [A-Z]{3,3}
      Ccy => "example",

      # is a xs:string
      # is optional
      # length <= 70
      # length >= 1
      Nm => "example",

      # is a x0:ProxyAccountIdentification1
      # is optional
      Prxy =>
      { # sequence of Tp, Id

        # is a x0:ProxyAccountType1Choice
        # complex structure shown above
        # is optional
        Tp => [{},],

        # is a xs:string
        # length <= 2048
        # length >= 1
        Id => "example", }, },

    # is a x0:SystemPartyIdentification8
    # is optional
    CshAcctOwnr =>
    { # sequence of Id, RspnsblPtyId

      # is a x0:PartyIdentification136
      # complex structure shown above
      Id => {},

      # is a x0:PartyIdentification136
      # complex structure shown above
      # is optional
      RspnsblPtyId => [{},], },

    # is a x0:BranchAndFinancialInstitutionIdentification8
    # is optional
    CshAcctSvcr =>
    { # sequence of FinInstnId, BrnchId

      # is a x0:FinancialInstitutionIdentification23
      FinInstnId =>
      { # sequence of BICFI, ClrSysMmbId, LEI, Nm, PstlAdr, Othr

        # is a xs:string
        # is optional
        # Pattern:
        #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
        BICFI => "example",

        # is a x0:ClearingSystemMemberIdentification2
        # is optional
        ClrSysMmbId =>
        { # sequence of ClrSysId, MmbId

          # is a x0:ClearingSystemIdentification2Choice
          # is optional
          ClrSysId =>
          { # choice of Cd, Prtry

            # is a xs:string
            # length <= 5
            # length >= 1
            Cd => "example",

            # is a xs:string
            # length <= 35
            # length >= 1
            Prtry => "example", },

          # is a xs:string
          # length <= 35
          # length >= 1
          MmbId => "example", },

        # is a xs:string
        # is optional
        # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
        LEI => "example",

        # is a xs:string
        # is optional
        # length <= 140
        # length >= 1
        Nm => "example",

        # is a x0:PostalAddress27
        # is optional
        PstlAdr =>
        { # sequence of AdrTp, CareOf, Dept, SubDept, StrtNm, BldgNb,
          #   BldgNm, Flr, UnitNb, PstBx, Room, PstCd, TwnNm, TwnLctnNm,
          #   DstrctNm, CtrySubDvsn, Ctry, AdrLine

          # is a x0:AddressType3Choice
          # is optional
          AdrTp =>
          { # choice of Cd, Prtry

            # is a xs:string
            # Enum: ADDR BIZZ DLVY HOME MLTO PBOX
            Cd => "ADDR",

            # is a x0:GenericIdentification30
            Prtry =>
            { # sequence of Id, Issr, SchmeNm

              # is a xs:string
              # Pattern: [a-zA-Z0-9]{4}
              Id => "example",

              # is a xs:string
              # length <= 35
              # length >= 1
              Issr => "example",

              # is a xs:string
              # is optional
              # length <= 35
              # length >= 1
              SchmeNm => "example", }, },

          # is a xs:string
          # is optional
          # length <= 140
          # length >= 1
          CareOf => "example",

          # is a xs:string
          # is optional
          # length <= 70
          # length >= 1
          Dept => "example",

          # is a xs:string
          # is optional
          # length <= 70
          # length >= 1
          SubDept => "example",

          # is a xs:string
          # is optional
          # length <= 140
          # length >= 1
          StrtNm => "example",

          # is a xs:string
          # is optional
          # length <= 16
          # length >= 1
          BldgNb => "example",

          # is a xs:string
          # is optional
          # length <= 140
          # length >= 1
          BldgNm => "example",

          # is a xs:string
          # is optional
          # length <= 70
          # length >= 1
          Flr => "example",

          # is a xs:string
          # is optional
          # length <= 16
          # length >= 1
          UnitNb => "example",

          # is a xs:string
          # is optional
          # length <= 16
          # length >= 1
          PstBx => "example",

          # is a xs:string
          # is optional
          # length <= 70
          # length >= 1
          Room => "example",

          # is a xs:string
          # is optional
          # length <= 16
          # length >= 1
          PstCd => "example",

          # is a xs:string
          # is optional
          # length <= 140
          # length >= 1
          TwnNm => "example",

          # is a xs:string
          # is optional
          # length <= 140
          # length >= 1
          TwnLctnNm => "example",

          # is a xs:string
          # is optional
          # length <= 140
          # length >= 1
          DstrctNm => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          CtrySubDvsn => "example",

          # is a xs:string
          # is optional
          # Pattern: [A-Z]{2,2}
          Ctry => "example",

          # is a xs:string
          # occurs 0 <= # <= 7 times
          # length <= 70
          # length >= 1
          AdrLine => [ "example", ], },

        # is a x0:GenericFinancialIdentification1
        # is optional
        Othr =>
        { # sequence of Id, SchmeNm, Issr

          # is a xs:string
          # length <= 35
          # length >= 1
          Id => "example",

          # is a x0:FinancialIdentificationSchemeName1Choice
          # is optional
          SchmeNm =>
          { # choice of Cd, Prtry

            # is a xs:string
            # length <= 4
            # length >= 1
            Cd => "example",

            # is a xs:string
            # length <= 35
            # length >= 1
            Prtry => "example", },

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          Issr => "example", }, },

      # is a x0:BranchData5
      # is optional
      BrnchId =>
      { # sequence of Id, LEI, Nm, PstlAdr

        # is a xs:string
        # is optional
        # length <= 35
        # length >= 1
        Id => "example",

        # is a xs:string
        # is optional
        # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
        LEI => "example",

        # is a xs:string
        # is optional
        # length <= 140
        # length >= 1
        Nm => "example",

        # is a x0:PostalAddress27
        # complex structure shown above
        # is optional
        PstlAdr => [{},], }, },

    # is a x0:RequestDetails22
    # occurs 1 <= # <= unbounded times
    ReqDtls =>
    [ { # sequence of Ref, Lkg, Prty, OthrPrcg, PrtlSttlmInd,
        #   ClrChanl, Lnkgs

        # is a x0:References14
        Ref =>
        { # sequence of AcctOwnrTxId, AcctSvcrTxId, MktInfrstrctrTxId,
          #   PrcrTxId, PoolId

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          AcctOwnrTxId => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          AcctSvcrTxId => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          MktInfrstrctrTxId => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          PrcrTxId => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          PoolId => "example", },

        # is a x0:LinkageType3Choice
        # is optional
        Lkg =>
        { # choice of Cd, Prtry

          # is a xs:string
          # Enum: LINK SOFT UNLK
          Cd => "LINK",

          # is a x0:GenericIdentification30
          # complex structure shown above
          Prtry => {}, },

        # is a x0:PriorityNumeric4Choice
        # is optional
        Prty =>
        { # choice of Nmrc, Prtry

          # is a xs:string
          # Pattern: [0-9]{4}
          Nmrc => "example",

          # is a x0:GenericIdentification30
          # complex structure shown above
          Prtry => {}, },

        # is a x0:GenericIdentification30
        # complex structure shown above
        # occurs any number of times
        OthrPrcg => [{},],

        # is a xs:boolean
        # is optional
        PrtlSttlmInd => "true",

        # is a xs:string
        # is optional
        # Enum: BOOK MPNS RTGS RTNS
        ClrChanl => "RTGS",

        # is a x0:Linkages57
        # occurs any number of times
        Lnkgs =>
        [ { # sequence of PrcgPos, MsgNb, Ref, RefOwnr

            # is a x0:ProcessingPosition7Choice
            # is optional
            PrcgPos =>
            { # choice of Cd, Prtry

              # is a xs:string
              # Enum: AFTE BEFO INFO WITH
              Cd => "AFTE",

              # is a x0:GenericIdentification30
              # complex structure shown above
              Prtry => {}, },

            # is a x0:DocumentNumber5Choice
            # is optional
            MsgNb =>
            { # choice of ShrtNb, LngNb, PrtryNb

              # is a xs:string
              # Pattern: [0-9]{3}
              ShrtNb => "example",

              # is a xs:string
              # Pattern: [a-z]{4}\.[0-9]{3}\.[0-9]{3}\.[0-9]{2}
              LngNb => "example",

              # is a x0:GenericIdentification36
              PrtryNb =>
              { # sequence of Id, Issr, SchmeNm

                # is a xs:string
                # length <= 35
                # length >= 1
                Id => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                Issr => "example",

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                SchmeNm => "example", }, },

            # is a x0:References34Choice
            # complex structure shown above
            Ref => {},

            # is a x0:PartyIdentification127Choice
            # is optional
            RefOwnr =>
            { # choice of AnyBIC, PrtryId

              # is a xs:string
              # Pattern:
              #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
              AnyBIC => "example",

              # is a x0:GenericIdentification36
              # complex structure shown above
              PrtryId => {}, }, }, ], }, ],

    # is a x0:IntraBalance5
    # is optional
    UndrlygIntraBal =>
    { # sequence of SttlmAmt, SttlmDt, BalFr, BalTo, CshSubBalId,
      #   Prty, InstrPrcgAddtlDtls

      # is a x0:Amount2Choice
      SttlmAmt =>
      { # choice of AmtWthtCcy, AmtWthCcy

        # is a xs:decimal
        # faction digits is 5
        # value >= 0
        # total digits is 18
        AmtWthtCcy => 3.1415,

        # is a x0:ActiveCurrencyAndAmount
        # AmtWthCcy is simple value with attributes
        AmtWthCcy =>
        { # is a xs:string
          # attribute Ccy is required
          # Pattern: [A-Z]{3,3}
          Ccy => "example",

          # is a xs:decimal
          # string content of the container
          _ => 3.1415, }, },

      # is a x0:DateAndDateTime2Choice
      # complex structure shown above
      SttlmDt => {},

      # is a x0:CashSubBalanceTypeAndQuantityBreakdown3
      BalFr =>
      { # sequence of Tp, QtyBrkdwn

        # is a x0:CashBalanceType3Choice
        # complex structure shown above
        Tp => {},

        # is a x0:AmountAndQuantityBreakdown1
        # occurs any number of times
        QtyBrkdwn =>
        [ { # sequence of LotNb, LotAmt, LotQty, CshSubBalTp

            # is a x0:GenericIdentification37
            # is optional
            LotNb =>
            { # sequence of Id, Issr

              # is a xs:string
              # length <= 35
              # length >= 1
              Id => "example",

              # is a xs:string
              # is optional
              # length <= 35
              # length >= 1
              Issr => "example", },

            # is a x0:AmountAndDirection5
            # is optional
            LotAmt =>
            { # sequence of Amt, CdtDbt

              # is a x0:ActiveCurrencyAndAmount
              # Amt is simple value with attributes
              Amt =>
              { # is a xs:string
                # attribute Ccy is required
                # Pattern: [A-Z]{3,3}
                Ccy => "example",

                # is a xs:decimal
                # string content of the container
                _ => 3.1415, },

              # is a xs:string
              # is optional
              # Enum: CRDT DBIT
              CdtDbt => "CRDT", },

            # is a x0:FinancialInstrumentQuantity1Choice
            # is optional
            LotQty =>
            { # choice of Unit, FaceAmt, AmtsdVal

              # is a xs:decimal
              # faction digits is 17
              # total digits is 18
              Unit => 3.1415,

              # is a xs:decimal
              # faction digits is 5
              # value >= 0
              # total digits is 18
              FaceAmt => 3.1415,

              # is a xs:decimal
              # faction digits is 5
              # value >= 0
              # total digits is 18
              AmtsdVal => 3.1415, },

            # is a x0:GenericIdentification30
            # complex structure shown above
            # is optional
            CshSubBalTp => [{},], }, ], },

      # is a x0:CashSubBalanceTypeAndQuantityBreakdown3
      # complex structure shown above
      BalTo => {},

      # is a x0:GenericIdentification37
      # complex structure shown above
      # is optional
      CshSubBalId => [{},],

      # is a x0:PriorityNumeric4Choice
      # complex structure shown above
      # is optional
      Prty => [{},],

      # is a xs:string
      # is optional
      # length <= 350
      # length >= 1
      InstrPrcgAddtlDtls => "example", },

    # is a x0:SupplementaryData1
    # occurs any number of times
    SplmtryData =>
    [ { # sequence of PlcAndNm, Envlp

        # is a xs:string
        # is optional
        # length <= 350
        # length >= 1
        PlcAndNm => "example",

        # is a x0:SupplementaryDataEnvelope1
        Envlp =>
        { # sequence of ANY

          # any element in any namespace
          ANY => "Anything", }, }, ], }, }
