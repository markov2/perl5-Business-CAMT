# Describing complex x0:Document
#     {urn:iso:std:iso:20022:tech:xsd:camt.070.001.06}Document
#
# Produced by XML::Compile::Translate::Template version undef
#          on Mon Nov 25 09:42:46 2024
#
# BE WARNED: in most cases, the example below cannot be used without
# interpretation.  The comments will guide you.
#
# xmlns:x0        urn:iso:std:iso:20022:tech:xsd:camt.070.001.06
# xmlns:xs        http://www.w3.org/2001/XMLSchema

# is a x0:Document
{ # sequence of RtrStgOrdr

  # is a x0:ReturnStandingOrderV06
  RtrStgOrdr =>
  { # sequence of MsgHdr, RptOrErr, SplmtryData

    # is a x0:MessageHeader6
    MsgHdr =>
    { # sequence of MsgId, CreDtTm, OrgnlBizQry, QryNm, ReqTp

      # is a xs:string
      # length <= 35
      # length >= 1
      MsgId => "example",

      # is a xs:dateTime
      # is optional
      CreDtTm => "2006-10-06T00:23:02Z",

      # is a x0:OriginalBusinessQuery1
      # is optional
      OrgnlBizQry =>
      { # sequence of MsgId, MsgNmId, CreDtTm

        # is a xs:string
        # length <= 35
        # length >= 1
        MsgId => "example",

        # is a xs:string
        # is optional
        # length <= 35
        # length >= 1
        MsgNmId => "example",

        # is a xs:dateTime
        # is optional
        CreDtTm => "2006-10-06T00:23:02Z", },

      # is a xs:string
      # is optional
      # length <= 35
      # length >= 1
      QryNm => "example",

      # is a x0:RequestType3Choice
      # is optional
      ReqTp =>
      { # choice of Cd, Prtry

        # is a xs:string
        # Enum: SDTL SLSL SLST SWLS TAPS
        Cd => "SLST",

        # is a x0:GenericIdentification1
        Prtry =>
        { # sequence of Id, SchmeNm, Issr

          # is a xs:string
          # length <= 35
          # length >= 1
          Id => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          SchmeNm => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          Issr => "example", }, }, },

    # is a x0:StandingOrderOrError9Choice
    RptOrErr =>
    { # choice of Rpt, OprlErr

      # is a x0:StandingOrderReport3
      # occurs 1 <= # <= unbounded times
      Rpt =>
      [ { # sequence of StgOrdrId, StgOrdrOrErr

          # is a x0:StandingOrderIdentification8
          StgOrdrId =>
          { # sequence of Id, Acct, AcctOwnr

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            Id => "example",

            # is a x0:CashAccount40
            Acct =>
            { # sequence of Id, Tp, Ccy, Nm, Prxy

              # is a x0:AccountIdentification4Choice
              # is optional
              Id =>
              { # choice of IBAN, Othr

                # is a xs:string
                # Pattern: [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
                IBAN => "example",

                # is a x0:GenericAccountIdentification1
                Othr =>
                { # sequence of Id, SchmeNm, Issr

                  # is a xs:string
                  # length <= 34
                  # length >= 1
                  Id => "example",

                  # is a x0:AccountSchemeName1Choice
                  # is optional
                  SchmeNm =>
                  { # choice of Cd, Prtry

                    # is a xs:string
                    # length <= 4
                    # length >= 1
                    Cd => "example",

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Prtry => "example", },

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  Issr => "example", }, },

              # is a x0:CashAccountType2Choice
              # is optional
              Tp =>
              { # choice of Cd, Prtry

                # is a xs:string
                # length <= 4
                # length >= 1
                Cd => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                Prtry => "example", },

              # is a xs:string
              # is optional
              # Pattern: [A-Z]{3,3}
              Ccy => "example",

              # is a xs:string
              # is optional
              # length <= 70
              # length >= 1
              Nm => "example",

              # is a x0:ProxyAccountIdentification1
              # is optional
              Prxy =>
              { # sequence of Tp, Id

                # is a x0:ProxyAccountType1Choice
                # complex structure shown above
                # is optional
                Tp => [{},],

                # is a xs:string
                # length <= 2048
                # length >= 1
                Id => "example", }, },

            # is a x0:BranchAndFinancialInstitutionIdentification8
            # is optional
            AcctOwnr =>
            { # sequence of FinInstnId, BrnchId

              # is a x0:FinancialInstitutionIdentification23
              FinInstnId =>
              { # sequence of BICFI, ClrSysMmbId, LEI, Nm, PstlAdr, Othr

                # is a xs:string
                # is optional
                # Pattern:
                #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
                BICFI => "example",

                # is a x0:ClearingSystemMemberIdentification2
                # is optional
                ClrSysMmbId =>
                { # sequence of ClrSysId, MmbId

                  # is a x0:ClearingSystemIdentification2Choice
                  # is optional
                  ClrSysId =>
                  { # choice of Cd, Prtry

                    # is a xs:string
                    # length <= 5
                    # length >= 1
                    Cd => "example",

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Prtry => "example", },

                  # is a xs:string
                  # length <= 35
                  # length >= 1
                  MmbId => "example", },

                # is a xs:string
                # is optional
                # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
                LEI => "example",

                # is a xs:string
                # is optional
                # length <= 140
                # length >= 1
                Nm => "example",

                # is a x0:PostalAddress27
                # is optional
                PstlAdr =>
                { # sequence of AdrTp, CareOf, Dept, SubDept, StrtNm, BldgNb,
                  #   BldgNm, Flr, UnitNb, PstBx, Room, PstCd, TwnNm, TwnLctnNm,
                  #   DstrctNm, CtrySubDvsn, Ctry, AdrLine

                  # is a x0:AddressType3Choice
                  # is optional
                  AdrTp =>
                  { # choice of Cd, Prtry

                    # is a xs:string
                    # Enum: ADDR BIZZ DLVY HOME MLTO PBOX
                    Cd => "ADDR",

                    # is a x0:GenericIdentification30
                    # complex structure shown above
                    Prtry => {}, },

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  CareOf => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Dept => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  SubDept => "example",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  StrtNm => "example",

                  # is a xs:string
                  # is optional
                  # length <= 16
                  # length >= 1
                  BldgNb => "example",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  BldgNm => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Flr => "example",

                  # is a xs:string
                  # is optional
                  # length <= 16
                  # length >= 1
                  UnitNb => "example",

                  # is a xs:string
                  # is optional
                  # length <= 16
                  # length >= 1
                  PstBx => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Room => "example",

                  # is a xs:string
                  # is optional
                  # length <= 16
                  # length >= 1
                  PstCd => "example",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  TwnNm => "example",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  TwnLctnNm => "example",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  DstrctNm => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  CtrySubDvsn => "example",

                  # is a xs:string
                  # is optional
                  # Pattern: [A-Z]{2,2}
                  Ctry => "example",

                  # is a xs:string
                  # occurs 0 <= # <= 7 times
                  # length <= 70
                  # length >= 1
                  AdrLine => [ "example", ], },

                # is a x0:GenericFinancialIdentification1
                # complex structure shown above
                # is optional
                Othr => [{},], },

              # is a x0:BranchData5
              # is optional
              BrnchId =>
              { # sequence of Id, LEI, Nm, PstlAdr

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                Id => "example",

                # is a xs:string
                # is optional
                # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
                LEI => "example",

                # is a xs:string
                # is optional
                # length <= 140
                # length >= 1
                Nm => "example",

                # is a x0:PostalAddress27
                # complex structure shown above
                # is optional
                PstlAdr => [{},], }, }, },

          # is a x0:StandingOrderOrError10Choice
          StgOrdrOrErr =>
          { # choice of StgOrdr, BizErr

            # is a x0:StandingOrder11
            StgOrdr =>
            { # sequence of Amt, CdtDbtInd, Ccy, Tp, AssoctdPoolAcct, Ref,
              #   Frqcy, VldtyPrd, SysMmb, RspnsblPty, LkSetId, LkSetOrdrId,
              #   LkSetOrdrSeq, ExctnTp, Cdtr, CdtrAcct, Dbtr, DbtrAcct,
              #   TtlsPerStgOrdr, ZeroSweepInd

              # is a x0:Amount2Choice
              Amt =>
              { # choice of AmtWthtCcy, AmtWthCcy

                # is a xs:decimal
                # faction digits is 5
                # value >= 0
                # total digits is 18
                AmtWthtCcy => 3.1415,

                # is a x0:ActiveCurrencyAndAmount
                # AmtWthCcy is simple value with attributes
                AmtWthCcy =>
                { # is a xs:string
                  # attribute Ccy is required
                  # Pattern: [A-Z]{3,3}
                  Ccy => "example",

                  # is a xs:decimal
                  # string content of the container
                  _ => 3.1415, }, },

              # is a xs:string
              # Enum: CRDT DBIT
              CdtDbtInd => "CRDT",

              # is a xs:string
              # is optional
              # Pattern: [A-Z]{3,3}
              Ccy => "example",

              # is a x0:StandingOrderType1Choice
              # complex structure shown above
              # is optional
              Tp => [{},],

              # is a x0:AccountIdentification4Choice
              # complex structure shown above
              # is optional
              AssoctdPoolAcct => [{},],

              # is a xs:string
              # is optional
              # length <= 35
              # length >= 1
              Ref => "example",

              # is a xs:string
              # is optional
              # Enum: ADHO DAIL INDA MIAN MNTH OVNG QURT WEEK YEAR
              Frqcy => "YEAR",

              # is a x0:DatePeriod3
              # is optional
              VldtyPrd =>
              { # sequence of FrDt, ToDt

                # is a xs:date
                FrDt => "2006-10-06",

                # is a xs:date
                # is optional
                ToDt => "2006-10-06", },

              # is a x0:BranchAndFinancialInstitutionIdentification8
              # complex structure shown above
              # is optional
              SysMmb => [{},],

              # is a x0:BranchAndFinancialInstitutionIdentification8
              # complex structure shown above
              # is optional
              RspnsblPty => [{},],

              # is a xs:string
              # is optional
              # length <= 35
              # length >= 1
              LkSetId => "example",

              # is a xs:string
              # is optional
              # length <= 35
              # length >= 1
              LkSetOrdrId => "example",

              # is a xs:decimal
              # is optional
              # faction digits is 0
              # total digits is 18
              LkSetOrdrSeq => 3.1415,

              # is a x0:ExecutionType1Choice
              # is optional
              ExctnTp =>
              { # choice of Tm, Evt

                # is a xs:time
                Tm => "11:12:13",

                # is a x0:EventType1Choice
                Evt =>
                { # choice of Cd, Prtry

                  # is a xs:string
                  # length <= 4
                  # length >= 1
                  Cd => "example",

                  # is a xs:string
                  # length <= 35
                  # length >= 1
                  Prtry => "example", }, },

              # is a x0:BranchAndFinancialInstitutionIdentification8
              # complex structure shown above
              # is optional
              Cdtr => [{},],

              # is a x0:CashAccount40
              # complex structure shown above
              # is optional
              CdtrAcct => [{},],

              # is a x0:BranchAndFinancialInstitutionIdentification8
              # complex structure shown above
              # is optional
              Dbtr => [{},],

              # is a x0:CashAccount40
              # complex structure shown above
              # is optional
              DbtrAcct => [{},],

              # is a x0:StandingOrderTotalAmount1
              # is optional
              TtlsPerStgOrdr =>
              { # sequence of SetPrdfndOrdr, PdgPrdfndOrdr, SetStgOrdr, PdgStgOrdr

                # is a x0:TotalAmountAndCurrency1
                SetPrdfndOrdr =>
                { # sequence of TtlAmt, CdtDbtInd, Ccy

                  # is a xs:decimal
                  # faction digits is 5
                  # value >= 0
                  # total digits is 18
                  TtlAmt => 3.1415,

                  # is a xs:string
                  # is optional
                  # Enum: CRDT DBIT
                  CdtDbtInd => "CRDT",

                  # is a xs:string
                  # is optional
                  # Pattern: [A-Z]{3,3}
                  Ccy => "example", },

                # is a x0:TotalAmountAndCurrency1
                # complex structure shown above
                PdgPrdfndOrdr => {},

                # is a x0:TotalAmountAndCurrency1
                # complex structure shown above
                SetStgOrdr => {},

                # is a x0:TotalAmountAndCurrency1
                # complex structure shown above
                PdgStgOrdr => {}, },

              # is a xs:boolean
              # is optional
              ZeroSweepInd => "true", },

            # is a x0:ErrorHandling5
            # occurs 1 <= # <= unbounded times
            BizErr =>
            [ { # sequence of Err, Desc

                # is a x0:ErrorHandling3Choice
                Err =>
                { # choice of Cd, Prtry

                  # is a xs:string
                  # length <= 4
                  # length >= 1
                  Cd => "example",

                  # is a xs:string
                  # length <= 35
                  # length >= 1
                  Prtry => "example", },

                # is a xs:string
                # is optional
                # length <= 140
                # length >= 1
                Desc => "example", }, ], }, }, ],

      # is a x0:ErrorHandling5
      # complex structure shown above
      # occurs 1 <= # <= unbounded times
      OprlErr => [{},], },

    # is a x0:SupplementaryData1
    # occurs any number of times
    SplmtryData =>
    [ { # sequence of PlcAndNm, Envlp

        # is a xs:string
        # is optional
        # length <= 350
        # length >= 1
        PlcAndNm => "example",

        # is a x0:SupplementaryDataEnvelope1
        Envlp =>
        { # sequence of ANY

          # any element in any namespace
          ANY => "Anything", }, }, ], }, }
