# Describing complex x0:Document
#     {urn:iso:std:iso:20022:tech:xsd:camt.104.001.01}Document
#
# Produced by XML::Compile::Translate::Template version undef
#          on Mon Nov 25 09:42:46 2024
#
# BE WARNED: in most cases, the example below cannot be used without
# interpretation.  The comments will guide you.
#
# xmlns:x0        urn:iso:std:iso:20022:tech:xsd:camt.104.001.01
# xmlns:xs        http://www.w3.org/2001/XMLSchema

# is a x0:Document
{ # sequence of CretMmb

  # is a x0:CreateMemberV01
  CretMmb =>
  { # sequence of MsgHdr, MmbId, ValSet, SplmtryData

    # is a x0:MessageHeader1
    MsgHdr =>
    { # sequence of MsgId, CreDtTm

      # is a xs:string
      # length <= 35
      # length >= 1
      MsgId => "example",

      # is a xs:dateTime
      # is optional
      CreDtTm => "2006-10-06T00:23:02Z", },

    # is a x0:MemberIdentification3Choice
    MmbId =>
    { # choice of BICFI, ClrSysMmbId, Othr

      # is a xs:string
      # Pattern:
      #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
      BICFI => "example",

      # is a x0:ClearingSystemMemberIdentification2
      ClrSysMmbId =>
      { # sequence of ClrSysId, MmbId

        # is a x0:ClearingSystemIdentification2Choice
        # is optional
        ClrSysId =>
        { # choice of Cd, Prtry

          # is a xs:string
          # length <= 5
          # length >= 1
          Cd => "example",

          # is a xs:string
          # length <= 35
          # length >= 1
          Prtry => "example", },

        # is a xs:string
        # length <= 35
        # length >= 1
        MmbId => "example", },

      # is a x0:GenericFinancialIdentification1
      Othr =>
      { # sequence of Id, SchmeNm, Issr

        # is a xs:string
        # length <= 35
        # length >= 1
        Id => "example",

        # is a x0:FinancialIdentificationSchemeName1Choice
        # is optional
        SchmeNm =>
        { # choice of Cd, Prtry

          # is a xs:string
          # length <= 4
          # length >= 1
          Cd => "example",

          # is a xs:string
          # length <= 35
          # length >= 1
          Prtry => "example", },

        # is a xs:string
        # is optional
        # length <= 35
        # length >= 1
        Issr => "example", }, },

    # is a x0:Member6
    ValSet =>
    { # sequence of MmbRtrAdr, CtctRef, ComAdr

      # is a x0:MemberIdentification3Choice
      # complex structure shown above
      # occurs any number of times
      MmbRtrAdr => [{},],

      # is a x0:ContactIdentificationAndAddress1
      # occurs any number of times
      CtctRef =>
      [ { # sequence of Nm, Role, ComAdr

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          Nm => "example",

          # is a xs:string
          # Enum: BKMG LMMG LQMG PYMG REDR STMG
          Role => "LQMG",

          # is a x0:CommunicationAddress8
          ComAdr =>
          { # sequence of PstlAdr, PhneNb, FaxNb, EmailAdr

            # is a x0:LongPostalAddress1Choice
            PstlAdr =>
            { # choice of Ustrd, Strd

              # is a xs:string
              # length <= 140
              # length >= 1
              Ustrd => "example",

              # is a x0:StructuredLongPostalAddress1
              Strd =>
              { # sequence of BldgNm, StrtNm, StrtBldgId, Flr, TwnNm,
                #   DstrctNm, RgnId, Stat, CtyId, Ctry, PstCdId, POB

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                BldgNm => "example",

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                StrtNm => "example",

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                StrtBldgId => "example",

                # is a xs:string
                # is optional
                # length <= 16
                # length >= 1
                Flr => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                TwnNm => "example",

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                DstrctNm => "example",

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                RgnId => "example",

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                Stat => "example",

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                CtyId => "example",

                # is a xs:string
                # Pattern: [A-Z]{2,2}
                Ctry => "example",

                # is a xs:string
                # length <= 16
                # length >= 1
                PstCdId => "example",

                # is a xs:string
                # is optional
                # length <= 16
                # length >= 1
                POB => "example", }, },

            # is a xs:string
            # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
            PhneNb => "example",

            # is a xs:string
            # is optional
            # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
            FaxNb => "example",

            # is a xs:string
            # is optional
            # length <= 256
            # length >= 1
            EmailAdr => "example", }, }, ],

      # is a x0:CommunicationAddress8
      # complex structure shown above
      # is optional
      ComAdr => [{},], },

    # is a x0:SupplementaryData1
    # occurs any number of times
    SplmtryData =>
    [ { # sequence of PlcAndNm, Envlp

        # is a xs:string
        # is optional
        # length <= 350
        # length >= 1
        PlcAndNm => "example",

        # is a x0:SupplementaryDataEnvelope1
        Envlp =>
        { # sequence of ANY

          # any element in any namespace
          ANY => "Anything", }, }, ], }, }
