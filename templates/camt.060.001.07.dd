# Describing complex x0:Document
#     {urn:iso:std:iso:20022:tech:xsd:camt.060.001.07}Document
#
# Produced by XML::Compile::Translate::Template version undef
#          on Sun Nov 24 22:12:59 2024
#
# BE WARNED: in most cases, the example below cannot be used without
# interpretation.  The comments will guide you.
#
# xmlns:x0        urn:iso:std:iso:20022:tech:xsd:camt.060.001.07
# xmlns:xs        http://www.w3.org/2001/XMLSchema

# is a x0:Document
{ # sequence of AcctRptgReq

  # is a x0:AccountReportingRequestV07
  AcctRptgReq =>
  { # sequence of GrpHdr, RptgReq, SplmtryData

    # is a x0:GroupHeader117
    GrpHdr =>
    { # sequence of MsgId, CreDtTm, MsgSndr

      # is a xs:string
      # length <= 35
      # length >= 1
      MsgId => "example",

      # is a xs:dateTime
      CreDtTm => "2006-10-06T00:23:02Z",

      # is a x0:Party50Choice
      # is optional
      MsgSndr =>
      { # choice of Pty, Agt

        # is a x0:PartyIdentification272
        Pty =>
        { # sequence of Nm, PstlAdr, Id, CtryOfRes, CtctDtls

          # is a xs:string
          # is optional
          # length <= 140
          # length >= 1
          Nm => "example",

          # is a x0:PostalAddress27
          # is optional
          PstlAdr =>
          { # sequence of AdrTp, CareOf, Dept, SubDept, StrtNm, BldgNb,
            #   BldgNm, Flr, UnitNb, PstBx, Room, PstCd, TwnNm, TwnLctnNm,
            #   DstrctNm, CtrySubDvsn, Ctry, AdrLine

            # is a x0:AddressType3Choice
            # is optional
            AdrTp =>
            { # choice of Cd, Prtry

              # is a xs:string
              # Enum: ADDR BIZZ DLVY HOME MLTO PBOX
              Cd => "ADDR",

              # is a x0:GenericIdentification30
              Prtry =>
              { # sequence of Id, Issr, SchmeNm

                # is a xs:string
                # Pattern: [a-zA-Z0-9]{4}
                Id => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                Issr => "example",

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                SchmeNm => "example", }, },

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            CareOf => "example",

            # is a xs:string
            # is optional
            # length <= 70
            # length >= 1
            Dept => "example",

            # is a xs:string
            # is optional
            # length <= 70
            # length >= 1
            SubDept => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            StrtNm => "example",

            # is a xs:string
            # is optional
            # length <= 16
            # length >= 1
            BldgNb => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            BldgNm => "example",

            # is a xs:string
            # is optional
            # length <= 70
            # length >= 1
            Flr => "example",

            # is a xs:string
            # is optional
            # length <= 16
            # length >= 1
            UnitNb => "example",

            # is a xs:string
            # is optional
            # length <= 16
            # length >= 1
            PstBx => "example",

            # is a xs:string
            # is optional
            # length <= 70
            # length >= 1
            Room => "example",

            # is a xs:string
            # is optional
            # length <= 16
            # length >= 1
            PstCd => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            TwnNm => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            TwnLctnNm => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            DstrctNm => "example",

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            CtrySubDvsn => "example",

            # is a xs:string
            # is optional
            # Pattern: [A-Z]{2,2}
            Ctry => "example",

            # is a xs:string
            # occurs 0 <= # <= 7 times
            # length <= 70
            # length >= 1
            AdrLine => [ "example", ], },

          # is a x0:Party52Choice
          # is optional
          Id =>
          { # choice of OrgId, PrvtId

            # is a x0:OrganisationIdentification39
            OrgId =>
            { # sequence of AnyBIC, LEI, Othr

              # is a xs:string
              # is optional
              # Pattern:
              #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
              AnyBIC => "example",

              # is a xs:string
              # is optional
              # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
              LEI => "example",

              # is a x0:GenericOrganisationIdentification3
              # occurs any number of times
              Othr =>
              [ { # sequence of Id, SchmeNm, Issr

                  # is a xs:string
                  # length <= 256
                  # length >= 1
                  Id => "example",

                  # is a x0:OrganisationIdentificationSchemeName1Choice
                  # is optional
                  SchmeNm =>
                  { # choice of Cd, Prtry

                    # is a xs:string
                    # length <= 4
                    # length >= 1
                    Cd => "example",

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Prtry => "example", },

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  Issr => "example", }, ], },

            # is a x0:PersonIdentification18
            PrvtId =>
            { # sequence of DtAndPlcOfBirth, Othr

              # is a x0:DateAndPlaceOfBirth1
              # is optional
              DtAndPlcOfBirth =>
              { # sequence of BirthDt, PrvcOfBirth, CityOfBirth, CtryOfBirth

                # is a xs:date
                BirthDt => "2006-10-06",

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                PrvcOfBirth => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                CityOfBirth => "example",

                # is a xs:string
                # Pattern: [A-Z]{2,2}
                CtryOfBirth => "example", },

              # is a x0:GenericPersonIdentification2
              # complex structure shown above
              # occurs any number of times
              Othr => [{},], }, },

          # is a xs:string
          # is optional
          # Pattern: [A-Z]{2,2}
          CtryOfRes => "example",

          # is a x0:Contact13
          # is optional
          CtctDtls =>
          { # sequence of NmPrfx, Nm, PhneNb, MobNb, FaxNb, URLAdr,
            #   EmailAdr, EmailPurp, JobTitl, Rspnsblty, Dept, Othr, PrefrdMtd

            # is a xs:string
            # is optional
            # Enum: DOCT MADM MIKS MISS MIST
            NmPrfx => "DOCT",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            Nm => "example",

            # is a xs:string
            # is optional
            # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
            PhneNb => "example",

            # is a xs:string
            # is optional
            # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
            MobNb => "example",

            # is a xs:string
            # is optional
            # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
            FaxNb => "example",

            # is a xs:string
            # is optional
            # length <= 2048
            # length >= 1
            URLAdr => "example",

            # is a xs:string
            # is optional
            # length <= 256
            # length >= 1
            EmailAdr => "example",

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            EmailPurp => "example",

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            JobTitl => "example",

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            Rspnsblty => "example",

            # is a xs:string
            # is optional
            # length <= 70
            # length >= 1
            Dept => "example",

            # is a x0:OtherContact1
            # complex structure shown above
            # occurs any number of times
            Othr => [{},],

            # is a xs:string
            # is optional
            # Enum: CELL FAXX LETT MAIL ONLI PHON
            PrefrdMtd => "MAIL", }, },

        # is a x0:BranchAndFinancialInstitutionIdentification8
        Agt =>
        { # sequence of FinInstnId, BrnchId

          # is a x0:FinancialInstitutionIdentification23
          FinInstnId =>
          { # sequence of BICFI, ClrSysMmbId, LEI, Nm, PstlAdr, Othr

            # is a xs:string
            # is optional
            # Pattern:
            #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
            BICFI => "example",

            # is a x0:ClearingSystemMemberIdentification2
            # is optional
            ClrSysMmbId =>
            { # sequence of ClrSysId, MmbId

              # is a x0:ClearingSystemIdentification2Choice
              # is optional
              ClrSysId =>
              { # choice of Cd, Prtry

                # is a xs:string
                # length <= 5
                # length >= 1
                Cd => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                Prtry => "example", },

              # is a xs:string
              # length <= 35
              # length >= 1
              MmbId => "example", },

            # is a xs:string
            # is optional
            # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
            LEI => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            Nm => "example",

            # is a x0:PostalAddress27
            # complex structure shown above
            # is optional
            PstlAdr => [{},],

            # is a x0:GenericFinancialIdentification1
            # complex structure shown above
            # is optional
            Othr => [{},], },

          # is a x0:BranchData5
          # is optional
          BrnchId =>
          { # sequence of Id, LEI, Nm, PstlAdr

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            Id => "example",

            # is a xs:string
            # is optional
            # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
            LEI => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            Nm => "example",

            # is a x0:PostalAddress27
            # complex structure shown above
            # is optional
            PstlAdr => [{},], }, }, }, },

    # is a x0:ReportingRequest7
    # occurs 1 <= # <= unbounded times
    RptgReq =>
    [ { # sequence of Id, ReqdMsgNmId, Acct, AcctOwnr, AcctSvcr,
        #   RptgPrd, RptgSeq, ReqdTxTp, ReqdBalTp

        # is a xs:string
        # is optional
        # length <= 35
        # length >= 1
        Id => "example",

        # is a xs:string
        # length <= 35
        # length >= 1
        ReqdMsgNmId => "example",

        # is a x0:CashAccount40
        # is optional
        Acct =>
        { # sequence of Id, Tp, Ccy, Nm, Prxy

          # is a x0:AccountIdentification4Choice
          # complex structure shown above
          # is optional
          Id => [{},],

          # is a x0:CashAccountType2Choice
          # is optional
          Tp =>
          { # choice of Cd, Prtry

            # is a xs:string
            # length <= 4
            # length >= 1
            Cd => "example",

            # is a xs:string
            # length <= 35
            # length >= 1
            Prtry => "example", },

          # is a xs:string
          # is optional
          # Pattern: [A-Z]{3,3}
          Ccy => "example",

          # is a xs:string
          # is optional
          # length <= 70
          # length >= 1
          Nm => "example",

          # is a x0:ProxyAccountIdentification1
          # is optional
          Prxy =>
          { # sequence of Tp, Id

            # is a x0:ProxyAccountType1Choice
            # complex structure shown above
            # is optional
            Tp => [{},],

            # is a xs:string
            # length <= 2048
            # length >= 1
            Id => "example", }, },

        # is a x0:Party50Choice
        # complex structure shown above
        AcctOwnr => {},

        # is a x0:BranchAndFinancialInstitutionIdentification8
        # complex structure shown above
        # is optional
        AcctSvcr => [{},],

        # is a x0:ReportingPeriod5
        # is optional
        RptgPrd =>
        { # sequence of FrToDt, FrToTm, Tp

          # is a x0:DatePeriod3
          FrToDt =>
          { # sequence of FrDt, ToDt

            # is a xs:date
            FrDt => "2006-10-06",

            # is a xs:date
            # is optional
            ToDt => "2006-10-06", },

          # is a x0:TimePeriodDetails1
          # is optional
          FrToTm =>
          { # sequence of FrTm, ToTm

            # is a xs:time
            FrTm => "11:12:13",

            # is a xs:time
            # is optional
            ToTm => "11:12:13", },

          # is a xs:string
          # Enum: ALLL CHNG MODF
          Tp => "ALLL", },

        # is a x0:SequenceRange1Choice
        # is optional
        RptgSeq =>
        { # choice of FrSeq, ToSeq, FrToSeq, EQSeq, NEQSeq

          # is a xs:string
          # length <= 35
          # length >= 1
          FrSeq => "example",

          # is a xs:string
          # length <= 35
          # length >= 1
          ToSeq => "example",

          # is a x0:SequenceRange1
          # occurs 1 <= # <= unbounded times
          FrToSeq =>
          [ { # sequence of FrSeq, ToSeq

              # is a xs:string
              # length <= 35
              # length >= 1
              FrSeq => "example",

              # is a xs:string
              # length <= 35
              # length >= 1
              ToSeq => "example", }, ],

          # is a xs:string
          # occurs 1 <= # <= unbounded times
          # length <= 35
          # length >= 1
          EQSeq => [ "example", ],

          # is a xs:string
          # occurs 1 <= # <= unbounded times
          # length <= 35
          # length >= 1
          NEQSeq => [ "example", ], },

        # is a x0:TransactionType2
        # is optional
        ReqdTxTp =>
        { # sequence of Sts, CdtDbtInd, FlrLmt

          # is a x0:EntryStatus1Choice
          Sts =>
          { # choice of Cd, Prtry

            # is a xs:string
            # length <= 4
            # length >= 1
            Cd => "example",

            # is a xs:string
            # length <= 35
            # length >= 1
            Prtry => "example", },

          # is a xs:string
          # Enum: CRDT DBIT
          CdtDbtInd => "CRDT",

          # is a x0:Limit2
          # occurs any number of times
          FlrLmt =>
          [ { # sequence of Amt, CdtDbtInd

              # is a x0:ActiveOrHistoricCurrencyAndAmount
              # Amt is simple value with attributes
              Amt =>
              { # is a xs:string
                # attribute Ccy is required
                # Pattern: [A-Z]{3,3}
                Ccy => "example",

                # is a xs:decimal
                # string content of the container
                _ => 3.1415, },

              # is a xs:string
              # Enum: BOTH CRED DEBT
              CdtDbtInd => "CRED", }, ], },

        # is a x0:BalanceType13
        # occurs any number of times
        ReqdBalTp =>
        [ { # sequence of CdOrPrtry, SubTp

            # is a x0:BalanceType10Choice
            CdOrPrtry =>
            { # choice of Cd, Prtry

              # is a xs:string
              # length <= 4
              # length >= 1
              Cd => "example",

              # is a xs:string
              # length <= 35
              # length >= 1
              Prtry => "example", },

            # is a x0:BalanceSubType1Choice
            # is optional
            SubTp =>
            { # choice of Cd, Prtry

              # is a xs:string
              # length <= 4
              # length >= 1
              Cd => "example",

              # is a xs:string
              # length <= 35
              # length >= 1
              Prtry => "example", }, }, ], }, ],

    # is a x0:SupplementaryData1
    # occurs any number of times
    SplmtryData =>
    [ { # sequence of PlcAndNm, Envlp

        # is a xs:string
        # is optional
        # length <= 350
        # length >= 1
        PlcAndNm => "example",

        # is a x0:SupplementaryDataEnvelope1
        Envlp =>
        { # sequence of ANY

          # any element in any namespace
          ANY => "Anything", }, }, ], }, }
