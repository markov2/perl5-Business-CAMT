# Describing complex x0:Document
#     {urn:iso:std:iso:20022:tech:xsd:camt.071.001.05}Document
#
# Produced by XML::Compile::Translate::Template version undef
#          on Mon Nov 25 15:46:18 2024
#
# BE WARNED: in most cases, the example below cannot be used without
# interpretation.  The comments will guide you.
#
# xmlns:x0        urn:iso:std:iso:20022:tech:xsd:camt.071.001.05
# xmlns:xs        http://www.w3.org/2001/XMLSchema

# is a x0:Document
{ # sequence of DelStgOrdr

  # is a x0:DeleteStandingOrderV05
  DelStgOrdr =>
  { # sequence of MsgHdr, StgOrdrDtls, SplmtryData

    # is a x0:MessageHeader1
    MsgHdr =>
    { # sequence of MsgId, CreDtTm

      # is a xs:string
      # length <= 35
      # length >= 1
      MsgId => "example",

      # is a xs:dateTime
      # is optional
      CreDtTm => "2006-10-06T00:23:02Z", },

    # is a x0:StandingOrderOrAll4Choice
    StgOrdrDtls =>
    { # choice of StgOrdr, AllStgOrdrs

      # is a x0:StandingOrderIdentification8
      # occurs 1 <= # <= unbounded times
      StgOrdr =>
      [ { # sequence of Id, Acct, AcctOwnr

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          Id => "example",

          # is a x0:CashAccount40
          Acct =>
          { # sequence of Id, Tp, Ccy, Nm, Prxy

            # is a x0:AccountIdentification4Choice
            # is optional
            Id =>
            { # choice of IBAN, Othr

              # is a xs:string
              # Pattern: [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
              IBAN => "example",

              # is a x0:GenericAccountIdentification1
              Othr =>
              { # sequence of Id, SchmeNm, Issr

                # is a xs:string
                # length <= 34
                # length >= 1
                Id => "example",

                # is a x0:AccountSchemeName1Choice
                # is optional
                SchmeNm =>
                { # choice of Cd, Prtry

                  # is a xs:string
                  # length <= 4
                  # length >= 1
                  Cd => "example",

                  # is a xs:string
                  # length <= 35
                  # length >= 1
                  Prtry => "example", },

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                Issr => "example", }, },

            # is a x0:CashAccountType2Choice
            # is optional
            Tp =>
            { # choice of Cd, Prtry

              # is a xs:string
              # length <= 4
              # length >= 1
              Cd => "example",

              # is a xs:string
              # length <= 35
              # length >= 1
              Prtry => "example", },

            # is a xs:string
            # is optional
            # Pattern: [A-Z]{3,3}
            Ccy => "example",

            # is a xs:string
            # is optional
            # length <= 70
            # length >= 1
            Nm => "example",

            # is a x0:ProxyAccountIdentification1
            # is optional
            Prxy =>
            { # sequence of Tp, Id

              # is a x0:ProxyAccountType1Choice
              # complex structure shown above
              # is optional
              Tp => [{},],

              # is a xs:string
              # length <= 2048
              # length >= 1
              Id => "example", }, },

          # is a x0:BranchAndFinancialInstitutionIdentification8
          # is optional
          AcctOwnr =>
          { # sequence of FinInstnId, BrnchId

            # is a x0:FinancialInstitutionIdentification23
            FinInstnId =>
            { # sequence of BICFI, ClrSysMmbId, LEI, Nm, PstlAdr, Othr

              # is a xs:string
              # is optional
              # Pattern:
              #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
              BICFI => "example",

              # is a x0:ClearingSystemMemberIdentification2
              # is optional
              ClrSysMmbId =>
              { # sequence of ClrSysId, MmbId

                # is a x0:ClearingSystemIdentification2Choice
                # is optional
                ClrSysId =>
                { # choice of Cd, Prtry

                  # is a xs:string
                  # length <= 5
                  # length >= 1
                  Cd => "example",

                  # is a xs:string
                  # length <= 35
                  # length >= 1
                  Prtry => "example", },

                # is a xs:string
                # length <= 35
                # length >= 1
                MmbId => "example", },

              # is a xs:string
              # is optional
              # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
              LEI => "example",

              # is a xs:string
              # is optional
              # length <= 140
              # length >= 1
              Nm => "example",

              # is a x0:PostalAddress27
              # is optional
              PstlAdr =>
              { # sequence of AdrTp, CareOf, Dept, SubDept, StrtNm, BldgNb,
                #   BldgNm, Flr, UnitNb, PstBx, Room, PstCd, TwnNm, TwnLctnNm,
                #   DstrctNm, CtrySubDvsn, Ctry, AdrLine

                # is a x0:AddressType3Choice
                # is optional
                AdrTp =>
                { # choice of Cd, Prtry

                  # is a xs:string
                  # Enum: ADDR BIZZ DLVY HOME MLTO PBOX
                  Cd => "ADDR",

                  # is a x0:GenericIdentification30
                  Prtry =>
                  { # sequence of Id, Issr, SchmeNm

                    # is a xs:string
                    # Pattern: [a-zA-Z0-9]{4}
                    Id => "example",

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Issr => "example",

                    # is a xs:string
                    # is optional
                    # length <= 35
                    # length >= 1
                    SchmeNm => "example", }, },

                # is a xs:string
                # is optional
                # length <= 140
                # length >= 1
                CareOf => "example",

                # is a xs:string
                # is optional
                # length <= 70
                # length >= 1
                Dept => "example",

                # is a xs:string
                # is optional
                # length <= 70
                # length >= 1
                SubDept => "example",

                # is a xs:string
                # is optional
                # length <= 140
                # length >= 1
                StrtNm => "example",

                # is a xs:string
                # is optional
                # length <= 16
                # length >= 1
                BldgNb => "example",

                # is a xs:string
                # is optional
                # length <= 140
                # length >= 1
                BldgNm => "example",

                # is a xs:string
                # is optional
                # length <= 70
                # length >= 1
                Flr => "example",

                # is a xs:string
                # is optional
                # length <= 16
                # length >= 1
                UnitNb => "example",

                # is a xs:string
                # is optional
                # length <= 16
                # length >= 1
                PstBx => "example",

                # is a xs:string
                # is optional
                # length <= 70
                # length >= 1
                Room => "example",

                # is a xs:string
                # is optional
                # length <= 16
                # length >= 1
                PstCd => "example",

                # is a xs:string
                # is optional
                # length <= 140
                # length >= 1
                TwnNm => "example",

                # is a xs:string
                # is optional
                # length <= 140
                # length >= 1
                TwnLctnNm => "example",

                # is a xs:string
                # is optional
                # length <= 140
                # length >= 1
                DstrctNm => "example",

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                CtrySubDvsn => "example",

                # is a xs:string
                # is optional
                # Pattern: [A-Z]{2,2}
                Ctry => "example",

                # is a xs:string
                # occurs 0 <= # <= 7 times
                # length <= 70
                # length >= 1
                AdrLine => [ "example", ], },

              # is a x0:GenericFinancialIdentification1
              # complex structure shown above
              # is optional
              Othr => [{},], },

            # is a x0:BranchData5
            # is optional
            BrnchId =>
            { # sequence of Id, LEI, Nm, PstlAdr

              # is a xs:string
              # is optional
              # length <= 35
              # length >= 1
              Id => "example",

              # is a xs:string
              # is optional
              # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
              LEI => "example",

              # is a xs:string
              # is optional
              # length <= 140
              # length >= 1
              Nm => "example",

              # is a x0:PostalAddress27
              # complex structure shown above
              # is optional
              PstlAdr => [{},], }, }, }, ],

      # is a x0:StandingOrderIdentification9
      # occurs 1 <= # <= unbounded times
      AllStgOrdrs =>
      [ { # sequence of Acct, AcctOwnr

          # is a x0:CashAccount40
          # complex structure shown above
          Acct => {},

          # is a x0:BranchAndFinancialInstitutionIdentification8
          # complex structure shown above
          # is optional
          AcctOwnr => [{},], }, ], },

    # is a x0:SupplementaryData1
    # occurs any number of times
    SplmtryData =>
    [ { # sequence of PlcAndNm, Envlp

        # is a xs:string
        # is optional
        # length <= 350
        # length >= 1
        PlcAndNm => "example",

        # is a x0:SupplementaryDataEnvelope1
        Envlp =>
        { # sequence of ANY

          # any element in any namespace
          ANY => "Anything", }, }, ], }, }
