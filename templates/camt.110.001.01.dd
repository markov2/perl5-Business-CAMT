# Describing complex x0:Document
#     {urn:iso:std:iso:20022:tech:xsd:camt.110.001.01}Document
#
# Produced by XML::Compile::Translate::Template version undef
#          on Mon Nov 25 09:42:47 2024
#
# BE WARNED: in most cases, the example below cannot be used without
# interpretation.  The comments will guide you.
#
# xmlns:x0        urn:iso:std:iso:20022:tech:xsd:camt.110.001.01
# xmlns:xs        http://www.w3.org/2001/XMLSchema

# is a x0:Document
{ # sequence of InvstgtnReq

  # is a x0:InvestigationRequestV01
  InvstgtnReq =>
  { # sequence of InvstgtnReq, InvstgtnData, SplmtryData

    # is a x0:InvestigationRequest2
    # probably a recursive complex
    InvstgtnReq => {},

    # is a x0:InvestigationReason2
    # occurs 1 <= # <= unbounded times
    InvstgtnData =>
    [ { # sequence of Seq, Rsn, RsnSubTp, AddtlReqData,
        #   RltdInvstgtnData, NclsdFile, RltdFileData

        # is a xs:decimal
        # is optional
        # faction digits is 0
        # total digits is 3
        Seq => 3.1415,

        # is a x0:InvestigationReason1Choice
        Rsn =>
        { # choice of Cd, Prtry

          # is a xs:string
          # length <= 4
          # length >= 1
          Cd => "example",

          # is a xs:string
          # length <= 35
          # length >= 1
          Prtry => "example", },

        # is a x0:InvestigationReasonSubType1Choice
        # is optional
        RsnSubTp =>
        { # choice of Cd, Prtry

          # is a xs:string
          # length <= 4
          # length >= 1
          Cd => "example",

          # is a xs:string
          # length <= 35
          # length >= 1
          Prtry => "example", },

        # is a x0:AdditionalRequestData1Choice
        # is optional
        AddtlReqData =>
        { # choice of ReqdDbtAuthstn, ReqdCompstn, ReqdValtn, ReqNrrtv

          # is a x0:DebitAuthorisation3
          ReqdDbtAuthstn =>
          { # sequence of CxlRsn, AmtToDbt, Acct, ValDtToDbt, AddtlCxlRsnInf

            # is a x0:CancellationReason33Choice
            CxlRsn =>
            { # choice of Cd, Prtry

              # is a xs:string
              # length <= 4
              # length >= 1
              Cd => "example",

              # is a xs:string
              # length <= 35
              # length >= 1
              Prtry => "example", },

            # is a x0:ActiveOrHistoricCurrencyAndAmount
            # AmtToDbt is simple value with attributes
            # is optional
            AmtToDbt =>
            { # is a xs:string
              # attribute Ccy is required
              # Pattern: [A-Z]{3,3}
              Ccy => "example",

              # is a xs:decimal
              # string content of the container
              _ => 3.1415, },

            # is a x0:CashAccount40
            # is optional
            Acct =>
            { # sequence of Id, Tp, Ccy, Nm, Prxy

              # is a x0:AccountIdentification4Choice
              # is optional
              Id =>
              { # choice of IBAN, Othr

                # is a xs:string
                # Pattern: [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
                IBAN => "example",

                # is a x0:GenericAccountIdentification1
                Othr =>
                { # sequence of Id, SchmeNm, Issr

                  # is a xs:string
                  # length <= 34
                  # length >= 1
                  Id => "example",

                  # is a x0:AccountSchemeName1Choice
                  # is optional
                  SchmeNm =>
                  { # choice of Cd, Prtry

                    # is a xs:string
                    # length <= 4
                    # length >= 1
                    Cd => "example",

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Prtry => "example", },

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  Issr => "example", }, },

              # is a x0:CashAccountType2Choice
              # is optional
              Tp =>
              { # choice of Cd, Prtry

                # is a xs:string
                # length <= 4
                # length >= 1
                Cd => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                Prtry => "example", },

              # is a xs:string
              # is optional
              # Pattern: [A-Z]{3,3}
              Ccy => "example",

              # is a xs:string
              # is optional
              # length <= 70
              # length >= 1
              Nm => "example",

              # is a x0:ProxyAccountIdentification1
              # is optional
              Prxy =>
              { # sequence of Tp, Id

                # is a x0:ProxyAccountType1Choice
                # complex structure shown above
                # is optional
                Tp => [{},],

                # is a xs:string
                # length <= 2048
                # length >= 1
                Id => "example", }, },

            # is a xs:date
            # is optional
            ValDtToDbt => "2006-10-06",

            # is a xs:string
            # occurs any number of times
            # length <= 140
            # length >= 1
            AddtlCxlRsnInf => [ "example", ], },

          # is a x0:CompensationRequest1
          ReqdCompstn =>
          { # sequence of CompstnAcct, Prd, Amt, XpctdValDt, IntrstRate, Rsn

            # is a x0:CashAccount40
            # complex structure shown above
            # is optional
            CompstnAcct => [{},],

            # is a x0:DatePeriod2
            Prd =>
            { # sequence of FrDt, ToDt

              # is a xs:date
              FrDt => "2006-10-06",

              # is a xs:date
              ToDt => "2006-10-06", },

            # is a x0:ActiveCurrencyAndAmount
            # Amt is simple value with attributes
            # is optional
            Amt =>
            { # is a xs:string
              # attribute Ccy is required
              # Pattern: [A-Z]{3,3}
              Ccy => "example",

              # is a xs:decimal
              # string content of the container
              _ => 3.1415, },

            # is a xs:date
            # is optional
            XpctdValDt => "2006-10-06",

            # is a xs:decimal
            # is optional
            # faction digits is 10
            # total digits is 11
            IntrstRate => 3.1415,

            # is a xs:string
            # occurs any number of times
            # length <= 140
            # length >= 1
            Rsn => [ "example", ], },

          # is a x0:AdjustmentRequest1
          ReqdValtn =>
          { # sequence of Prd

            # is a x0:DatePeriod5
            # complex structure shown above
            # is optional
            Prd => [{},], },

          # is a xs:string
          # length <= 500
          # length >= 1
          ReqNrrtv => "example", },

        # is a x0:RelatedInvestigationData1
        # is optional
        RltdInvstgtnData =>
        { # sequence of InvstgtnId, Lctn

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          InvstgtnId => "example",

          # is a x0:InvestigationLocationData1
          # occurs any number of times
          Lctn =>
          [ { # sequence of Mtd, ElctrncAdr, PstlAdr

              # is a xs:string
              # Enum: EDIC EMAL FAXI POST SMSM URID
              Mtd => "EDIC",

              # is a xs:string
              # is optional
              # length <= 2048
              # length >= 1
              ElctrncAdr => "example",

              # is a x0:NameAndAddress16
              # is optional
              PstlAdr =>
              { # sequence of Nm, Adr

                # is a xs:string
                # length <= 140
                # length >= 1
                Nm => "example",

                # is a x0:PostalAddress24
                Adr =>
                { # sequence of AdrTp, Dept, SubDept, StrtNm, BldgNb, BldgNm,
                  #   Flr, PstBx, Room, PstCd, TwnNm, TwnLctnNm, DstrctNm,
                  #   CtrySubDvsn, Ctry, AdrLine

                  # is a x0:AddressType3Choice
                  # is optional
                  AdrTp =>
                  { # choice of Cd, Prtry

                    # is a xs:string
                    # Enum: ADDR BIZZ DLVY HOME MLTO PBOX
                    Cd => "ADDR",

                    # is a x0:GenericIdentification30
                    Prtry =>
                    { # sequence of Id, Issr, SchmeNm

                      # is a xs:string
                      # Pattern: [a-zA-Z0-9]{4}
                      Id => "example",

                      # is a xs:string
                      # length <= 35
                      # length >= 1
                      Issr => "example",

                      # is a xs:string
                      # is optional
                      # length <= 35
                      # length >= 1
                      SchmeNm => "example", }, },

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Dept => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  SubDept => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  StrtNm => "example",

                  # is a xs:string
                  # is optional
                  # length <= 16
                  # length >= 1
                  BldgNb => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  BldgNm => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Flr => "example",

                  # is a xs:string
                  # is optional
                  # length <= 16
                  # length >= 1
                  PstBx => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Room => "example",

                  # is a xs:string
                  # is optional
                  # length <= 16
                  # length >= 1
                  PstCd => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  TwnNm => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  TwnLctnNm => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  DstrctNm => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  CtrySubDvsn => "example",

                  # is a xs:string
                  # is optional
                  # Pattern: [A-Z]{2,2}
                  Ctry => "example",

                  # is a xs:string
                  # occurs 0 <= # <= 7 times
                  # length <= 70
                  # length >= 1
                  AdrLine => [ "example", ], }, }, }, ], },

        # is a x0:Document12
        # occurs any number of times
        NclsdFile =>
        [ { # sequence of Tp, Id, IsseDt, Nm, LangCd, Frmt, FileNm,
            #   DgtlSgntr, Nclsr

            # is a x0:DocumentType1Choice
            # complex structure shown above
            Tp => {},

            # is a xs:string
            # length <= 35
            # length >= 1
            Id => "example",

            # is a x0:DateAndDateTime2Choice
            IsseDt =>
            { # choice of Dt, DtTm

              # is a xs:date
              Dt => "2006-10-06",

              # is a xs:dateTime
              DtTm => "2006-10-06T00:23:02Z", },

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            Nm => "example",

            # is a xs:string
            # is optional
            LangCd => "example",

            # is a x0:DocumentFormat1Choice
            Frmt =>
            { # choice of Cd, Prtry

              # is a xs:string
              # length <= 4
              # length >= 1
              Cd => "example",

              # is a x0:GenericIdentification1
              # complex structure shown above
              Prtry => {}, },

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            FileNm => "example",

            # is a x0:PartyAndSignature3
            # is optional
            DgtlSgntr =>
            { # sequence of Pty, Sgntr

              # is a x0:PartyIdentification135
              Pty =>
              { # sequence of Nm, PstlAdr, Id, CtryOfRes, CtctDtls

                # is a xs:string
                # is optional
                # length <= 140
                # length >= 1
                Nm => "example",

                # is a x0:PostalAddress24
                # complex structure shown above
                # is optional
                PstlAdr => [{},],

                # is a x0:Party38Choice
                # complex structure shown above
                # is optional
                Id => [{},],

                # is a xs:string
                # is optional
                # Pattern: [A-Z]{2,2}
                CtryOfRes => "example",

                # is a x0:Contact4
                # is optional
                CtctDtls =>
                { # sequence of NmPrfx, Nm, PhneNb, MobNb, FaxNb, EmailAdr,
                  #   EmailPurp, JobTitl, Rspnsblty, Dept, Othr, PrefrdMtd

                  # is a xs:string
                  # is optional
                  # Enum: DOCT MADM MIKS MISS MIST
                  NmPrfx => "DOCT",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  Nm => "example",

                  # is a xs:string
                  # is optional
                  # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                  PhneNb => "example",

                  # is a xs:string
                  # is optional
                  # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                  MobNb => "example",

                  # is a xs:string
                  # is optional
                  # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                  FaxNb => "example",

                  # is a xs:string
                  # is optional
                  # length <= 2048
                  # length >= 1
                  EmailAdr => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  EmailPurp => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  JobTitl => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  Rspnsblty => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Dept => "example",

                  # is a x0:OtherContact1
                  # complex structure shown above
                  # occurs any number of times
                  Othr => [{},],

                  # is a xs:string
                  # is optional
                  # Enum: CELL FAXX LETT MAIL PHON
                  PrefrdMtd => "LETT", }, },

              # is a x0:SkipPayload
              Sgntr =>
              { # sequence of ANY

                # any element in any namespace
                ANY => "Anything", }, },

            # is a xs:base64Binary
            # length <= 10485760
            # length >= 1
            Nclsr => "decoded bytes", }, ],

        # is a x0:FileData1
        # occurs any number of times
        RltdFileData =>
        [ { # sequence of Tp, Id, IsseDt, Frmt, FileNm, NtwkRef,
            #   FileLctnElctrncAdr

            # is a x0:DocumentType1Choice
            # complex structure shown above
            # is optional
            Tp => [{},],

            # is a xs:string
            # length <= 35
            # length >= 1
            Id => "example",

            # is a x0:DateAndDateTime2Choice
            # complex structure shown above
            # is optional
            IsseDt => [{},],

            # is a x0:DocumentFormat1Choice
            # complex structure shown above
            # is optional
            Frmt => [{},],

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            FileNm => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            NtwkRef => "example",

            # is a xs:string
            # is optional
            # length <= 2048
            # length >= 1
            FileLctnElctrncAdr => "example", }, ], }, ],

    # is a x0:SupplementaryData1
    # occurs any number of times
    SplmtryData =>
    [ { # sequence of PlcAndNm, Envlp

        # is a xs:string
        # is optional
        # length <= 350
        # length >= 1
        PlcAndNm => "example",

        # is a x0:SupplementaryDataEnvelope1
        Envlp =>
        { # sequence of ANY

          # any element in any namespace
          ANY => "Anything", }, }, ], }, }
