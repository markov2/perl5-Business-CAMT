# Describing complex x0:Document
#     {urn:iso:std:iso:20022:tech:xsd:camt.034.001.07}Document
#
# Produced by XML::Compile::Translate::Template version undef
#          on Mon Nov 25 15:46:16 2024
#
# BE WARNED: in most cases, the example below cannot be used without
# interpretation.  The comments will guide you.
#
# xmlns:x0        urn:iso:std:iso:20022:tech:xsd:camt.034.001.07
# xmlns:xs        http://www.w3.org/2001/XMLSchema

# is a x0:Document
{ # sequence of Dplct

  # is a x0:DuplicateV07
  Dplct =>
  { # sequence of Assgnmt, Case, Dplct, SplmtryData

    # is a x0:CaseAssignment6
    Assgnmt =>
    { # sequence of Id, Assgnr, Assgne, CreDtTm

      # is a xs:string
      # length <= 35
      # length >= 1
      Id => "example",

      # is a x0:Party50Choice
      Assgnr =>
      { # choice of Pty, Agt

        # is a x0:PartyIdentification272
        Pty =>
        { # sequence of Nm, PstlAdr, Id, CtryOfRes, CtctDtls

          # is a xs:string
          # is optional
          # length <= 140
          # length >= 1
          Nm => "example",

          # is a x0:PostalAddress27
          # is optional
          PstlAdr =>
          { # sequence of AdrTp, CareOf, Dept, SubDept, StrtNm, BldgNb,
            #   BldgNm, Flr, UnitNb, PstBx, Room, PstCd, TwnNm, TwnLctnNm,
            #   DstrctNm, CtrySubDvsn, Ctry, AdrLine

            # is a x0:AddressType3Choice
            # is optional
            AdrTp =>
            { # choice of Cd, Prtry

              # is a xs:string
              # Enum: ADDR BIZZ DLVY HOME MLTO PBOX
              Cd => "ADDR",

              # is a x0:GenericIdentification30
              Prtry =>
              { # sequence of Id, Issr, SchmeNm

                # is a xs:string
                # Pattern: [a-zA-Z0-9]{4}
                Id => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                Issr => "example",

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                SchmeNm => "example", }, },

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            CareOf => "example",

            # is a xs:string
            # is optional
            # length <= 70
            # length >= 1
            Dept => "example",

            # is a xs:string
            # is optional
            # length <= 70
            # length >= 1
            SubDept => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            StrtNm => "example",

            # is a xs:string
            # is optional
            # length <= 16
            # length >= 1
            BldgNb => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            BldgNm => "example",

            # is a xs:string
            # is optional
            # length <= 70
            # length >= 1
            Flr => "example",

            # is a xs:string
            # is optional
            # length <= 16
            # length >= 1
            UnitNb => "example",

            # is a xs:string
            # is optional
            # length <= 16
            # length >= 1
            PstBx => "example",

            # is a xs:string
            # is optional
            # length <= 70
            # length >= 1
            Room => "example",

            # is a xs:string
            # is optional
            # length <= 16
            # length >= 1
            PstCd => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            TwnNm => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            TwnLctnNm => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            DstrctNm => "example",

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            CtrySubDvsn => "example",

            # is a xs:string
            # is optional
            # Pattern: [A-Z]{2,2}
            Ctry => "example",

            # is a xs:string
            # occurs 0 <= # <= 7 times
            # length <= 70
            # length >= 1
            AdrLine => [ "example", ], },

          # is a x0:Party52Choice
          # is optional
          Id =>
          { # choice of OrgId, PrvtId

            # is a x0:OrganisationIdentification39
            OrgId =>
            { # sequence of AnyBIC, LEI, Othr

              # is a xs:string
              # is optional
              # Pattern:
              #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
              AnyBIC => "example",

              # is a xs:string
              # is optional
              # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
              LEI => "example",

              # is a x0:GenericOrganisationIdentification3
              # occurs any number of times
              Othr =>
              [ { # sequence of Id, SchmeNm, Issr

                  # is a xs:string
                  # length <= 256
                  # length >= 1
                  Id => "example",

                  # is a x0:OrganisationIdentificationSchemeName1Choice
                  # is optional
                  SchmeNm =>
                  { # choice of Cd, Prtry

                    # is a xs:string
                    # length <= 4
                    # length >= 1
                    Cd => "example",

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Prtry => "example", },

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  Issr => "example", }, ], },

            # is a x0:PersonIdentification18
            PrvtId =>
            { # sequence of DtAndPlcOfBirth, Othr

              # is a x0:DateAndPlaceOfBirth1
              # is optional
              DtAndPlcOfBirth =>
              { # sequence of BirthDt, PrvcOfBirth, CityOfBirth, CtryOfBirth

                # is a xs:date
                BirthDt => "2006-10-06",

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                PrvcOfBirth => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                CityOfBirth => "example",

                # is a xs:string
                # Pattern: [A-Z]{2,2}
                CtryOfBirth => "example", },

              # is a x0:GenericPersonIdentification2
              # complex structure shown above
              # occurs any number of times
              Othr => [{},], }, },

          # is a xs:string
          # is optional
          # Pattern: [A-Z]{2,2}
          CtryOfRes => "example",

          # is a x0:Contact13
          # is optional
          CtctDtls =>
          { # sequence of NmPrfx, Nm, PhneNb, MobNb, FaxNb, URLAdr,
            #   EmailAdr, EmailPurp, JobTitl, Rspnsblty, Dept, Othr, PrefrdMtd

            # is a xs:string
            # is optional
            # Enum: DOCT MADM MIKS MISS MIST
            NmPrfx => "DOCT",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            Nm => "example",

            # is a xs:string
            # is optional
            # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
            PhneNb => "example",

            # is a xs:string
            # is optional
            # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
            MobNb => "example",

            # is a xs:string
            # is optional
            # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
            FaxNb => "example",

            # is a xs:string
            # is optional
            # length <= 2048
            # length >= 1
            URLAdr => "example",

            # is a xs:string
            # is optional
            # length <= 256
            # length >= 1
            EmailAdr => "example",

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            EmailPurp => "example",

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            JobTitl => "example",

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            Rspnsblty => "example",

            # is a xs:string
            # is optional
            # length <= 70
            # length >= 1
            Dept => "example",

            # is a x0:OtherContact1
            # complex structure shown above
            # occurs any number of times
            Othr => [{},],

            # is a xs:string
            # is optional
            # Enum: CELL FAXX LETT MAIL ONLI PHON
            PrefrdMtd => "MAIL", }, },

        # is a x0:BranchAndFinancialInstitutionIdentification8
        Agt =>
        { # sequence of FinInstnId, BrnchId

          # is a x0:FinancialInstitutionIdentification23
          FinInstnId =>
          { # sequence of BICFI, ClrSysMmbId, LEI, Nm, PstlAdr, Othr

            # is a xs:string
            # is optional
            # Pattern:
            #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
            BICFI => "example",

            # is a x0:ClearingSystemMemberIdentification2
            # is optional
            ClrSysMmbId =>
            { # sequence of ClrSysId, MmbId

              # is a x0:ClearingSystemIdentification2Choice
              # is optional
              ClrSysId =>
              { # choice of Cd, Prtry

                # is a xs:string
                # length <= 5
                # length >= 1
                Cd => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                Prtry => "example", },

              # is a xs:string
              # length <= 35
              # length >= 1
              MmbId => "example", },

            # is a xs:string
            # is optional
            # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
            LEI => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            Nm => "example",

            # is a x0:PostalAddress27
            # complex structure shown above
            # is optional
            PstlAdr => [{},],

            # is a x0:GenericFinancialIdentification1
            # complex structure shown above
            # is optional
            Othr => [{},], },

          # is a x0:BranchData5
          # is optional
          BrnchId =>
          { # sequence of Id, LEI, Nm, PstlAdr

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            Id => "example",

            # is a xs:string
            # is optional
            # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
            LEI => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            Nm => "example",

            # is a x0:PostalAddress27
            # complex structure shown above
            # is optional
            PstlAdr => [{},], }, }, },

      # is a x0:Party50Choice
      # complex structure shown above
      Assgne => {},

      # is a xs:dateTime
      CreDtTm => "2006-10-06T00:23:02Z", },

    # is a x0:Case6
    # is optional
    Case =>
    { # sequence of Id, Cretr, ReopCaseIndctn

      # is a xs:string
      # length <= 35
      # length >= 1
      Id => "example",

      # is a x0:Party50Choice
      # complex structure shown above
      Cretr => {},

      # is a xs:boolean
      # is optional
      ReopCaseIndctn => "true", },

    # is a x0:ProprietaryData7
    # probably a recursive complex
    Dplct => {},

    # is a x0:SupplementaryData1
    # occurs any number of times
    SplmtryData =>
    [ { # sequence of PlcAndNm, Envlp

        # is a xs:string
        # is optional
        # length <= 350
        # length >= 1
        PlcAndNm => "example",

        # is a x0:SupplementaryDataEnvelope1
        Envlp =>
        { # sequence of ANY

          # any element in any namespace
          ANY => "Anything", }, }, ], }, }
