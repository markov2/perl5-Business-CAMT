# Describing complex x0:Document
#     {urn:iso:std:iso:20022:tech:xsd:camt.019.001.07}Document
#
# Produced by XML::Compile::Translate::Template version undef
#          on Mon Nov 25 09:42:44 2024
#
# BE WARNED: in most cases, the example below cannot be used without
# interpretation.  The comments will guide you.
#
# xmlns:x0        urn:iso:std:iso:20022:tech:xsd:camt.019.001.07
# xmlns:xs        http://www.w3.org/2001/XMLSchema

# is a x0:Document
{ # sequence of RtrBizDayInf

  # is a x0:ReturnBusinessDayInformationV07
  RtrBizDayInf =>
  { # sequence of MsgHdr, RptOrErr, SplmtryData

    # is a x0:MessageHeader7
    MsgHdr =>
    { # sequence of MsgId, CreDtTm, ReqTp, OrgnlBizQry, QryNm

      # is a xs:string
      # length <= 35
      # length >= 1
      MsgId => "example",

      # is a xs:dateTime
      # is optional
      CreDtTm => "2006-10-06T00:23:02Z",

      # is a x0:RequestType4Choice
      # is optional
      ReqTp =>
      { # choice of PmtCtrl, Enqry, Prtry

        # is a xs:string
        # length <= 4
        # length >= 1
        PmtCtrl => "example",

        # is a xs:string
        # length <= 4
        # length >= 1
        Enqry => "example",

        # is a x0:GenericIdentification1
        Prtry =>
        { # sequence of Id, SchmeNm, Issr

          # is a xs:string
          # length <= 35
          # length >= 1
          Id => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          SchmeNm => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          Issr => "example", }, },

      # is a x0:OriginalBusinessQuery1
      # is optional
      OrgnlBizQry =>
      { # sequence of MsgId, MsgNmId, CreDtTm

        # is a xs:string
        # length <= 35
        # length >= 1
        MsgId => "example",

        # is a xs:string
        # is optional
        # length <= 35
        # length >= 1
        MsgNmId => "example",

        # is a xs:dateTime
        # is optional
        CreDtTm => "2006-10-06T00:23:02Z", },

      # is a xs:string
      # is optional
      # length <= 35
      # length >= 1
      QryNm => "example", },

    # is a x0:BusinessDayReportOrError9Choice
    RptOrErr =>
    { # choice of BizRpt, OprlErr

      # is a x0:BusinessDay8
      # occurs 1 <= # <= unbounded times
      BizRpt =>
      [ { # sequence of SysId, BizDayOrErr

          # is a x0:SystemIdentification2Choice
          # occurs 1 <= # <= unbounded times
          SysId =>
          [ { # choice of MktInfrstrctrId, Ctry

              # is a x0:MarketInfrastructureIdentification1Choice
              MktInfrstrctrId =>
              { # choice of Cd, Prtry

                # is a xs:string
                # length <= 3
                # length >= 1
                Cd => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                Prtry => "example", },

              # is a xs:string
              # Pattern: [A-Z]{2,2}
              Ctry => "example", }, ],

          # is a x0:BusinessDayReportOrError10Choice
          BizDayOrErr =>
          { # choice of BizDayInf, BizErr

            # is a x0:BusinessDay9
            BizDayInf =>
            { # sequence of SysDt, SysSts, SysInfPerCcy

              # is a x0:DateAndDateTime2Choice
              # is optional
              SysDt =>
              { # choice of Dt, DtTm

                # is a xs:date
                Dt => "2006-10-06",

                # is a xs:dateTime
                DtTm => "2006-10-06T00:23:02Z", },

              # is a x0:SystemStatus3
              # is optional
              SysSts =>
              { # sequence of Sts, VldtyTm

                # is a x0:SystemStatus2Choice
                Sts =>
                { # choice of Cd, Prtry

                  # is a xs:string
                  # Enum: ACTV CLSD CLSG SUSP
                  Cd => "SUSP",

                  # is a x0:GenericIdentification1
                  # complex structure shown above
                  Prtry => {}, },

                # is a x0:DateTimePeriod1Choice
                # is optional
                VldtyTm =>
                { # choice of FrDtTm, ToDtTm, DtTmRg

                  # is a xs:dateTime
                  FrDtTm => "2006-10-06T00:23:02Z",

                  # is a xs:dateTime
                  ToDtTm => "2006-10-06T00:23:02Z",

                  # is a x0:DateTimePeriod1
                  DtTmRg =>
                  { # sequence of FrDtTm, ToDtTm

                    # is a xs:dateTime
                    FrDtTm => "2006-10-06T00:23:02Z",

                    # is a xs:dateTime
                    ToDtTm => "2006-10-06T00:23:02Z", }, }, },

              # is a x0:SystemAvailabilityAndEvents3
              # occurs any number of times
              SysInfPerCcy =>
              [ { # sequence of SysCcy, SsnPrd, Evt, ClsrInf

                  # is a xs:string
                  # is optional
                  # Pattern: [A-Z]{3,3}
                  SysCcy => "example",

                  # is a x0:TimePeriod1
                  # is optional
                  SsnPrd =>
                  { # sequence of FrTm, ToTm

                    # is a xs:time
                    FrTm => "11:12:13",

                    # is a xs:time
                    ToTm => "11:12:13", },

                  # is a x0:SystemEvent3
                  # occurs any number of times
                  Evt =>
                  [ { # sequence of Tp, SchdldTm, FctvTm, StartTm, EndTm

                      # is a x0:SystemEventType4Choice
                      Tp =>
                      { # choice of Cd, Prtry

                        # is a xs:string
                        # length <= 4
                        # length >= 1
                        Cd => "example",

                        # is a x0:GenericIdentification1
                        # complex structure shown above
                        Prtry => {}, },

                      # is a xs:dateTime
                      SchdldTm => "2006-10-06T00:23:02Z",

                      # is a xs:dateTime
                      # is optional
                      FctvTm => "2006-10-06T00:23:02Z",

                      # is a xs:dateTime
                      # is optional
                      StartTm => "2006-10-06T00:23:02Z",

                      # is a xs:dateTime
                      # is optional
                      EndTm => "2006-10-06T00:23:02Z", }, ],

                  # is a x0:SystemClosure2
                  # occurs any number of times
                  ClsrInf =>
                  [ { # sequence of Prd, Rsn

                      # is a x0:DateTimePeriod1Choice
                      # complex structure shown above
                      # is optional
                      Prd => [{},],

                      # is a x0:ClosureReason2Choice
                      Rsn =>
                      { # choice of Cd, Prtry

                        # is a xs:string
                        # Enum: ADTW BHOL NOOP RCVR SMTN
                        Cd => "BHOL",

                        # is a xs:string
                        # length <= 35
                        # length >= 1
                        Prtry => "example", }, }, ], }, ], },

            # is a x0:ErrorHandling5
            # occurs 1 <= # <= unbounded times
            BizErr =>
            [ { # sequence of Err, Desc

                # is a x0:ErrorHandling3Choice
                Err =>
                { # choice of Cd, Prtry

                  # is a xs:string
                  # length <= 4
                  # length >= 1
                  Cd => "example",

                  # is a xs:string
                  # length <= 35
                  # length >= 1
                  Prtry => "example", },

                # is a xs:string
                # is optional
                # length <= 140
                # length >= 1
                Desc => "example", }, ], }, }, ],

      # is a x0:ErrorHandling5
      # complex structure shown above
      # occurs 1 <= # <= unbounded times
      OprlErr => [{},], },

    # is a x0:SupplementaryData1
    # occurs any number of times
    SplmtryData =>
    [ { # sequence of PlcAndNm, Envlp

        # is a xs:string
        # is optional
        # length <= 350
        # length >= 1
        PlcAndNm => "example",

        # is a x0:SupplementaryDataEnvelope1
        Envlp =>
        { # sequence of ANY

          # any element in any namespace
          ANY => "Anything", }, }, ], }, }
