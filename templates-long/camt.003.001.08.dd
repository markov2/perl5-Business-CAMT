# Describing complex x0:Document
#     {urn:iso:std:iso:20022:tech:xsd:camt.003.001.08}Document
#
# Produced by XML::Compile::Translate::Template version undef
#          on Sun Dec  1 23:10:56 2024
#
# BE WARNED: in most cases, the example below cannot be used without
# interpretation.  The comments will guide you.
#
# xmlns:x0        urn:iso:std:iso:20022:tech:xsd:camt.003.001.08

# is a x0:Document
{ # sequence of GetAccount

  # is a x0:GetAccountV08
  GetAccount =>
  { # sequence of MessageHeader, AccountQueryDefinition,
    #   SupplementaryData

    # is a x0:MessageHeader9
    MessageHeader =>
    { # sequence of MessageId, CreationDateTime, RequestType

      # is a xs:string
      # length <= 35
      # length >= 1
      MessageId => "example",

      # is a xs:dateTime
      # is optional
      CreationDateTime => "2006-10-06T00:23:02Z",

      # is a x0:RequestType4Choice
      # is optional
      RequestType =>
      { # choice of PaymentControl, Enquiry, Proprietary

        # is a xs:string
        # length <= 4
        # length >= 1
        PaymentControl => "example",

        # is a xs:string
        # length <= 4
        # length >= 1
        Enquiry => "example",

        # is a x0:GenericIdentification1
        Proprietary =>
        { # sequence of Identification, SchemeName, Issuer

          # is a xs:string
          # length <= 35
          # length >= 1
          Identification => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          SchemeName => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          Issuer => "example", }, }, },

    # is a x0:AccountQuery4
    # is optional
    AccountQueryDefinition =>
    { # sequence of QueryType, AccountCriteria

      # is a xs:string
      # is optional
      # Enum: ALLL CHNG DELD MODF
      QueryType => "ALLL",

      # is a x0:AccountCriteria4Choice
      # is optional
      AccountCriteria =>
      { # choice of QueryName, NewCriteria

        # is a xs:string
        # length <= 35
        # length >= 1
        QueryName => "example",

        # is a x0:AccountCriteria8
        NewCriteria =>
        { # sequence of NewQueryName, SearchCriteria, ReturnCriteria

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          NewQueryName => "example",

          # is a x0:CashAccountSearchCriteria8
          # occurs any number of times
          SearchCriteria =>
          [ { # sequence of AccountId, Type, Currency, Balance,
              #   AccountOwner, AccountServicer

              # is a x0:AccountIdentificationSearchCriteria2Choice
              # occurs any number of times
              AccountId =>
              [ { # choice of Equal, ContainText, NotContainText

                  # is a x0:AccountIdentification4Choice
                  Equal =>
                  { # choice of IBAN, Other

                    # is a xs:string
                    # Pattern: [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
                    IBAN => "example",

                    # is a x0:GenericAccountIdentification1
                    Other =>
                    { # sequence of Identification, SchemeName, Issuer

                      # is a xs:string
                      # length <= 34
                      # length >= 1
                      Identification => "example",

                      # is a x0:AccountSchemeName1Choice
                      # is optional
                      SchemeName =>
                      { # choice of Code, Proprietary

                        # is a xs:string
                        # length <= 4
                        # length >= 1
                        Code => "example",

                        # is a xs:string
                        # length <= 35
                        # length >= 1
                        Proprietary => "example", },

                      # is a xs:string
                      # is optional
                      # length <= 35
                      # length >= 1
                      Issuer => "example", }, },

                  # is a xs:string
                  # length <= 35
                  # length >= 1
                  ContainText => "example",

                  # is a xs:string
                  # length <= 35
                  # length >= 1
                  NotContainText => "example", }, ],

              # is a x0:CashAccountType2Choice
              # occurs any number of times
              Type =>
              [ { # choice of Code, Proprietary

                  # is a xs:string
                  # length <= 4
                  # length >= 1
                  Code => "example",

                  # is a xs:string
                  # length <= 35
                  # length >= 1
                  Proprietary => "example", }, ],

              # is a xs:string
              # occurs any number of times
              # Pattern: [A-Z]{3,3}
              Currency => [ "example", ],

              # is a x0:CashBalance14
              # occurs any number of times
              Balance =>
              [ { # sequence of Type, CounterPartyType, CounterPartyId,
                  #   ValueDate, ProcessingDate

                  # is a x0:BalanceType11Choice
                  # complex structure shown above
                  # occurs any number of times
                  Type => [{},],

                  # is a xs:string
                  # Enum: BILA MULT
                  CounterPartyType => "BILA",

                  # is a x0:BranchAndFinancialInstitutionIdentification8
                  # occurs any number of times
                  CounterPartyId =>
                  [ { # sequence of FinancialInstitutionId, BranchId

                      # is a x0:FinancialInstitutionIdentification23
                      FinancialInstitutionId =>
                      { # sequence of BICFI, ClearSystemMemberId, LEI, Name,
                        #   PostalAddress, Other

                        # is a xs:string
                        # is optional
                        # Pattern:
                        #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
                        BICFI => "example",

                        # is a x0:ClearingSystemMemberIdentification2
                        # is optional
                        ClearSystemMemberId =>
                        { # sequence of ClearSystemId, MemberId

                          # is a x0:ClearingSystemIdentification2Choice
                          # is optional
                          ClearSystemId =>
                          { # choice of Code, Proprietary

                            # is a xs:string
                            # length <= 5
                            # length >= 1
                            Code => "example",

                            # is a xs:string
                            # length <= 35
                            # length >= 1
                            Proprietary => "example", },

                          # is a xs:string
                          # length <= 35
                          # length >= 1
                          MemberId => "example", },

                        # is a xs:string
                        # is optional
                        # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
                        LEI => "example",

                        # is a xs:string
                        # is optional
                        # length <= 140
                        # length >= 1
                        Name => "example",

                        # is a x0:PostalAddress27
                        # is optional
                        PostalAddress =>
                        { # sequence of AddressType, CareOf, Department, SubDepartment,
                          #   SteetName, BuildingNumber, BuildingName, Floor, UnitNumber,
                          #   Postbox, Room, PostalCode, TownName, TownLocationName,
                          #   DistrictName, CountrySubDivision, Country, AddressLine

                          # is a x0:AddressType3Choice
                          # is optional
                          AddressType =>
                          { # choice of Code, Proprietary

                            # is a xs:string
                            # Enum: ADDR BIZZ DLVY HOME MLTO PBOX
                            Code => "ADDR",

                            # is a x0:GenericIdentification30
                            # complex structure shown above
                            Proprietary => {}, },

                          # is a xs:string
                          # is optional
                          # length <= 140
                          # length >= 1
                          CareOf => "example",

                          # is a xs:string
                          # is optional
                          # length <= 70
                          # length >= 1
                          Department => "example",

                          # is a xs:string
                          # is optional
                          # length <= 70
                          # length >= 1
                          SubDepartment => "example",

                          # is a xs:string
                          # is optional
                          # length <= 140
                          # length >= 1
                          SteetName => "example",

                          # is a xs:string
                          # is optional
                          # length <= 16
                          # length >= 1
                          BuildingNumber => "example",

                          # is a xs:string
                          # is optional
                          # length <= 140
                          # length >= 1
                          BuildingName => "example",

                          # is a xs:string
                          # is optional
                          # length <= 70
                          # length >= 1
                          Floor => "example",

                          # is a xs:string
                          # is optional
                          # length <= 16
                          # length >= 1
                          UnitNumber => "example",

                          # is a xs:string
                          # is optional
                          # length <= 16
                          # length >= 1
                          Postbox => "example",

                          # is a xs:string
                          # is optional
                          # length <= 70
                          # length >= 1
                          Room => "example",

                          # is a xs:string
                          # is optional
                          # length <= 16
                          # length >= 1
                          PostalCode => "example",

                          # is a xs:string
                          # is optional
                          # length <= 140
                          # length >= 1
                          TownName => "example",

                          # is a xs:string
                          # is optional
                          # length <= 140
                          # length >= 1
                          TownLocationName => "example",

                          # is a xs:string
                          # is optional
                          # length <= 140
                          # length >= 1
                          DistrictName => "example",

                          # is a xs:string
                          # is optional
                          # length <= 35
                          # length >= 1
                          CountrySubDivision => "example",

                          # is a xs:string
                          # is optional
                          # Pattern: [A-Z]{2,2}
                          Country => "example",

                          # is a xs:string
                          # occurs 0 <= # <= 7 times
                          # length <= 70
                          # length >= 1
                          AddressLine => [ "example", ], },

                        # is a x0:GenericFinancialIdentification1
                        # complex structure shown above
                        # is optional
                        Other => [{},], },

                      # is a x0:BranchData5
                      # is optional
                      BranchId =>
                      { # sequence of Identification, LEI, Name, PostalAddress

                        # is a xs:string
                        # is optional
                        # length <= 35
                        # length >= 1
                        Identification => "example",

                        # is a xs:string
                        # is optional
                        # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
                        LEI => "example",

                        # is a xs:string
                        # is optional
                        # length <= 140
                        # length >= 1
                        Name => "example",

                        # is a x0:PostalAddress27
                        # complex structure shown above
                        # is optional
                        PostalAddress => [{},], }, }, ],

                  # is a x0:DateAndDateTimeSearch4Choice
                  # occurs any number of times
                  ValueDate =>
                  [ { # choice of DateTime, Date

                      # is a x0:DateTimeSearch2Choice
                      DateTime =>
                      { # choice of FromDateTime, ToDateTime, FromToDateTime,
                        #   EqualDateTime, NotEqualDatTime

                        # is a xs:dateTime
                        FromDateTime => "2006-10-06T00:23:02Z",

                        # is a xs:dateTime
                        ToDateTime => "2006-10-06T00:23:02Z",

                        # is a x0:DateTimePeriod1
                        FromToDateTime =>
                        { # sequence of FromDateTime, ToDateTime

                          # is a xs:dateTime
                          FromDateTime => "2006-10-06T00:23:02Z",

                          # is a xs:dateTime
                          ToDateTime => "2006-10-06T00:23:02Z", },

                        # is a xs:dateTime
                        EqualDateTime => "2006-10-06T00:23:02Z",

                        # is a xs:dateTime
                        NotEqualDatTime => "2006-10-06T00:23:02Z", },

                      # is a x0:DatePeriodSearch1Choice
                      Date =>
                      { # choice of FromDate, ToDate, FromToDate, EqualDate, NotEqualDate

                        # is a xs:date
                        FromDate => "2006-10-06",

                        # is a xs:date
                        ToDate => "2006-10-06",

                        # is a x0:DatePeriod2
                        FromToDate =>
                        { # sequence of FromDate, ToDate

                          # is a xs:date
                          FromDate => "2006-10-06",

                          # is a xs:date
                          ToDate => "2006-10-06", },

                        # is a xs:date
                        EqualDate => "2006-10-06",

                        # is a xs:date
                        NotEqualDate => "2006-10-06", }, }, ],

                  # is a x0:DateAndDateTimeSearch4Choice
                  # complex structure shown above
                  # is optional
                  ProcessingDate => [{},], }, ],

              # is a x0:PartyIdentification272
              # is optional
              AccountOwner =>
              { # sequence of Name, PostalAddress, Identification,
                #   CountryOfResidence, ContactDetails

                # is a xs:string
                # is optional
                # length <= 140
                # length >= 1
                Name => "example",

                # is a x0:PostalAddress27
                # complex structure shown above
                # is optional
                PostalAddress => [{},],

                # is a x0:Party52Choice
                # is optional
                Identification =>
                { # choice of OrganisationId, PersonId

                  # is a x0:OrganisationIdentification39
                  OrganisationId =>
                  { # sequence of AnyBIC, LEI, Other

                    # is a xs:string
                    # is optional
                    # Pattern:
                    #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
                    AnyBIC => "example",

                    # is a xs:string
                    # is optional
                    # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
                    LEI => "example",

                    # is a x0:GenericOrganisationIdentification3
                    # complex structure shown above
                    # occurs any number of times
                    Other => [{},], },

                  # is a x0:PersonIdentification18
                  PersonId =>
                  { # sequence of DateAndPlaceOfBirth, Other

                    # is a x0:DateAndPlaceOfBirth1
                    # is optional
                    DateAndPlaceOfBirth =>
                    { # sequence of BirthDate, ProvinceOfBrith, CityOfBirth,
                      #   CountryOfBirth

                      # is a xs:date
                      BirthDate => "2006-10-06",

                      # is a xs:string
                      # is optional
                      # length <= 35
                      # length >= 1
                      ProvinceOfBrith => "example",

                      # is a xs:string
                      # length <= 35
                      # length >= 1
                      CityOfBirth => "example",

                      # is a xs:string
                      # Pattern: [A-Z]{2,2}
                      CountryOfBirth => "example", },

                    # is a x0:GenericPersonIdentification2
                    # complex structure shown above
                    # occurs any number of times
                    Other => [{},], }, },

                # is a xs:string
                # is optional
                # Pattern: [A-Z]{2,2}
                CountryOfResidence => "example",

                # is a x0:Contact13
                # is optional
                ContactDetails =>
                { # sequence of NamePrefix, Name, PhoneNumber,
                  #   MobilePhoneNumber, FaxNumber, URLAddress, EmailAddress,
                  #   EmailPurpose, JobTitle, Responsibility, Department, Other,
                  #   PreferredMethod

                  # is a xs:string
                  # is optional
                  # Enum: DOCT MADM MIKS MISS MIST
                  NamePrefix => "DOCT",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  Name => "example",

                  # is a xs:string
                  # is optional
                  # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                  PhoneNumber => "example",

                  # is a xs:string
                  # is optional
                  # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                  MobilePhoneNumber => "example",

                  # is a xs:string
                  # is optional
                  # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                  FaxNumber => "example",

                  # is a xs:string
                  # is optional
                  # length <= 2048
                  # length >= 1
                  URLAddress => "example",

                  # is a xs:string
                  # is optional
                  # length <= 256
                  # length >= 1
                  EmailAddress => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  EmailPurpose => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  JobTitle => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  Responsibility => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Department => "example",

                  # is a x0:OtherContact1
                  # complex structure shown above
                  # occurs any number of times
                  Other => [{},],

                  # is a xs:string
                  # is optional
                  # Enum: CELL FAXX LETT MAIL ONLI PHON
                  PreferredMethod => "MAIL", }, },

              # is a x0:BranchAndFinancialInstitutionIdentification8
              # complex structure shown above
              # is optional
              AccountServicer => [{},], }, ],

          # is a x0:CashAccountReturnCriteria5
          # is optional
          ReturnCriteria =>
          { # sequence of NameInd, CurrencyInd, TypeInd,
            #   MultilateralLimitInd, MultilateralBalanceReturnCriteria,
            #   BilateralLimitInd, BilateralBalanceReturnCriteria,
            #   StandingOrderInd, AccountOwnerInd, AccountServicerInd

            # is a xs:boolean
            # is optional
            NameInd => "true",

            # is a xs:boolean
            # is optional
            CurrencyInd => "true",

            # is a xs:boolean
            # is optional
            TypeInd => "true",

            # is a xs:boolean
            # is optional
            MultilateralLimitInd => "true",

            # is a x0:CashBalanceReturnCriteria2
            # is optional
            MultilateralBalanceReturnCriteria =>
            { # sequence of TypeInd, StatusInd, ValueDateInd,
              #   ProcessingDateInd, NumberOfPaymentsInd

              # is a xs:boolean
              TypeInd => "true",

              # is a xs:boolean
              StatusInd => "true",

              # is a xs:boolean
              ValueDateInd => "true",

              # is a xs:boolean
              ProcessingDateInd => "true",

              # is a xs:boolean
              NumberOfPaymentsInd => "true", },

            # is a xs:boolean
            # is optional
            BilateralLimitInd => "true",

            # is a x0:CashBalanceReturnCriteria2
            # complex structure shown above
            # is optional
            BilateralBalanceReturnCriteria => [{},],

            # is a xs:boolean
            # is optional
            StandingOrderInd => "true",

            # is a xs:boolean
            # is optional
            AccountOwnerInd => "true",

            # is a xs:boolean
            # is optional
            AccountServicerInd => "true", }, }, }, },

    # is a x0:SupplementaryData1
    # occurs any number of times
    SupplementaryData =>
    [ { # sequence of PlaceAndName, Envelope

        # is a xs:string
        # is optional
        # length <= 350
        # length >= 1
        PlaceAndName => "example",

        # is a x0:SupplementaryDataEnvelope1
        Envelope =>
        { # sequence of ANY

          # any element in any namespace
          ANY => "Anything", }, }, ], }, }
