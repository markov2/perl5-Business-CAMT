# Describing complex x0:Document
#     {urn:iso:std:iso:20022:tech:xsd:camt.006.001.11}Document
#
# Produced by XML::Compile::Translate::Template version undef
#          on Mon Nov 25 15:46:19 2024
#
# BE WARNED: in most cases, the example below cannot be used without
# interpretation.  The comments will guide you.
#
# xmlns:x0        urn:iso:std:iso:20022:tech:xsd:camt.006.001.11
# xmlns:xs        http://www.w3.org/2001/XMLSchema

# is a x0:Document
{ # sequence of ReturnTransaction

  # is a x0:ReturnTransactionV11
  ReturnTransaction =>
  { # sequence of MessageHeader, ReportOrError, SupplementaryData

    # is a x0:MessageHeader8
    MessageHeader =>
    { # sequence of MessageId, CreationDateTime, MessagePagination,
      #   OrgnlBizQry, RequestType, QueryName

      # is a xs:string
      # length <= 35
      # length >= 1
      MessageId => "example",

      # is a xs:dateTime
      # is optional
      CreationDateTime => "2006-10-06T00:23:02Z",

      # is a x0:Pagination1
      # is optional
      MessagePagination =>
      { # sequence of PageNumber, LastPageInd

        # is a xs:string
        # Pattern: [0-9]{1,5}
        PageNumber => "example",

        # is a xs:boolean
        LastPageInd => "true", },

      # is a x0:OriginalBusinessQuery1
      # is optional
      OrgnlBizQry =>
      { # sequence of MessageId, MessageNameId, CreationDateTime

        # is a xs:string
        # length <= 35
        # length >= 1
        MessageId => "example",

        # is a xs:string
        # is optional
        # length <= 35
        # length >= 1
        MessageNameId => "example",

        # is a xs:dateTime
        # is optional
        CreationDateTime => "2006-10-06T00:23:02Z", },

      # is a x0:RequestType4Choice
      # is optional
      RequestType =>
      { # choice of PaymentControl, Enquiry, Proprietary

        # is a xs:string
        # length <= 4
        # length >= 1
        PaymentControl => "example",

        # is a xs:string
        # length <= 4
        # length >= 1
        Enquiry => "example",

        # is a x0:GenericIdentification1
        Proprietary =>
        { # sequence of Identification, SchemName, Issuer

          # is a xs:string
          # length <= 35
          # length >= 1
          Identification => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          SchemName => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          Issuer => "example", }, },

      # is a xs:string
      # is optional
      # length <= 35
      # length >= 1
      QueryName => "example", },

    # is a x0:TransactionReportOrError7Choice
    ReportOrError =>
    { # choice of BusinessReport, OperationalError

      # is a x0:Transactions11
      BusinessReport =>
      { # sequence of PaymentCommonInformation, TransactionsSummery,
        #   TransactionReport

        # is a x0:PaymentCommon6
        # is optional
        PaymentCommonInformation =>
        { # sequence of PaymentFrom, PaymentTo, CommonStatus,
          #   RequestedExecutionDate, EntryDate, CreditDebitInd, PaymentMethod

          # is a x0:System3
          # is optional
          PaymentFrom =>
          { # sequence of SystemId, MemberId, Country, AccountId

            # is a x0:MarketInfrastructureIdentification1Choice
            # is optional
            SystemId =>
            { # choice of Code, Proprietary

              # is a xs:string
              # length <= 3
              # length >= 1
              Code => "example",

              # is a xs:string
              # length <= 35
              # length >= 1
              Proprietary => "example", },

            # is a x0:BranchAndFinancialInstitutionIdentification8
            # is optional
            MemberId =>
            { # sequence of FinancialInstitutionId, BranchId

              # is a x0:FinancialInstitutionIdentification23
              FinancialInstitutionId =>
              { # sequence of BICFI, ClearSystemMemberId, LEI, Name,
                #   PostalAddress, Other

                # is a xs:string
                # is optional
                # Pattern:
                #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
                BICFI => "example",

                # is a x0:ClearingSystemMemberIdentification2
                # is optional
                ClearSystemMemberId =>
                { # sequence of ClearSystemId, MemberId

                  # is a x0:ClearingSystemIdentification2Choice
                  # is optional
                  ClearSystemId =>
                  { # choice of Code, Proprietary

                    # is a xs:string
                    # length <= 5
                    # length >= 1
                    Code => "example",

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Proprietary => "example", },

                  # is a xs:string
                  # length <= 35
                  # length >= 1
                  MemberId => "example", },

                # is a xs:string
                # is optional
                # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
                LEI => "example",

                # is a xs:string
                # is optional
                # length <= 140
                # length >= 1
                Name => "example",

                # is a x0:PostalAddress27
                # is optional
                PostalAddress =>
                { # sequence of AddressType, CareOf, Department, SubDepartment,
                  #   SteetName, BuildingNumber, BuildingName, Floor, UnitNumber,
                  #   Postbox, Room, PostalCode, TownName, TownLocationName,
                  #   DistrictName, CountrySubDivision, Country, AddressLine

                  # is a x0:AddressType3Choice
                  # is optional
                  AddressType =>
                  { # choice of Code, Proprietary

                    # is a xs:string
                    # Enum: ADDR BIZZ DLVY HOME MLTO PBOX
                    Code => "ADDR",

                    # is a x0:GenericIdentification30
                    # complex structure shown above
                    Proprietary => {}, },

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  CareOf => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Department => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  SubDepartment => "example",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  SteetName => "example",

                  # is a xs:string
                  # is optional
                  # length <= 16
                  # length >= 1
                  BuildingNumber => "example",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  BuildingName => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Floor => "example",

                  # is a xs:string
                  # is optional
                  # length <= 16
                  # length >= 1
                  UnitNumber => "example",

                  # is a xs:string
                  # is optional
                  # length <= 16
                  # length >= 1
                  Postbox => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Room => "example",

                  # is a xs:string
                  # is optional
                  # length <= 16
                  # length >= 1
                  PostalCode => "example",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  TownName => "example",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  TownLocationName => "example",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  DistrictName => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  CountrySubDivision => "example",

                  # is a xs:string
                  # is optional
                  # Pattern: [A-Z]{2,2}
                  Country => "example",

                  # is a xs:string
                  # occurs 0 <= # <= 7 times
                  # length <= 70
                  # length >= 1
                  AddressLine => [ "example", ], },

                # is a x0:GenericFinancialIdentification1
                # is optional
                Other =>
                { # sequence of Identification, SchemName, Issuer

                  # is a xs:string
                  # length <= 35
                  # length >= 1
                  Identification => "example",

                  # is a x0:FinancialIdentificationSchemeName1Choice
                  # is optional
                  SchemName =>
                  { # choice of Code, Proprietary

                    # is a xs:string
                    # length <= 4
                    # length >= 1
                    Code => "example",

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Proprietary => "example", },

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  Issuer => "example", }, },

              # is a x0:BranchData5
              # is optional
              BranchId =>
              { # sequence of Identification, LEI, Name, PostalAddress

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                Identification => "example",

                # is a xs:string
                # is optional
                # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
                LEI => "example",

                # is a xs:string
                # is optional
                # length <= 140
                # length >= 1
                Name => "example",

                # is a x0:PostalAddress27
                # complex structure shown above
                # is optional
                PostalAddress => [{},], }, },

            # is a xs:string
            # is optional
            # Pattern: [A-Z]{2,2}
            Country => "example",

            # is a x0:AccountIdentification4Choice
            # is optional
            AccountId =>
            { # choice of IBAN, Other

              # is a xs:string
              # Pattern: [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
              IBAN => "example",

              # is a x0:GenericAccountIdentification1
              # complex structure shown above
              Other => {}, }, },

          # is a x0:System3
          # complex structure shown above
          # is optional
          PaymentTo => [{},],

          # is a x0:PaymentStatus6
          # occurs any number of times
          CommonStatus =>
          [ { # sequence of Code, DateTime, Reason

              # is a x0:PaymentStatusCode6Choice
              # is optional
              Code =>
              { # choice of Pending, Final, RTGS, Settlement, Proprietary

                # is a xs:string
                # Enum: ACPD AUTD AVLB INVD MATD PCAN PFST PSTL RMLR SMLR
                #    SRBL SRML SSPD STLE STLM UMAC VALD
                Pending => "ACPD",

                # is a xs:string
                # Enum: CAND FNLD RJTD STLD
                Final => "STLD",

                # is a xs:string
                # length <= 4
                # length >= 1
                # Pattern: [a-zA-Z0-9]{1,4}
                RTGS => "example",

                # is a xs:string
                # length <= 4
                # length >= 1
                # Pattern: [a-zA-Z0-9]{1,4}
                Settlement => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                Proprietary => "example", },

              # is a x0:DateAndDateTime2Choice
              # is optional
              DateTime =>
              { # choice of Date, DateTime

                # is a xs:date
                Date => "2006-10-06",

                # is a xs:dateTime
                DateTime => "2006-10-06T00:23:02Z", },

              # is a x0:PaymentStatusReason1Choice
              # occurs any number of times
              Reason =>
              [ { # choice of Unmatched, Cancelled, Suspended,
                  #   PendingFailingSettlement, PendingSettlement,
                  #   ProprietaryRejection, Proprietary

                  # is a xs:string
                  # Enum: CADE CHAR CLAT CMIS CPCA DDAT DDEA DELN DEPT DMON
                  #    DQUA DSEC DTRA DTRD FORF FRAP ICAG ICUS IEXE IIND
                  #    LATE NCRR NMAS PHYS PLCE PODU REGD REPA REPO REPP
                  #    RERT RSPR RTGS SAFE SETR TERM VASU
                  Unmatched => "CMIS",

                  # is a xs:string
                  # Enum: CANI CANS CSUB
                  Cancelled => "CANI",

                  # is a xs:string
                  # Enum: SUBS SUBY
                  Suspended => "SUBY",

                  # is a xs:string
                  # Enum: AWMO AWSH BATC BENO BLOC BYIY CAIS CANR CERT CHAS
                  #    CLAC CLAT CMON COLL CPEC CYCL DEPO DKNY DOCC DOCY
                  #    FLIM GLOB GUAD INCA LAAW LACK LALO LATE LINK MINO
                  #    MLAT MONY MUNO NCON NEWI NOFX OBJT PART PHSE PREA
                  #    REFS SBLO SDUT STCD YCOL
                  PendingFailingSettlement => "AWMO",

                  # is a xs:string
                  # Enum: AWMO AWSH BATC BLOC CAIS CHAS CLAC CMON COLL CPEC
                  #    CYCL DEPO DOCC DOCY FLIM FUTU GLOB GUAD INCA LACK
                  #    LALO LINK MINO MONY MUNO NCON NEWI NMAS NOFX PART
                  #    PCAP PHSE PREA REFS REFU SBLO SDUT TAMM YCOL
                  PendingSettlement => "AWMO",

                  # is a x0:ProprietaryStatusJustification2
                  ProprietaryRejection =>
                  { # sequence of ProprietaryStatusReason, Reason

                    # is a xs:string
                    # length <= 4
                    # length >= 1
                    # Pattern: [a-zA-Z0-9]{1,4}
                    ProprietaryStatusReason => "example",

                    # is a xs:string
                    # length <= 256
                    # length >= 1
                    Reason => "example", },

                  # is a xs:string
                  # length <= 35
                  # length >= 1
                  Proprietary => "example", }, ], }, ],

          # is a x0:DateAndDateTime2Choice
          # complex structure shown above
          # is optional
          RequestedExecutionDate => [{},],

          # is a x0:DateAndDateTime2Choice
          # complex structure shown above
          # is optional
          EntryDate => [{},],

          # is a xs:string
          # is optional
          # Enum: CRDT DBIT
          CreditDebitInd => "CRDT",

          # is a x0:PaymentOrigin1Choice
          # is optional
          PaymentMethod =>
          { # choice of FINMT, XMLMessageName, Proprietary, Instrument

            # is a xs:string
            # Pattern: [0-9]{1,3}
            FINMT => "example",

            # is a xs:string
            # length <= 35
            # length >= 1
            XMLMessageName => "example",

            # is a xs:string
            # length <= 35
            # length >= 1
            Proprietary => "example",

            # is a xs:string
            # Enum: BCT BDT BKT CAN CCP CCT CDT CHK DCP RTI
            Instrument => "BDT", }, },

        # is a x0:NumberAndSumOfTransactions2
        # is optional
        TransactionsSummery =>
        { # sequence of NumberOfEntries, Sum, TotalNetEntryAmount,
          #   CreditDebitInd

          # is a xs:string
          # is optional
          # Pattern: [0-9]{1,15}
          NumberOfEntries => "example",

          # is a xs:decimal
          # is optional
          # faction digits is 17
          # total digits is 18
          Sum => 3.1415,

          # is a xs:decimal
          # is optional
          # faction digits is 17
          # total digits is 18
          TotalNetEntryAmount => 3.1415,

          # is a xs:string
          # is optional
          # Enum: CRDT DBIT
          CreditDebitInd => "CRDT", },

        # is a x0:TransactionReport8
        # occurs 1 <= # <= unbounded times
        TransactionReport =>
        [ { # sequence of PaymentId, TransactionOrError

            # is a x0:PaymentIdentification8Choice
            PaymentId =>
            { # choice of TransactionId, UETR, QueueId, LongBusinessId,
              #   ShortBusinessId, ProprietaryId

              # is a xs:string
              # length <= 35
              # length >= 1
              TransactionId => "example",

              # is a xs:string
              # Pattern:
              #    [a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}
              UETR => "example",

              # is a x0:QueueTransactionIdentification1
              QueueId =>
              { # sequence of QueueId, PositionInQueue

                # is a xs:string
                # length <= 16
                # length >= 1
                QueueId => "example",

                # is a xs:string
                # length <= 16
                # length >= 1
                PositionInQueue => "example", },

              # is a x0:LongPaymentIdentification4
              LongBusinessId =>
              { # sequence of TransactionId, UETR, IntrBkSttlmAmt,
                #   IntrBkSttlmDt, PaymentMethod, InstructingAgent,
                #   InstructedAgent, EntryType, EndToEndId

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                TransactionId => "example",

                # is a xs:string
                # is optional
                # Pattern:
                #    [a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}
                UETR => "example",

                # is a xs:decimal
                # faction digits is 5
                # value >= 0
                # total digits is 18
                IntrBkSttlmAmt => 3.1415,

                # is a xs:date
                IntrBkSttlmDt => "2006-10-06",

                # is a x0:PaymentOrigin1Choice
                # complex structure shown above
                # is optional
                PaymentMethod => [{},],

                # is a x0:BranchAndFinancialInstitutionIdentification8
                # complex structure shown above
                InstructingAgent => {},

                # is a x0:BranchAndFinancialInstitutionIdentification8
                # complex structure shown above
                InstructedAgent => {},

                # is a xs:string
                # is optional
                # Pattern: [BEOVW]{1,1}[0-9]{2,2}|DUM
                EntryType => "example",

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                EndToEndId => "example", },

              # is a x0:ShortPaymentIdentification4
              ShortBusinessId =>
              { # sequence of TransactionId, UETR, IntrBkSttlmDt, InstructingAgent

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                TransactionId => "example",

                # is a xs:string
                # is optional
                # Pattern:
                #    [a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}
                UETR => "example",

                # is a xs:date
                IntrBkSttlmDt => "2006-10-06",

                # is a x0:BranchAndFinancialInstitutionIdentification8
                # complex structure shown above
                InstructingAgent => {}, },

              # is a xs:string
              # length <= 70
              # length >= 1
              ProprietaryId => "example", },

            # is a x0:TransactionOrError6Choice
            TransactionOrError =>
            { # choice of Transaction, BusinessError

              # is a x0:Transaction159
              Transaction =>
              { # sequence of PaymentTo, PaymentFrom, CreditDebitInd, Payment,
                #   AccountEntry, SecuritiesTransactionReferences

                # is a x0:System3
                # complex structure shown above
                # is optional
                PaymentTo => [{},],

                # is a x0:System3
                # complex structure shown above
                # is optional
                PaymentFrom => [{},],

                # is a xs:string
                # is optional
                # Enum: CRDT DBIT
                CreditDebitInd => "CRDT",

                # is a x0:PaymentInstruction47
                # is optional
                Payment =>
                { # sequence of MessageId, RequestedExecutionDate, Status,
                  #   InstructedAmount, IntrBkSttlmAmt, Purpose, PaymentMethod,
                  #   Priority, ProcessingValidityTime, InstructionCopy, Type,
                  #   GnrtdOrdr, TransactionId, IntrBkSttlmDt, EndToEndId, Parties

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  MessageId => "example",

                  # is a x0:DateAndDateTime2Choice
                  # complex structure shown above
                  # is optional
                  RequestedExecutionDate => [{},],

                  # is a x0:PaymentStatus6
                  # complex structure shown above
                  # occurs any number of times
                  Status => [{},],

                  # is a x0:Amount3Choice
                  # is optional
                  InstructedAmount =>
                  { # choice of AmountWithCurrency, AmountWithoutCurrency

                    # is a x0:ActiveOrHistoricCurrencyAndAmount
                    # AmountWithCurrency is simple value with attributes
                    AmountWithCurrency =>
                    { # is a xs:string
                      # attribute Currency is required
                      # Pattern: [A-Z]{3,3}
                      Currency => "example",

                      # is a xs:decimal
                      # string content of the container
                      _ => 3.1415, },

                    # is a xs:decimal
                    # faction digits is 5
                    # value >= 0
                    # total digits is 18
                    AmountWithoutCurrency => 3.1415, },

                  # is a x0:Amount2Choice
                  # is optional
                  IntrBkSttlmAmt =>
                  { # choice of AmountWithoutCurrency, AmountWithCurrency

                    # is a xs:decimal
                    # faction digits is 5
                    # value >= 0
                    # total digits is 18
                    AmountWithoutCurrency => 3.1415,

                    # is a x0:ActiveCurrencyAndAmount
                    # AmountWithCurrency is simple value with attributes
                    AmountWithCurrency =>
                    { # is a xs:string
                      # attribute Currency is required
                      # Pattern: [A-Z]{3,3}
                      Currency => "example",

                      # is a xs:decimal
                      # string content of the container
                      _ => 3.1415, }, },

                  # is a xs:string
                  # is optional
                  # length <= 10
                  # length >= 1
                  Purpose => "example",

                  # is a x0:PaymentOrigin1Choice
                  # complex structure shown above
                  # is optional
                  PaymentMethod => [{},],

                  # is a x0:Priority1Choice
                  # is optional
                  Priority =>
                  { # choice of Code, Proprietary

                    # is a xs:string
                    # Enum: HIGH LOWW NORM URGT
                    Code => "HIGH",

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Proprietary => "example", },

                  # is a x0:DateTimePeriod1Choice
                  # is optional
                  ProcessingValidityTime =>
                  { # choice of FromDateTime, ToDateTime, DateTimeRange

                    # is a xs:dateTime
                    FromDateTime => "2006-10-06T00:23:02Z",

                    # is a xs:dateTime
                    ToDateTime => "2006-10-06T00:23:02Z",

                    # is a x0:DateTimePeriod1
                    DateTimeRange =>
                    { # sequence of FromDateTime, ToDateTime

                      # is a xs:dateTime
                      FromDateTime => "2006-10-06T00:23:02Z",

                      # is a xs:dateTime
                      ToDateTime => "2006-10-06T00:23:02Z", }, },

                  # is a xs:string
                  # is optional
                  # length <= 20000
                  # length >= 1
                  InstructionCopy => "example",

                  # is a x0:PaymentType4Choice
                  # is optional
                  Type =>
                  { # choice of Code, Proprietary

                    # is a xs:string
                    # Enum: BAL BCK CBH CBP CBS CLS CTR DPG DPH DPN DPP DPS
                    #    EXP LIQ LMT LOA LOR MGL OND STF TCH TCP TCS TRP
                    Code => "CBS",

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Proprietary => "example", },

                  # is a xs:boolean
                  # is optional
                  GnrtdOrdr => "true",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  TransactionId => "example",

                  # is a xs:date
                  # is optional
                  IntrBkSttlmDt => "2006-10-06",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  EndToEndId => "example",

                  # is a x0:PaymentTransactionParty4
                  # is optional
                  Parties =>
                  { # sequence of InstructingAgent, InstructedAgent,
                    #   UltimateDebitor, Debtor, DebtorAgent,
                    #   InstructingReimbursementAgent, InstructedReembursementAgent,
                    #   IntermediaryAgent1, IntermediaryAgent2, IntermediaryAgent3,
                    #   CreditorAgent, Creditor, UltimateCreditor

                    # is a x0:BranchAndFinancialInstitutionIdentification8
                    # complex structure shown above
                    # is optional
                    InstructingAgent => [{},],

                    # is a x0:BranchAndFinancialInstitutionIdentification8
                    # complex structure shown above
                    # is optional
                    InstructedAgent => [{},],

                    # is a x0:Party50Choice
                    # is optional
                    UltimateDebitor =>
                    { # choice of Party, Agent

                      # is a x0:PartyIdentification272
                      Party =>
                      { # sequence of Name, PostalAddress, Identification,
                        #   CountryOfResidence, ContactDetails

                        # is a xs:string
                        # is optional
                        # length <= 140
                        # length >= 1
                        Name => "example",

                        # is a x0:PostalAddress27
                        # complex structure shown above
                        # is optional
                        PostalAddress => [{},],

                        # is a x0:Party52Choice
                        # is optional
                        Identification =>
                        { # choice of OrganisationId, PrivateId

                          # is a x0:OrganisationIdentification39
                          OrganisationId =>
                          { # sequence of AnyBIC, LEI, Other

                            # is a xs:string
                            # is optional
                            # Pattern:
                            #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
                            AnyBIC => "example",

                            # is a xs:string
                            # is optional
                            # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
                            LEI => "example",

                            # is a x0:GenericOrganisationIdentification3
                            # complex structure shown above
                            # occurs any number of times
                            Other => [{},], },

                          # is a x0:PersonIdentification18
                          PrivateId =>
                          { # sequence of DateAndPlaceOfBirth, Other

                            # is a x0:DateAndPlaceOfBirth1
                            # is optional
                            DateAndPlaceOfBirth =>
                            { # sequence of BirthDate, ProvinceOfBrith, CityOfBirth,
                              #   CountryOfBirth

                              # is a xs:date
                              BirthDate => "2006-10-06",

                              # is a xs:string
                              # is optional
                              # length <= 35
                              # length >= 1
                              ProvinceOfBrith => "example",

                              # is a xs:string
                              # length <= 35
                              # length >= 1
                              CityOfBirth => "example",

                              # is a xs:string
                              # Pattern: [A-Z]{2,2}
                              CountryOfBirth => "example", },

                            # is a x0:GenericPersonIdentification2
                            # complex structure shown above
                            # occurs any number of times
                            Other => [{},], }, },

                        # is a xs:string
                        # is optional
                        # Pattern: [A-Z]{2,2}
                        CountryOfResidence => "example",

                        # is a x0:Contact13
                        # is optional
                        ContactDetails =>
                        { # sequence of NamePrefix, Name, PhoneNumber, MobNb, FaxNumber,
                          #   URLAdr, EmailAddress, EmailPurpose, JobTitle,
                          #   Responsibility, Department, Other, PreferredMethod

                          # is a xs:string
                          # is optional
                          # Enum: DOCT MADM MIKS MISS MIST
                          NamePrefix => "DOCT",

                          # is a xs:string
                          # is optional
                          # length <= 140
                          # length >= 1
                          Name => "example",

                          # is a xs:string
                          # is optional
                          # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                          PhoneNumber => "example",

                          # is a xs:string
                          # is optional
                          # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                          MobNb => "example",

                          # is a xs:string
                          # is optional
                          # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                          FaxNumber => "example",

                          # is a xs:string
                          # is optional
                          # length <= 2048
                          # length >= 1
                          URLAdr => "example",

                          # is a xs:string
                          # is optional
                          # length <= 256
                          # length >= 1
                          EmailAddress => "example",

                          # is a xs:string
                          # is optional
                          # length <= 35
                          # length >= 1
                          EmailPurpose => "example",

                          # is a xs:string
                          # is optional
                          # length <= 35
                          # length >= 1
                          JobTitle => "example",

                          # is a xs:string
                          # is optional
                          # length <= 35
                          # length >= 1
                          Responsibility => "example",

                          # is a xs:string
                          # is optional
                          # length <= 70
                          # length >= 1
                          Department => "example",

                          # is a x0:OtherContact1
                          # complex structure shown above
                          # occurs any number of times
                          Other => [{},],

                          # is a xs:string
                          # is optional
                          # Enum: CELL FAXX LETT MAIL ONLI PHON
                          PreferredMethod => "MAIL", }, },

                      # is a x0:BranchAndFinancialInstitutionIdentification8
                      # complex structure shown above
                      Agent => {}, },

                    # is a x0:Party50Choice
                    # complex structure shown above
                    # is optional
                    Debtor => [{},],

                    # is a x0:BranchAndFinancialInstitutionIdentification8
                    # complex structure shown above
                    # is optional
                    DebtorAgent => [{},],

                    # is a x0:BranchAndFinancialInstitutionIdentification8
                    # complex structure shown above
                    # is optional
                    InstructingReimbursementAgent => [{},],

                    # is a x0:BranchAndFinancialInstitutionIdentification8
                    # complex structure shown above
                    # is optional
                    InstructedReembursementAgent => [{},],

                    # is a x0:BranchAndFinancialInstitutionIdentification8
                    # complex structure shown above
                    # is optional
                    IntermediaryAgent1 => [{},],

                    # is a x0:BranchAndFinancialInstitutionIdentification8
                    # complex structure shown above
                    # is optional
                    IntermediaryAgent2 => [{},],

                    # is a x0:BranchAndFinancialInstitutionIdentification8
                    # complex structure shown above
                    # is optional
                    IntermediaryAgent3 => [{},],

                    # is a x0:BranchAndFinancialInstitutionIdentification8
                    # complex structure shown above
                    # is optional
                    CreditorAgent => [{},],

                    # is a x0:Party50Choice
                    # complex structure shown above
                    # is optional
                    Creditor => [{},],

                    # is a x0:Party50Choice
                    # complex structure shown above
                    # is optional
                    UltimateCreditor => [{},], }, },

                # is a x0:CashAccountAndEntry5
                # is optional
                AccountEntry =>
                { # sequence of Account, Entry

                  # is a x0:CashAccount43
                  Account =>
                  { # sequence of Identification, Type, Currency, Name, Proxy,
                    #   Owner, Servicer

                    # is a x0:AccountIdentification4Choice
                    # complex structure shown above
                    # is optional
                    Identification => [{},],

                    # is a x0:CashAccountType2Choice
                    # complex structure shown above
                    # is optional
                    Type => [{},],

                    # is a xs:string
                    # is optional
                    # Pattern: [A-Z]{3,3}
                    Currency => "example",

                    # is a xs:string
                    # is optional
                    # length <= 70
                    # length >= 1
                    Name => "example",

                    # is a x0:ProxyAccountIdentification1
                    # is optional
                    Proxy =>
                    { # sequence of Type, Identification

                      # is a x0:ProxyAccountType1Choice
                      # complex structure shown above
                      # is optional
                      Type => [{},],

                      # is a xs:string
                      # length <= 2048
                      # length >= 1
                      Identification => "example", },

                    # is a x0:PartyIdentification272
                    # complex structure shown above
                    # is optional
                    Owner => [{},],

                    # is a x0:BranchAndFinancialInstitutionIdentification8
                    # complex structure shown above
                    # is optional
                    Servicer => [{},], },

                  # is a x0:CashEntry2
                  # is optional
                  Entry =>
                  { # sequence of Amount, Date, Status, Identification,
                    #   StatementId, AccountServicerReference, AdditionalEntryInformation

                    # is a x0:ActiveCurrencyAndAmount
                    # Amount is simple value with attributes
                    # is optional
                    Amount =>
                    { # is a xs:string
                      # attribute Currency is required
                      # Pattern: [A-Z]{3,3}
                      Currency => "example",

                      # is a xs:decimal
                      # string content of the container
                      _ => 3.1415, },

                    # is a x0:DateAndDateTime2Choice
                    # complex structure shown above
                    # is optional
                    Date => [{},],

                    # is a xs:string
                    # is optional
                    # Enum: BOOK FUTR PDNG
                    Status => "BOOK",

                    # is a xs:string
                    # is optional
                    # length <= 35
                    # length >= 1
                    Identification => "example",

                    # is a xs:string
                    # is optional
                    # length <= 35
                    # length >= 1
                    StatementId => "example",

                    # is a xs:decimal
                    # is optional
                    # faction digits is 0
                    # total digits is 18
                    AccountServicerReference => 3.1415,

                    # is a xs:string
                    # occurs any number of times
                    # length <= 140
                    # length >= 1
                    AdditionalEntryInformation => [ "example", ], }, },

                # is a x0:SecuritiesTransactionReferences1
                # is optional
                SecuritiesTransactionReferences =>
                { # sequence of AccountOwnerTransactionId,
                  #   AccountServicerTransactionId,
                  #   MarketInfrastructureTransactionId, ProcessingId

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  AccountOwnerTransactionId => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  AccountServicerTransactionId => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  MarketInfrastructureTransactionId => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  ProcessingId => "example", }, },

              # is a x0:ErrorHandling5
              # occurs 1 <= # <= unbounded times
              BusinessError =>
              [ { # sequence of Error, Description

                  # is a x0:ErrorHandling3Choice
                  Error =>
                  { # choice of Code, Proprietary

                    # is a xs:string
                    # length <= 4
                    # length >= 1
                    Code => "example",

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Proprietary => "example", },

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  Description => "example", }, ], }, }, ], },

      # is a x0:ErrorHandling5
      # complex structure shown above
      # occurs 1 <= # <= unbounded times
      OperationalError => [{},], },

    # is a x0:SupplementaryData1
    # occurs any number of times
    SupplementaryData =>
    [ { # sequence of PlaceAndName, Envelope

        # is a xs:string
        # is optional
        # length <= 350
        # length >= 1
        PlaceAndName => "example",

        # is a x0:SupplementaryDataEnvelope1
        Envelope =>
        { # sequence of ANY

          # any element in any namespace
          ANY => "Anything", }, }, ], }, }
