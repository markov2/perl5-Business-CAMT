# Describing complex x0:Document
#     {urn:iso:std:iso:20022:tech:xsd:camt.005.001.11}Document
#
# Produced by XML::Compile::Translate::Template version undef
#          on Mon Nov 25 15:46:19 2024
#
# BE WARNED: in most cases, the example below cannot be used without
# interpretation.  The comments will guide you.
#
# xmlns:x0        urn:iso:std:iso:20022:tech:xsd:camt.005.001.11
# xmlns:xs        http://www.w3.org/2001/XMLSchema

# is a x0:Document
{ # sequence of GetTransaction

  # is a x0:GetTransactionV11
  GetTransaction =>
  { # sequence of MessageHeader, TransactionQueryDefinition,
    #   SupplementaryData

    # is a x0:MessageHeader9
    MessageHeader =>
    { # sequence of MessageId, CreationDateTime, RequestType

      # is a xs:string
      # length <= 35
      # length >= 1
      MessageId => "example",

      # is a xs:dateTime
      # is optional
      CreationDateTime => "2006-10-06T00:23:02Z",

      # is a x0:RequestType4Choice
      # is optional
      RequestType =>
      { # choice of PaymentControl, Enquiry, Proprietary

        # is a xs:string
        # length <= 4
        # length >= 1
        PaymentControl => "example",

        # is a xs:string
        # length <= 4
        # length >= 1
        Enquiry => "example",

        # is a x0:GenericIdentification1
        Proprietary =>
        { # sequence of Identification, SchemName, Issuer

          # is a xs:string
          # length <= 35
          # length >= 1
          Identification => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          SchemName => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          Issuer => "example", }, }, },

    # is a x0:TransactionQuery8
    # is optional
    TransactionQueryDefinition =>
    { # sequence of QueryType, TransactionCriteria

      # is a xs:string
      # is optional
      # Enum: ALLL CHNG DELD MODF
      QueryType => "ALLL",

      # is a x0:TransactionCriteria8Choice
      # is optional
      TransactionCriteria =>
      { # choice of QueryName, NewCriteria

        # is a xs:string
        # length <= 35
        # length >= 1
        QueryName => "example",

        # is a x0:TransactionCriteria11
        NewCriteria =>
        { # sequence of NewQryNm, SearchCriteria, StatementReport,
          #   ReturnCriteria

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          NewQryNm => "example",

          # is a x0:TransactionSearchCriteria11
          # occurs any number of times
          SearchCriteria =>
          [ { # sequence of PaymentTo, PaymentFrom, PaymentSchedule, AcctNtrySch

              # is a x0:SystemSearch5
              # occurs any number of times
              PaymentTo =>
              [ { # sequence of SystemId, MemberId, Country, AccountId

                  # is a x0:ClearingSystemIdentification3Choice
                  # occurs any number of times
                  SystemId =>
                  [ { # choice of Code, Proprietary

                      # is a xs:string
                      # length <= 3
                      # length >= 1
                      Code => "example",

                      # is a xs:string
                      # length <= 35
                      # length >= 1
                      Proprietary => "example", }, ],

                  # is a x0:BranchAndFinancialInstitutionIdentification8
                  # occurs any number of times
                  MemberId =>
                  [ { # sequence of FinancialInstitutionId, BranchId

                      # is a x0:FinancialInstitutionIdentification23
                      FinancialInstitutionId =>
                      { # sequence of BICFI, ClearSystemMemberId, LEI, Name,
                        #   PostalAddress, Other

                        # is a xs:string
                        # is optional
                        # Pattern:
                        #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
                        BICFI => "example",

                        # is a x0:ClearingSystemMemberIdentification2
                        # is optional
                        ClearSystemMemberId =>
                        { # sequence of ClearSystemId, MemberId

                          # is a x0:ClearingSystemIdentification2Choice
                          # is optional
                          ClearSystemId =>
                          { # choice of Code, Proprietary

                            # is a xs:string
                            # length <= 5
                            # length >= 1
                            Code => "example",

                            # is a xs:string
                            # length <= 35
                            # length >= 1
                            Proprietary => "example", },

                          # is a xs:string
                          # length <= 35
                          # length >= 1
                          MemberId => "example", },

                        # is a xs:string
                        # is optional
                        # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
                        LEI => "example",

                        # is a xs:string
                        # is optional
                        # length <= 140
                        # length >= 1
                        Name => "example",

                        # is a x0:PostalAddress27
                        # is optional
                        PostalAddress =>
                        { # sequence of AddressType, CareOf, Department, SubDepartment,
                          #   SteetName, BuildingNumber, BuildingName, Floor, UnitNumber,
                          #   Postbox, Room, PostalCode, TownName, TownLocationName,
                          #   DistrictName, CountrySubDivision, Country, AddressLine

                          # is a x0:AddressType3Choice
                          # is optional
                          AddressType =>
                          { # choice of Code, Proprietary

                            # is a xs:string
                            # Enum: ADDR BIZZ DLVY HOME MLTO PBOX
                            Code => "ADDR",

                            # is a x0:GenericIdentification30
                            # complex structure shown above
                            Proprietary => {}, },

                          # is a xs:string
                          # is optional
                          # length <= 140
                          # length >= 1
                          CareOf => "example",

                          # is a xs:string
                          # is optional
                          # length <= 70
                          # length >= 1
                          Department => "example",

                          # is a xs:string
                          # is optional
                          # length <= 70
                          # length >= 1
                          SubDepartment => "example",

                          # is a xs:string
                          # is optional
                          # length <= 140
                          # length >= 1
                          SteetName => "example",

                          # is a xs:string
                          # is optional
                          # length <= 16
                          # length >= 1
                          BuildingNumber => "example",

                          # is a xs:string
                          # is optional
                          # length <= 140
                          # length >= 1
                          BuildingName => "example",

                          # is a xs:string
                          # is optional
                          # length <= 70
                          # length >= 1
                          Floor => "example",

                          # is a xs:string
                          # is optional
                          # length <= 16
                          # length >= 1
                          UnitNumber => "example",

                          # is a xs:string
                          # is optional
                          # length <= 16
                          # length >= 1
                          Postbox => "example",

                          # is a xs:string
                          # is optional
                          # length <= 70
                          # length >= 1
                          Room => "example",

                          # is a xs:string
                          # is optional
                          # length <= 16
                          # length >= 1
                          PostalCode => "example",

                          # is a xs:string
                          # is optional
                          # length <= 140
                          # length >= 1
                          TownName => "example",

                          # is a xs:string
                          # is optional
                          # length <= 140
                          # length >= 1
                          TownLocationName => "example",

                          # is a xs:string
                          # is optional
                          # length <= 140
                          # length >= 1
                          DistrictName => "example",

                          # is a xs:string
                          # is optional
                          # length <= 35
                          # length >= 1
                          CountrySubDivision => "example",

                          # is a xs:string
                          # is optional
                          # Pattern: [A-Z]{2,2}
                          Country => "example",

                          # is a xs:string
                          # occurs 0 <= # <= 7 times
                          # length <= 70
                          # length >= 1
                          AddressLine => [ "example", ], },

                        # is a x0:GenericFinancialIdentification1
                        # is optional
                        Other =>
                        { # sequence of Identification, SchemName, Issuer

                          # is a xs:string
                          # length <= 35
                          # length >= 1
                          Identification => "example",

                          # is a x0:FinancialIdentificationSchemeName1Choice
                          # is optional
                          SchemName =>
                          { # choice of Code, Proprietary

                            # is a xs:string
                            # length <= 4
                            # length >= 1
                            Code => "example",

                            # is a xs:string
                            # length <= 35
                            # length >= 1
                            Proprietary => "example", },

                          # is a xs:string
                          # is optional
                          # length <= 35
                          # length >= 1
                          Issuer => "example", }, },

                      # is a x0:BranchData5
                      # is optional
                      BranchId =>
                      { # sequence of Identification, LEI, Name, PostalAddress

                        # is a xs:string
                        # is optional
                        # length <= 35
                        # length >= 1
                        Identification => "example",

                        # is a xs:string
                        # is optional
                        # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
                        LEI => "example",

                        # is a xs:string
                        # is optional
                        # length <= 140
                        # length >= 1
                        Name => "example",

                        # is a x0:PostalAddress27
                        # complex structure shown above
                        # is optional
                        PostalAddress => [{},], }, }, ],

                  # is a xs:string
                  # is optional
                  # Pattern: [A-Z]{2,2}
                  Country => "example",

                  # is a x0:AccountIdentification4Choice
                  # is optional
                  AccountId =>
                  { # choice of IBAN, Other

                    # is a xs:string
                    # Pattern: [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
                    IBAN => "example",

                    # is a x0:GenericAccountIdentification1
                    # complex structure shown above
                    Other => {}, }, }, ],

              # is a x0:SystemSearch5
              # complex structure shown above
              # occurs any number of times
              PaymentFrom => [{},],

              # is a x0:PaymentSearch10
              # is optional
              PaymentSchedule =>
              { # sequence of MessageId, RequestedExecutionDate, PaymentId,
                #   Status, InstructedAmount, InstructedAmountCurrency,
                #   CreditDebitInd, IntrBkSttlmAmt, IntrBkSttlmAmtCcy,
                #   PaymentMethod, PaymentType, Priority,
                #   ProcessingValidityTime, Instruction, TransactionId, UETR,
                #   IntrBkSttlmDt, EndToEndId, Parties

                # is a xs:string
                # occurs any number of times
                # length <= 35
                # length >= 1
                MessageId => [ "example", ],

                # is a x0:DateAndDateTimeSearch3Choice
                # occurs any number of times
                RequestedExecutionDate =>
                [ { # choice of DateTimeSearch, DateSearch

                    # is a x0:DateTimePeriod1Choice
                    DateTimeSearch =>
                    { # choice of FromDateTime, ToDateTime, DateTimeRange

                      # is a xs:dateTime
                      FromDateTime => "2006-10-06T00:23:02Z",

                      # is a xs:dateTime
                      ToDateTime => "2006-10-06T00:23:02Z",

                      # is a x0:DateTimePeriod1
                      DateTimeRange =>
                      { # sequence of FromDateTime, ToDateTime

                        # is a xs:dateTime
                        FromDateTime => "2006-10-06T00:23:02Z",

                        # is a xs:dateTime
                        ToDateTime => "2006-10-06T00:23:02Z", }, },

                    # is a x0:DatePeriodSearch1Choice
                    DateSearch =>
                    { # choice of FromDate, ToDate, FromToDate, EqualDate, NotEqualDate

                      # is a xs:date
                      FromDate => "2006-10-06",

                      # is a xs:date
                      ToDate => "2006-10-06",

                      # is a x0:DatePeriod2
                      FromToDate =>
                      { # sequence of FromDate, ToDate

                        # is a xs:date
                        FromDate => "2006-10-06",

                        # is a xs:date
                        ToDate => "2006-10-06", },

                      # is a xs:date
                      EqualDate => "2006-10-06",

                      # is a xs:date
                      NotEqualDate => "2006-10-06", }, }, ],

                # is a x0:PaymentIdentification8Choice
                # occurs any number of times
                PaymentId =>
                [ { # choice of TransactionId, UETR, QueueId, LongBusinessId,
                    #   ShortBusinessId, ProprietaryId

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    TransactionId => "example",

                    # is a xs:string
                    # Pattern:
                    #    [a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}
                    UETR => "example",

                    # is a x0:QueueTransactionIdentification1
                    QueueId =>
                    { # sequence of QueueId, PositionInQueue

                      # is a xs:string
                      # length <= 16
                      # length >= 1
                      QueueId => "example",

                      # is a xs:string
                      # length <= 16
                      # length >= 1
                      PositionInQueue => "example", },

                    # is a x0:LongPaymentIdentification4
                    LongBusinessId =>
                    { # sequence of TransactionId, UETR, IntrBkSttlmAmt,
                      #   IntrBkSttlmDt, PaymentMethod, InstructingAgent,
                      #   InstructedAgent, EntryType, EndToEndId

                      # is a xs:string
                      # is optional
                      # length <= 35
                      # length >= 1
                      TransactionId => "example",

                      # is a xs:string
                      # is optional
                      # Pattern:
                      #    [a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}
                      UETR => "example",

                      # is a xs:decimal
                      # faction digits is 5
                      # value >= 0
                      # total digits is 18
                      IntrBkSttlmAmt => 3.1415,

                      # is a xs:date
                      IntrBkSttlmDt => "2006-10-06",

                      # is a x0:PaymentOrigin1Choice
                      # is optional
                      PaymentMethod =>
                      { # choice of FINMT, XMLMessageName, Proprietary, Instrument

                        # is a xs:string
                        # Pattern: [0-9]{1,3}
                        FINMT => "example",

                        # is a xs:string
                        # length <= 35
                        # length >= 1
                        XMLMessageName => "example",

                        # is a xs:string
                        # length <= 35
                        # length >= 1
                        Proprietary => "example",

                        # is a xs:string
                        # Enum: BCT BDT BKT CAN CCP CCT CDT CHK DCP RTI
                        Instrument => "BDT", },

                      # is a x0:BranchAndFinancialInstitutionIdentification8
                      # complex structure shown above
                      InstructingAgent => {},

                      # is a x0:BranchAndFinancialInstitutionIdentification8
                      # complex structure shown above
                      InstructedAgent => {},

                      # is a xs:string
                      # is optional
                      # Pattern: [BEOVW]{1,1}[0-9]{2,2}|DUM
                      EntryType => "example",

                      # is a xs:string
                      # is optional
                      # length <= 35
                      # length >= 1
                      EndToEndId => "example", },

                    # is a x0:ShortPaymentIdentification4
                    ShortBusinessId =>
                    { # sequence of TransactionId, UETR, IntrBkSttlmDt, InstructingAgent

                      # is a xs:string
                      # is optional
                      # length <= 35
                      # length >= 1
                      TransactionId => "example",

                      # is a xs:string
                      # is optional
                      # Pattern:
                      #    [a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}
                      UETR => "example",

                      # is a xs:date
                      IntrBkSttlmDt => "2006-10-06",

                      # is a x0:BranchAndFinancialInstitutionIdentification8
                      # complex structure shown above
                      InstructingAgent => {}, },

                    # is a xs:string
                    # length <= 70
                    # length >= 1
                    ProprietaryId => "example", }, ],

                # is a x0:InstructionStatusSearch5
                # occurs any number of times
                Status =>
                [ { # sequence of PaymentInstructionStatus,
                    #   PaymentInstructionStatusDateTime, ProprietaryStatusReason

                    # is a x0:PaymentStatusCodeSearch2Choice
                    # is optional
                    PaymentInstructionStatus =>
                    { # choice of PendingStatus, FinalStatus, PendingAndFinalStatus

                      # is a xs:string
                      # Enum: ACPD AUTD AVLB INVD MATD PCAN PFST PSTL RMLR SMLR
                      #    SRBL SRML SSPD STLE STLM UMAC VALD
                      PendingStatus => "ACPD",

                      # is a xs:string
                      # Enum: CAND FNLD RJTD STLD
                      FinalStatus => "STLD",

                      # is a xs:string
                      # Enum: FINL PDNG
                      PendingAndFinalStatus => "PDNG", },

                    # is a x0:DateTimePeriod1Choice
                    # complex structure shown above
                    # is optional
                    PaymentInstructionStatusDateTime => [{},],

                    # is a xs:string
                    # is optional
                    # length <= 4
                    # length >= 1
                    # Pattern: [a-zA-Z0-9]{1,4}
                    ProprietaryStatusReason => "example", }, ],

                # is a x0:ActiveOrHistoricAmountRange2Choice
                # occurs any number of times
                InstructedAmount =>
                [ { # choice of ImpldCcyAndAmtRg, CurrencyAndAmountRange

                    # is a x0:ImpliedCurrencyAndAmountRange1
                    ImpldCcyAndAmtRg =>
                    { # sequence of Amount, CreditDebitInd

                      # is a x0:ImpliedCurrencyAmountRange1Choice
                      Amount =>
                      { # choice of FromAmount, ToAmount, FromToAmount, EqualAmount,
                        #   NotEqualAmount

                        # is a x0:AmountRangeBoundary1
                        FromAmount =>
                        { # sequence of BdryAmt, Included

                          # is a xs:decimal
                          # faction digits is 5
                          # value >= 0
                          # total digits is 18
                          BdryAmt => 3.1415,

                          # is a xs:boolean
                          Included => "true", },

                        # is a x0:AmountRangeBoundary1
                        # complex structure shown above
                        ToAmount => {},

                        # is a x0:FromToAmountRange1
                        FromToAmount =>
                        { # sequence of FromAmount, ToAmount

                          # is a x0:AmountRangeBoundary1
                          # complex structure shown above
                          FromAmount => {},

                          # is a x0:AmountRangeBoundary1
                          # complex structure shown above
                          ToAmount => {}, },

                        # is a xs:decimal
                        # faction digits is 5
                        # value >= 0
                        # total digits is 18
                        EqualAmount => 3.1415,

                        # is a xs:decimal
                        # faction digits is 5
                        # value >= 0
                        # total digits is 18
                        NotEqualAmount => 3.1415, },

                      # is a xs:string
                      # is optional
                      # Enum: CRDT DBIT
                      CreditDebitInd => "CRDT", },

                    # is a x0:ActiveOrHistoricCurrencyAndAmountRange2
                    CurrencyAndAmountRange =>
                    { # sequence of Amount, CreditDebitInd, Currency

                      # is a x0:ImpliedCurrencyAmountRange1Choice
                      # complex structure shown above
                      Amount => {},

                      # is a xs:string
                      # is optional
                      # Enum: CRDT DBIT
                      CreditDebitInd => "CRDT",

                      # is a xs:string
                      # Pattern: [A-Z]{3,3}
                      Currency => "example", }, }, ],

                # is a xs:string
                # occurs any number of times
                # Pattern: [A-Z]{3,3}
                InstructedAmountCurrency => [ "example", ],

                # is a xs:string
                # is optional
                # Enum: CRDT DBIT
                CreditDebitInd => "CRDT",

                # is a x0:ActiveAmountRange3Choice
                # occurs any number of times
                IntrBkSttlmAmt =>
                [ { # choice of ImpldCcyAndAmtRg, CurrencyAndAmountRange

                    # is a x0:ImpliedCurrencyAndAmountRange1
                    # complex structure shown above
                    ImpldCcyAndAmtRg => {},

                    # is a x0:ActiveCurrencyAndAmountRange3
                    # complex structure shown above
                    CurrencyAndAmountRange => {}, }, ],

                # is a xs:string
                # occurs any number of times
                # Pattern: [A-Z]{3,3}
                IntrBkSttlmAmtCcy => [ "example", ],

                # is a x0:PaymentOrigin1Choice
                # complex structure shown above
                # occurs any number of times
                PaymentMethod => [{},],

                # is a x0:PaymentType4Choice
                # occurs any number of times
                PaymentType =>
                [ { # choice of Code, Proprietary

                    # is a xs:string
                    # Enum: BAL BCK CBH CBP CBS CLS CTR DPG DPH DPN DPP DPS
                    #    EXP LIQ LMT LOA LOR MGL OND STF TCH TCP TCS TRP
                    Code => "CBS",

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Proprietary => "example", }, ],

                # is a x0:Priority1Choice
                # occurs any number of times
                Priority =>
                [ { # choice of Code, Proprietary

                    # is a xs:string
                    # Enum: HIGH LOWW NORM URGT
                    Code => "HIGH",

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Proprietary => "example", }, ],

                # is a x0:DateTimePeriod1Choice
                # complex structure shown above
                # occurs any number of times
                ProcessingValidityTime => [{},],

                # is a xs:string
                # occurs any number of times
                # Enum: PBEN TFRO TTIL
                Instruction => [ "PBEN", ],

                # is a xs:string
                # occurs any number of times
                # length <= 35
                # length >= 1
                TransactionId => [ "example", ],

                # is a xs:string
                # occurs any number of times
                # Pattern:
                #    [a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}
                UETR => [ "example", ],

                # is a xs:date
                # occurs any number of times
                IntrBkSttlmDt => [ "2006-10-06", ],

                # is a xs:string
                # occurs any number of times
                # length <= 35
                # length >= 1
                EndToEndId => [ "example", ],

                # is a x0:PaymentTransactionParty4
                # is optional
                Parties =>
                { # sequence of InstructingAgent, InstructedAgent,
                  #   UltimateDebitor, Debtor, DebtorAgent,
                  #   InstructingReimbursementAgent, InstructedReembursementAgent,
                  #   IntermediaryAgent1, IntermediaryAgent2, IntermediaryAgent3,
                  #   CreditorAgent, Creditor, UltimateCreditor

                  # is a x0:BranchAndFinancialInstitutionIdentification8
                  # complex structure shown above
                  # is optional
                  InstructingAgent => [{},],

                  # is a x0:BranchAndFinancialInstitutionIdentification8
                  # complex structure shown above
                  # is optional
                  InstructedAgent => [{},],

                  # is a x0:Party50Choice
                  # is optional
                  UltimateDebitor =>
                  { # choice of Party, Agent

                    # is a x0:PartyIdentification272
                    Party =>
                    { # sequence of Name, PostalAddress, Identification,
                      #   CountryOfResidence, ContactDetails

                      # is a xs:string
                      # is optional
                      # length <= 140
                      # length >= 1
                      Name => "example",

                      # is a x0:PostalAddress27
                      # complex structure shown above
                      # is optional
                      PostalAddress => [{},],

                      # is a x0:Party52Choice
                      # is optional
                      Identification =>
                      { # choice of OrganisationId, PrivateId

                        # is a x0:OrganisationIdentification39
                        OrganisationId =>
                        { # sequence of AnyBIC, LEI, Other

                          # is a xs:string
                          # is optional
                          # Pattern:
                          #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
                          AnyBIC => "example",

                          # is a xs:string
                          # is optional
                          # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
                          LEI => "example",

                          # is a x0:GenericOrganisationIdentification3
                          # complex structure shown above
                          # occurs any number of times
                          Other => [{},], },

                        # is a x0:PersonIdentification18
                        PrivateId =>
                        { # sequence of DateAndPlaceOfBirth, Other

                          # is a x0:DateAndPlaceOfBirth1
                          # is optional
                          DateAndPlaceOfBirth =>
                          { # sequence of BirthDate, ProvinceOfBrith, CityOfBirth,
                            #   CountryOfBirth

                            # is a xs:date
                            BirthDate => "2006-10-06",

                            # is a xs:string
                            # is optional
                            # length <= 35
                            # length >= 1
                            ProvinceOfBrith => "example",

                            # is a xs:string
                            # length <= 35
                            # length >= 1
                            CityOfBirth => "example",

                            # is a xs:string
                            # Pattern: [A-Z]{2,2}
                            CountryOfBirth => "example", },

                          # is a x0:GenericPersonIdentification2
                          # complex structure shown above
                          # occurs any number of times
                          Other => [{},], }, },

                      # is a xs:string
                      # is optional
                      # Pattern: [A-Z]{2,2}
                      CountryOfResidence => "example",

                      # is a x0:Contact13
                      # is optional
                      ContactDetails =>
                      { # sequence of NamePrefix, Name, PhoneNumber, MobNb, FaxNumber,
                        #   URLAdr, EmailAddress, EmailPurpose, JobTitle,
                        #   Responsibility, Department, Other, PreferredMethod

                        # is a xs:string
                        # is optional
                        # Enum: DOCT MADM MIKS MISS MIST
                        NamePrefix => "DOCT",

                        # is a xs:string
                        # is optional
                        # length <= 140
                        # length >= 1
                        Name => "example",

                        # is a xs:string
                        # is optional
                        # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                        PhoneNumber => "example",

                        # is a xs:string
                        # is optional
                        # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                        MobNb => "example",

                        # is a xs:string
                        # is optional
                        # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                        FaxNumber => "example",

                        # is a xs:string
                        # is optional
                        # length <= 2048
                        # length >= 1
                        URLAdr => "example",

                        # is a xs:string
                        # is optional
                        # length <= 256
                        # length >= 1
                        EmailAddress => "example",

                        # is a xs:string
                        # is optional
                        # length <= 35
                        # length >= 1
                        EmailPurpose => "example",

                        # is a xs:string
                        # is optional
                        # length <= 35
                        # length >= 1
                        JobTitle => "example",

                        # is a xs:string
                        # is optional
                        # length <= 35
                        # length >= 1
                        Responsibility => "example",

                        # is a xs:string
                        # is optional
                        # length <= 70
                        # length >= 1
                        Department => "example",

                        # is a x0:OtherContact1
                        # complex structure shown above
                        # occurs any number of times
                        Other => [{},],

                        # is a xs:string
                        # is optional
                        # Enum: CELL FAXX LETT MAIL ONLI PHON
                        PreferredMethod => "MAIL", }, },

                    # is a x0:BranchAndFinancialInstitutionIdentification8
                    # complex structure shown above
                    Agent => {}, },

                  # is a x0:Party50Choice
                  # complex structure shown above
                  # is optional
                  Debtor => [{},],

                  # is a x0:BranchAndFinancialInstitutionIdentification8
                  # complex structure shown above
                  # is optional
                  DebtorAgent => [{},],

                  # is a x0:BranchAndFinancialInstitutionIdentification8
                  # complex structure shown above
                  # is optional
                  InstructingReimbursementAgent => [{},],

                  # is a x0:BranchAndFinancialInstitutionIdentification8
                  # complex structure shown above
                  # is optional
                  InstructedReembursementAgent => [{},],

                  # is a x0:BranchAndFinancialInstitutionIdentification8
                  # complex structure shown above
                  # is optional
                  IntermediaryAgent1 => [{},],

                  # is a x0:BranchAndFinancialInstitutionIdentification8
                  # complex structure shown above
                  # is optional
                  IntermediaryAgent2 => [{},],

                  # is a x0:BranchAndFinancialInstitutionIdentification8
                  # complex structure shown above
                  # is optional
                  IntermediaryAgent3 => [{},],

                  # is a x0:BranchAndFinancialInstitutionIdentification8
                  # complex structure shown above
                  # is optional
                  CreditorAgent => [{},],

                  # is a x0:Party50Choice
                  # complex structure shown above
                  # is optional
                  Creditor => [{},],

                  # is a x0:Party50Choice
                  # complex structure shown above
                  # is optional
                  UltimateCreditor => [{},], }, },

              # is a x0:CashAccountEntrySearch8
              # is optional
              AcctNtrySch =>
              { # sequence of AccountId, EntryAmount, EntryAmountCurrency,
                #   CreditDebitInd, EntryStatus, EntryDate, AccountOwner,
                #   AccountServicer

                # is a x0:AccountIdentificationSearchCriteria2Choice
                # complex structure shown above
                # occurs any number of times
                AccountId => [{},],

                # is a x0:ActiveOrHistoricAmountRange2Choice
                # complex structure shown above
                # occurs any number of times
                EntryAmount => [{},],

                # is a xs:string
                # occurs any number of times
                # Pattern: [A-Z]{3,3}
                EntryAmountCurrency => [ "example", ],

                # is a xs:string
                # is optional
                # Enum: CRDT DBIT
                CreditDebitInd => "CRDT",

                # is a xs:string
                # occurs any number of times
                # Enum: BOOK FUTR PDNG
                EntryStatus => [ "BOOK", ],

                # is a x0:DateAndDateTimeSearch3Choice
                # complex structure shown above
                # occurs any number of times
                EntryDate => [{},],

                # is a x0:PartyIdentification272
                # complex structure shown above
                # is optional
                AccountOwner => [{},],

                # is a x0:BranchAndFinancialInstitutionIdentification8
                # complex structure shown above
                # is optional
                AccountServicer => [{},], }, }, ],

          # is a xs:string
          # is optional
          # Enum: PRPR STND
          StatementReport => "STND",

          # is a x0:TransactionReturnCriteria5
          # is optional
          ReturnCriteria =>
          { # sequence of PaymentToReturnCriteria,
            #   PaymentFromReturnCriteria, AccountCashEntryReturnCriteria,
            #   PaymentReturnCriteria

            # is a x0:SystemReturnCriteria2
            # is optional
            PaymentToReturnCriteria =>
            { # sequence of SystemIdInd, MemberIdInd, CountryIdInd, AccountIdInd

              # is a xs:boolean
              # is optional
              SystemIdInd => "true",

              # is a xs:boolean
              # is optional
              MemberIdInd => "true",

              # is a xs:boolean
              # is optional
              CountryIdInd => "true",

              # is a xs:boolean
              # is optional
              AccountIdInd => "true", },

            # is a x0:SystemReturnCriteria2
            # complex structure shown above
            # is optional
            PaymentFromReturnCriteria => [{},],

            # is a x0:AccountCashEntryReturnCriteria3
            # is optional
            AccountCashEntryReturnCriteria =>
            { # sequence of EntryReferenceInd, AccountTypeInd,
              #   EntryAmountInd, AccountCurrencyInd, EntryStatusInd,
              #   EntryDateInd, AccountServicerInd, AccountOwnerInd

              # is a xs:boolean
              # is optional
              EntryReferenceInd => "true",

              # is a xs:boolean
              # is optional
              AccountTypeInd => "true",

              # is a xs:boolean
              # is optional
              EntryAmountInd => "true",

              # is a xs:boolean
              # is optional
              AccountCurrencyInd => "true",

              # is a xs:boolean
              # is optional
              EntryStatusInd => "true",

              # is a xs:boolean
              # is optional
              EntryDateInd => "true",

              # is a xs:boolean
              # is optional
              AccountServicerInd => "true",

              # is a xs:boolean
              # is optional
              AccountOwnerInd => "true", },

            # is a x0:PaymentReturnCriteria4
            # is optional
            PaymentReturnCriteria =>
            { # sequence of MessageIdInd, RequestedExecutionDateInd,
              #   InstrInd, InstrStsRtrCrit, InstructedAmountInd,
              #   CreditDebitInd, IntrBkSttlmAmtInd, PriorityInd,
              #   ProcessingValidityTimeInd, PurposeInd, InstructionCopyInd,
              #   PaymentMessageTypeInd, PaymentTypeInd, TransactionIdInd,
              #   IntrBkSttlmDtInd, EndToEndIdInd, PaymentMethodInd,
              #   DebtorInd, DebtorAgentInd, InstructingReimbursementAgentInd,
              #   InstructedReembursementAgentInd, IntermediaryInd,
              #   CreditorAgentInd, CreditorInd

              # is a xs:boolean
              # is optional
              MessageIdInd => "true",

              # is a xs:boolean
              # is optional
              RequestedExecutionDateInd => "true",

              # is a xs:boolean
              # is optional
              InstrInd => "true",

              # is a x0:InstructionStatusReturnCriteria1
              # is optional
              InstrStsRtrCrit =>
              { # sequence of PaymentInstructionStatusInd,
                #   PaymentInstructionStatusDateTimeInd,
                #   PaymentInstructionStatusReasonInd

                # is a xs:boolean
                PaymentInstructionStatusInd => "true",

                # is a xs:boolean
                # is optional
                PaymentInstructionStatusDateTimeInd => "true",

                # is a xs:boolean
                # is optional
                PaymentInstructionStatusReasonInd => "true", },

              # is a xs:boolean
              # is optional
              InstructedAmountInd => "true",

              # is a xs:boolean
              # is optional
              CreditDebitInd => "true",

              # is a xs:boolean
              # is optional
              IntrBkSttlmAmtInd => "true",

              # is a xs:boolean
              # is optional
              PriorityInd => "true",

              # is a xs:boolean
              # is optional
              ProcessingValidityTimeInd => "true",

              # is a xs:boolean
              # is optional
              PurposeInd => "true",

              # is a xs:boolean
              # is optional
              InstructionCopyInd => "true",

              # is a xs:boolean
              # is optional
              PaymentMessageTypeInd => "true",

              # is a xs:boolean
              # is optional
              PaymentTypeInd => "true",

              # is a xs:boolean
              # is optional
              TransactionIdInd => "true",

              # is a xs:boolean
              # is optional
              IntrBkSttlmDtInd => "true",

              # is a xs:boolean
              # is optional
              EndToEndIdInd => "true",

              # is a xs:boolean
              # is optional
              PaymentMethodInd => "true",

              # is a xs:boolean
              # is optional
              DebtorInd => "true",

              # is a xs:boolean
              # is optional
              DebtorAgentInd => "true",

              # is a xs:boolean
              # is optional
              InstructingReimbursementAgentInd => "true",

              # is a xs:boolean
              # is optional
              InstructedReembursementAgentInd => "true",

              # is a xs:boolean
              # is optional
              IntermediaryInd => "true",

              # is a xs:boolean
              # is optional
              CreditorAgentInd => "true",

              # is a xs:boolean
              # is optional
              CreditorInd => "true", }, }, }, }, },

    # is a x0:SupplementaryData1
    # occurs any number of times
    SupplementaryData =>
    [ { # sequence of PlaceAndName, Envelope

        # is a xs:string
        # is optional
        # length <= 350
        # length >= 1
        PlaceAndName => "example",

        # is a x0:SupplementaryDataEnvelope1
        Envelope =>
        { # sequence of ANY

          # any element in any namespace
          ANY => "Anything", }, }, ], }, }
