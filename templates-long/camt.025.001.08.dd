# Describing complex x0:Document
#     {urn:iso:std:iso:20022:tech:xsd:camt.025.001.08}Document
#
# Produced by XML::Compile::Translate::Template version undef
#          on Sun Dec  1 23:10:57 2024
#
# BE WARNED: in most cases, the example below cannot be used without
# interpretation.  The comments will guide you.
#
# xmlns:x0        urn:iso:std:iso:20022:tech:xsd:camt.025.001.08
# xmlns:xs        http://www.w3.org/2001/XMLSchema

# is a x0:Document
{ # sequence of Receipt

  # is a x0:ReceiptV08
  Receipt =>
  { # sequence of MessageHeader, ReceiptDetails, SupplementaryData

    # is a x0:MessageHeader9
    MessageHeader =>
    { # sequence of MessageId, CreationDateTime, RequestType

      # is a xs:string
      # length <= 35
      # length >= 1
      MessageId => "example",

      # is a xs:dateTime
      # is optional
      CreationDateTime => "2006-10-06T00:23:02Z",

      # is a x0:RequestType4Choice
      # is optional
      RequestType =>
      { # choice of PaymentControl, Enquiry, Proprietary

        # is a xs:string
        # length <= 4
        # length >= 1
        PaymentControl => "example",

        # is a xs:string
        # length <= 4
        # length >= 1
        Enquiry => "example",

        # is a x0:GenericIdentification1
        Proprietary =>
        { # sequence of Identification, SchemeName, Issuer

          # is a xs:string
          # length <= 35
          # length >= 1
          Identification => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          SchemeName => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          Issuer => "example", }, }, },

    # is a x0:Receipt6
    # occurs 1 <= # <= unbounded times
    ReceiptDetails =>
    [ { # sequence of OriginalMessageId, OriginalPaymentId, RequestHandling

        # is a x0:OriginalMessageAndIssuer1
        OriginalMessageId =>
        { # sequence of MessageId, MessageNameId, OriginatorName

          # is a xs:string
          # length <= 35
          # length >= 1
          MessageId => "example",

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          MessageNameId => "example",

          # is a xs:string
          # is optional
          # length <= 70
          # length >= 1
          OriginatorName => "example", },

        # is a x0:PaymentIdentification8Choice
        # is optional
        OriginalPaymentId =>
        { # choice of TransactionId, UETR, QueueId, LongBusinessId,
          #   ShortBusinessId, ProprietaryId

          # is a xs:string
          # length <= 35
          # length >= 1
          TransactionId => "example",

          # is a xs:string
          # Pattern:
          #    [a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}
          UETR => "example",

          # is a x0:QueueTransactionIdentification1
          QueueId =>
          { # sequence of QueueId, PositionInQueue

            # is a xs:string
            # length <= 16
            # length >= 1
            QueueId => "example",

            # is a xs:string
            # length <= 16
            # length >= 1
            PositionInQueue => "example", },

          # is a x0:LongPaymentIdentification4
          LongBusinessId =>
          { # sequence of TransactionId, UETR, InterBankSettlementAmount,
            #   InterBankSettlementDate, PaymentMethod, InstructingAgent,
            #   InstructedAgent, EntryType, EndToEndId

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            TransactionId => "example",

            # is a xs:string
            # is optional
            # Pattern:
            #    [a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}
            UETR => "example",

            # is a xs:decimal
            # faction digits is 5
            # value >= 0
            # total digits is 18
            InterBankSettlementAmount => 3.1415,

            # is a xs:date
            InterBankSettlementDate => "2006-10-06",

            # is a x0:PaymentOrigin1Choice
            # is optional
            PaymentMethod =>
            { # choice of FINMessageType, XMLMessageName, Proprietary, Instrument

              # is a xs:string
              # Pattern: [0-9]{1,3}
              FINMessageType => "example",

              # is a xs:string
              # length <= 35
              # length >= 1
              XMLMessageName => "example",

              # is a xs:string
              # length <= 35
              # length >= 1
              Proprietary => "example",

              # is a xs:string
              # Enum: BCT BDT BKT CAN CCP CCT CDT CHK DCP RTI
              Instrument => "BDT", },

            # is a x0:BranchAndFinancialInstitutionIdentification8
            InstructingAgent =>
            { # sequence of FinancialInstitutionId, BranchId

              # is a x0:FinancialInstitutionIdentification23
              FinancialInstitutionId =>
              { # sequence of BICFI, ClearSystemMemberId, LEI, Name,
                #   PostalAddress, Other

                # is a xs:string
                # is optional
                # Pattern:
                #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
                BICFI => "example",

                # is a x0:ClearingSystemMemberIdentification2
                # is optional
                ClearSystemMemberId =>
                { # sequence of ClearSystemId, MemberId

                  # is a x0:ClearingSystemIdentification2Choice
                  # is optional
                  ClearSystemId =>
                  { # choice of Code, Proprietary

                    # is a xs:string
                    # length <= 5
                    # length >= 1
                    Code => "example",

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Proprietary => "example", },

                  # is a xs:string
                  # length <= 35
                  # length >= 1
                  MemberId => "example", },

                # is a xs:string
                # is optional
                # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
                LEI => "example",

                # is a xs:string
                # is optional
                # length <= 140
                # length >= 1
                Name => "example",

                # is a x0:PostalAddress27
                # is optional
                PostalAddress =>
                { # sequence of AddressType, CareOf, Department, SubDepartment,
                  #   SteetName, BuildingNumber, BuildingName, Floor, UnitNumber,
                  #   Postbox, Room, PostalCode, TownName, TownLocationName,
                  #   DistrictName, CountrySubDivision, Country, AddressLine

                  # is a x0:AddressType3Choice
                  # is optional
                  AddressType =>
                  { # choice of Code, Proprietary

                    # is a xs:string
                    # Enum: ADDR BIZZ DLVY HOME MLTO PBOX
                    Code => "ADDR",

                    # is a x0:GenericIdentification30
                    # complex structure shown above
                    Proprietary => {}, },

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  CareOf => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Department => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  SubDepartment => "example",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  SteetName => "example",

                  # is a xs:string
                  # is optional
                  # length <= 16
                  # length >= 1
                  BuildingNumber => "example",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  BuildingName => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Floor => "example",

                  # is a xs:string
                  # is optional
                  # length <= 16
                  # length >= 1
                  UnitNumber => "example",

                  # is a xs:string
                  # is optional
                  # length <= 16
                  # length >= 1
                  Postbox => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Room => "example",

                  # is a xs:string
                  # is optional
                  # length <= 16
                  # length >= 1
                  PostalCode => "example",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  TownName => "example",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  TownLocationName => "example",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  DistrictName => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  CountrySubDivision => "example",

                  # is a xs:string
                  # is optional
                  # Pattern: [A-Z]{2,2}
                  Country => "example",

                  # is a xs:string
                  # occurs 0 <= # <= 7 times
                  # length <= 70
                  # length >= 1
                  AddressLine => [ "example", ], },

                # is a x0:GenericFinancialIdentification1
                # is optional
                Other =>
                { # sequence of Identification, SchemeName, Issuer

                  # is a xs:string
                  # length <= 35
                  # length >= 1
                  Identification => "example",

                  # is a x0:FinancialIdentificationSchemeName1Choice
                  # is optional
                  SchemeName =>
                  { # choice of Code, Proprietary

                    # is a xs:string
                    # length <= 4
                    # length >= 1
                    Code => "example",

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Proprietary => "example", },

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  Issuer => "example", }, },

              # is a x0:BranchData5
              # is optional
              BranchId =>
              { # sequence of Identification, LEI, Name, PostalAddress

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                Identification => "example",

                # is a xs:string
                # is optional
                # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
                LEI => "example",

                # is a xs:string
                # is optional
                # length <= 140
                # length >= 1
                Name => "example",

                # is a x0:PostalAddress27
                # complex structure shown above
                # is optional
                PostalAddress => [{},], }, },

            # is a x0:BranchAndFinancialInstitutionIdentification8
            # complex structure shown above
            InstructedAgent => {},

            # is a xs:string
            # is optional
            # Pattern: [BEOVW]{1,1}[0-9]{2,2}|DUM
            EntryType => "example",

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            EndToEndId => "example", },

          # is a x0:ShortPaymentIdentification4
          ShortBusinessId =>
          { # sequence of TransactionId, UETR, InterBankSettlementDate,
            #   InstructingAgent

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            TransactionId => "example",

            # is a xs:string
            # is optional
            # Pattern:
            #    [a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}
            UETR => "example",

            # is a xs:date
            InterBankSettlementDate => "2006-10-06",

            # is a x0:BranchAndFinancialInstitutionIdentification8
            # complex structure shown above
            InstructingAgent => {}, },

          # is a xs:string
          # length <= 70
          # length >= 1
          ProprietaryId => "example", },

        # is a x0:RequestHandling3
        # occurs any number of times
        RequestHandling =>
        [ { # sequence of Status, StatusReason

            # is a x0:RequestStatus1Choice
            Status =>
            { # choice of Code, Proprietary

              # is a xs:string
              # length <= 4
              # length >= 1
              Code => "example",

              # is a xs:string
              # length <= 35
              # length >= 1
              Proprietary => "example", },

            # is a x0:StatusReasonInformation14
            # is optional
            StatusReason =>
            { # sequence of Originator, Reason, AdditionalInformation

              # is a x0:PartyIdentification272
              # is optional
              Originator =>
              { # sequence of Name, PostalAddress, Identification,
                #   CountryOfResidence, ContactDetails

                # is a xs:string
                # is optional
                # length <= 140
                # length >= 1
                Name => "example",

                # is a x0:PostalAddress27
                # complex structure shown above
                # is optional
                PostalAddress => [{},],

                # is a x0:Party52Choice
                # is optional
                Identification =>
                { # choice of OrganisationId, PersonId

                  # is a x0:OrganisationIdentification39
                  OrganisationId =>
                  { # sequence of AnyBIC, LEI, Other

                    # is a xs:string
                    # is optional
                    # Pattern:
                    #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
                    AnyBIC => "example",

                    # is a xs:string
                    # is optional
                    # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
                    LEI => "example",

                    # is a x0:GenericOrganisationIdentification3
                    # complex structure shown above
                    # occurs any number of times
                    Other => [{},], },

                  # is a x0:PersonIdentification18
                  PersonId =>
                  { # sequence of DateAndPlaceOfBirth, Other

                    # is a x0:DateAndPlaceOfBirth1
                    # is optional
                    DateAndPlaceOfBirth =>
                    { # sequence of BirthDate, ProvinceOfBrith, CityOfBirth,
                      #   CountryOfBirth

                      # is a xs:date
                      BirthDate => "2006-10-06",

                      # is a xs:string
                      # is optional
                      # length <= 35
                      # length >= 1
                      ProvinceOfBrith => "example",

                      # is a xs:string
                      # length <= 35
                      # length >= 1
                      CityOfBirth => "example",

                      # is a xs:string
                      # Pattern: [A-Z]{2,2}
                      CountryOfBirth => "example", },

                    # is a x0:GenericPersonIdentification2
                    # complex structure shown above
                    # occurs any number of times
                    Other => [{},], }, },

                # is a xs:string
                # is optional
                # Pattern: [A-Z]{2,2}
                CountryOfResidence => "example",

                # is a x0:Contact13
                # is optional
                ContactDetails =>
                { # sequence of NamePrefix, Name, PhoneNumber,
                  #   MobilePhoneNumber, FaxNumber, URLAddress, EmailAddress,
                  #   EmailPurpose, JobTitle, Responsibility, Department, Other,
                  #   PreferredMethod

                  # is a xs:string
                  # is optional
                  # Enum: DOCT MADM MIKS MISS MIST
                  NamePrefix => "DOCT",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  Name => "example",

                  # is a xs:string
                  # is optional
                  # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                  PhoneNumber => "example",

                  # is a xs:string
                  # is optional
                  # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                  MobilePhoneNumber => "example",

                  # is a xs:string
                  # is optional
                  # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                  FaxNumber => "example",

                  # is a xs:string
                  # is optional
                  # length <= 2048
                  # length >= 1
                  URLAddress => "example",

                  # is a xs:string
                  # is optional
                  # length <= 256
                  # length >= 1
                  EmailAddress => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  EmailPurpose => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  JobTitle => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  Responsibility => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Department => "example",

                  # is a x0:OtherContact1
                  # complex structure shown above
                  # occurs any number of times
                  Other => [{},],

                  # is a xs:string
                  # is optional
                  # Enum: CELL FAXX LETT MAIL ONLI PHON
                  PreferredMethod => "MAIL", }, },

              # is a x0:StatusReason6Choice
              # is optional
              Reason =>
              { # choice of Code, Proprietary

                # is a xs:string
                # length <= 4
                # length >= 1
                Code => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                Proprietary => "example", },

              # is a xs:string
              # occurs any number of times
              # length <= 105
              # length >= 1
              AdditionalInformation => [ "example", ], }, }, ], }, ],

    # is a x0:SupplementaryData1
    # occurs any number of times
    SupplementaryData =>
    [ { # sequence of PlaceAndName, Envelope

        # is a xs:string
        # is optional
        # length <= 350
        # length >= 1
        PlaceAndName => "example",

        # is a x0:SupplementaryDataEnvelope1
        Envelope =>
        { # sequence of ANY

          # any element in any namespace
          ANY => "Anything", }, }, ], }, }
