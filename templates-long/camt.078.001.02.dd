# Describing complex x0:Document
#     {urn:iso:std:iso:20022:tech:xsd:camt.078.001.02}Document
#
# Produced by XML::Compile::Translate::Template version undef
#          on Mon Nov 25 15:46:21 2024
#
# BE WARNED: in most cases, the example below cannot be used without
# interpretation.  The comments will guide you.
#
# xmlns:x0        urn:iso:std:iso:20022:tech:xsd:camt.078.001.02
# xmlns:xs        http://www.w3.org/2001/XMLSchema

# is a x0:Document
{ # sequence of IntraBalMvmntQry

  # is a x0:IntraBalanceMovementQueryV02
  IntraBalMvmntQry =>
  { # sequence of Identification, QueryDefinition, SupplementaryData

    # is a x0:DocumentIdentification51
    # is optional
    Identification =>
    { # sequence of Identification, CreationDateTime, CopyDuplicate,
      #   MessageOriginator, MessageRecipient

      # is a xs:string
      # length <= 35
      # length >= 1
      Identification => "example",

      # is a x0:DateAndDateTime2Choice
      # is optional
      CreationDateTime =>
      { # choice of Date, DateTime

        # is a xs:date
        Date => "2006-10-06",

        # is a xs:dateTime
        DateTime => "2006-10-06T00:23:02Z", },

      # is a xs:string
      # is optional
      # Enum: CODU COPY DUPL
      CopyDuplicate => "CODU",

      # is a x0:PartyIdentification136
      # is optional
      MessageOriginator =>
      { # sequence of Identification, LEI

        # is a x0:PartyIdentification120Choice
        # probably a recursive complex
        Identification => {},

        # is a xs:string
        # is optional
        # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
        LEI => "example", },

      # is a x0:PartyIdentification136
      # complex structure shown above
      # is optional
      MessageRecipient => [{},], },

    # is a x0:IntraBalanceQueryDefinition11
    QueryDefinition =>
    { # sequence of QueryType, SearchCriteria

      # is a xs:string
      # Enum: FULL STTS
      QueryType => "FULL",

      # is a x0:IntraBalanceQueryCriteria11
      SearchCriteria =>
      { # sequence of References, Status, CashAccount,
        #   CashAccountOwner, CashAccountServicer, BallanceType,
        #   CashSubBalanceId, SettlementAmount, SettledAmount,
        #   SettlementCurrency, IntnddSttlmDt, EffectiveSettlementDate,
        #   Priority, MessageOriginator, CreationDateTime

        # is a x0:References36Choice
        # occurs any number of times
        References =>
        [ { # choice of AccountOwnerTransactionId,
            #   AccountServicerTransactionId,
            #   MarketInfrastructureTransactionId, ProcessorTransactionId,
            #   PoolId, CorporateActionEventId

            # is a xs:string
            # length <= 35
            # length >= 1
            AccountOwnerTransactionId => "example",

            # is a xs:string
            # length <= 35
            # length >= 1
            AccountServicerTransactionId => "example",

            # is a xs:string
            # length <= 35
            # length >= 1
            MarketInfrastructureTransactionId => "example",

            # is a xs:string
            # length <= 35
            # length >= 1
            ProcessorTransactionId => "example",

            # is a xs:string
            # length <= 35
            # length >= 1
            PoolId => "example",

            # is a xs:string
            # length <= 35
            # length >= 1
            CorporateActionEventId => "example", }, ],

        # is a x0:IntraBalanceQueryStatus3
        # is optional
        Status =>
        { # sequence of Type, DateProduced

          # is a x0:IntraBalanceStatusType2
          Type =>
          { # sequence of ProcessingStatus, SettlementStatus, Settled

            # is a x0:ProcessingStatus68Choice
            # occurs any number of times
            ProcessingStatus =>
            [ { # choice of Code, Proprietary

                # is a xs:string
                # Enum: CAND PACK REJT REPR
                Code => "CAND",

                # is a x0:GenericIdentification30
                Proprietary =>
                { # sequence of Identification, Issuer, SchemName

                  # is a xs:string
                  # Pattern: [a-zA-Z0-9]{4}
                  Identification => "example",

                  # is a xs:string
                  # length <= 35
                  # length >= 1
                  Issuer => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  SchemName => "example", }, }, ],

            # is a x0:SettlementStatus26Choice
            # occurs any number of times
            SettlementStatus =>
            [ { # choice of Code, Proprietary

                # is a xs:string
                # Enum: PEND PENF
                Code => "PEND",

                # is a x0:GenericIdentification30
                # complex structure shown above
                Proprietary => {}, }, ],

            # is a x0:ProprietaryReason4
            # is optional
            Settled =>
            { # sequence of Reason, AdditionalReasonInformation

              # is a x0:GenericIdentification30
              # complex structure shown above
              # is optional
              Reason => [{},],

              # is a xs:string
              # is optional
              # length <= 210
              # length >= 1
              AdditionalReasonInformation => "example", }, },

          # is a x0:DateAndDateTimeSearch5Choice
          # is optional
          DateProduced =>
          { # choice of Date, DateTime

            # is a x0:DatePeriodSearch1Choice
            Date =>
            { # choice of FromDate, ToDate, FromToDate, EqualDate, NotEqualDate

              # is a xs:date
              FromDate => "2006-10-06",

              # is a xs:date
              ToDate => "2006-10-06",

              # is a x0:DatePeriod2
              FromToDate =>
              { # sequence of FromDate, ToDate

                # is a xs:date
                FromDate => "2006-10-06",

                # is a xs:date
                ToDate => "2006-10-06", },

              # is a xs:date
              EqualDate => "2006-10-06",

              # is a xs:date
              NotEqualDate => "2006-10-06", },

            # is a x0:DateTimeSearch2Choice
            DateTime =>
            { # choice of FromDateTime, ToDateTime, FromToDateTime,
              #   EqualDateTime, NotEqualDatTime

              # is a xs:dateTime
              FromDateTime => "2006-10-06T00:23:02Z",

              # is a xs:dateTime
              ToDateTime => "2006-10-06T00:23:02Z",

              # is a x0:DateTimePeriod1
              FromToDateTime =>
              { # sequence of FromDateTime, ToDateTime

                # is a xs:dateTime
                FromDateTime => "2006-10-06T00:23:02Z",

                # is a xs:dateTime
                ToDateTime => "2006-10-06T00:23:02Z", },

              # is a xs:dateTime
              EqualDateTime => "2006-10-06T00:23:02Z",

              # is a xs:dateTime
              NotEqualDatTime => "2006-10-06T00:23:02Z", }, }, },

        # is a x0:AccountIdentificationSearchCriteria2Choice
        # occurs any number of times
        CashAccount =>
        [ { # choice of Equal, CTTxt, NotContainText

            # is a x0:AccountIdentification4Choice
            Equal =>
            { # choice of IBAN, Other

              # is a xs:string
              # Pattern: [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
              IBAN => "example",

              # is a x0:GenericAccountIdentification1
              Other =>
              { # sequence of Identification, SchemName, Issuer

                # is a xs:string
                # length <= 34
                # length >= 1
                Identification => "example",

                # is a x0:AccountSchemeName1Choice
                # is optional
                SchemName =>
                { # choice of Code, Proprietary

                  # is a xs:string
                  # length <= 4
                  # length >= 1
                  Code => "example",

                  # is a xs:string
                  # length <= 35
                  # length >= 1
                  Proprietary => "example", },

                # is a xs:string
                # is optional
                # length <= 35
                # length >= 1
                Issuer => "example", }, },

            # is a xs:string
            # length <= 35
            # length >= 1
            CTTxt => "example",

            # is a xs:string
            # length <= 35
            # length >= 1
            NotContainText => "example", }, ],

        # is a x0:SystemPartyIdentification8
        # occurs any number of times
        CashAccountOwner =>
        [ { # sequence of Identification, ResponsiblePartyId

            # is a x0:PartyIdentification136
            # complex structure shown above
            Identification => {},

            # is a x0:PartyIdentification136
            # complex structure shown above
            # is optional
            ResponsiblePartyId => [{},], }, ],

        # is a x0:BranchAndFinancialInstitutionIdentification8
        # is optional
        CashAccountServicer =>
        { # sequence of FinancialInstitutionId, BranchId

          # is a x0:FinancialInstitutionIdentification23
          FinancialInstitutionId =>
          { # sequence of BICFI, ClearSystemMemberId, LEI, Name,
            #   PostalAddress, Other

            # is a xs:string
            # is optional
            # Pattern:
            #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
            BICFI => "example",

            # is a x0:ClearingSystemMemberIdentification2
            # is optional
            ClearSystemMemberId =>
            { # sequence of ClearSystemId, MemberId

              # is a x0:ClearingSystemIdentification2Choice
              # is optional
              ClearSystemId =>
              { # choice of Code, Proprietary

                # is a xs:string
                # length <= 5
                # length >= 1
                Code => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                Proprietary => "example", },

              # is a xs:string
              # length <= 35
              # length >= 1
              MemberId => "example", },

            # is a xs:string
            # is optional
            # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
            LEI => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            Name => "example",

            # is a x0:PostalAddress27
            # is optional
            PostalAddress =>
            { # sequence of AddressType, CareOf, Department, SubDepartment,
              #   SteetName, BuildingNumber, BuildingName, Floor, UnitNumber,
              #   Postbox, Room, PostalCode, TownName, TownLocationName,
              #   DistrictName, CountrySubDivision, Country, AddressLine

              # is a x0:AddressType3Choice
              # is optional
              AddressType =>
              { # choice of Code, Proprietary

                # is a xs:string
                # Enum: ADDR BIZZ DLVY HOME MLTO PBOX
                Code => "ADDR",

                # is a x0:GenericIdentification30
                # complex structure shown above
                Proprietary => {}, },

              # is a xs:string
              # is optional
              # length <= 140
              # length >= 1
              CareOf => "example",

              # is a xs:string
              # is optional
              # length <= 70
              # length >= 1
              Department => "example",

              # is a xs:string
              # is optional
              # length <= 70
              # length >= 1
              SubDepartment => "example",

              # is a xs:string
              # is optional
              # length <= 140
              # length >= 1
              SteetName => "example",

              # is a xs:string
              # is optional
              # length <= 16
              # length >= 1
              BuildingNumber => "example",

              # is a xs:string
              # is optional
              # length <= 140
              # length >= 1
              BuildingName => "example",

              # is a xs:string
              # is optional
              # length <= 70
              # length >= 1
              Floor => "example",

              # is a xs:string
              # is optional
              # length <= 16
              # length >= 1
              UnitNumber => "example",

              # is a xs:string
              # is optional
              # length <= 16
              # length >= 1
              Postbox => "example",

              # is a xs:string
              # is optional
              # length <= 70
              # length >= 1
              Room => "example",

              # is a xs:string
              # is optional
              # length <= 16
              # length >= 1
              PostalCode => "example",

              # is a xs:string
              # is optional
              # length <= 140
              # length >= 1
              TownName => "example",

              # is a xs:string
              # is optional
              # length <= 140
              # length >= 1
              TownLocationName => "example",

              # is a xs:string
              # is optional
              # length <= 140
              # length >= 1
              DistrictName => "example",

              # is a xs:string
              # is optional
              # length <= 35
              # length >= 1
              CountrySubDivision => "example",

              # is a xs:string
              # is optional
              # Pattern: [A-Z]{2,2}
              Country => "example",

              # is a xs:string
              # occurs 0 <= # <= 7 times
              # length <= 70
              # length >= 1
              AddressLine => [ "example", ], },

            # is a x0:GenericFinancialIdentification1
            # complex structure shown above
            # is optional
            Other => [{},], },

          # is a x0:BranchData5
          # is optional
          BranchId =>
          { # sequence of Identification, LEI, Name, PostalAddress

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            Identification => "example",

            # is a xs:string
            # is optional
            # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
            LEI => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            Name => "example",

            # is a x0:PostalAddress27
            # complex structure shown above
            # is optional
            PostalAddress => [{},], }, },

        # is a x0:IntraBalanceType3
        # occurs any number of times
        BallanceType =>
        [ { # sequence of BallanceFrom, BallanceTotal

            # is a x0:CashSubBalanceTypeAndQuantityBreakdown3
            # is optional
            BallanceFrom =>
            { # sequence of Type, QuantityBreakdown

              # is a x0:CashBalanceType3Choice
              # complex structure shown above
              Type => {},

              # is a x0:AmountAndQuantityBreakdown1
              # occurs any number of times
              QuantityBreakdown =>
              [ { # sequence of LotNb, LotAmt, LotQty, CashSubBalanceType

                  # is a x0:GenericIdentification37
                  # is optional
                  LotNb =>
                  { # sequence of Identification, Issuer

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Identification => "example",

                    # is a xs:string
                    # is optional
                    # length <= 35
                    # length >= 1
                    Issuer => "example", },

                  # is a x0:AmountAndDirection5
                  # is optional
                  LotAmt =>
                  { # sequence of Amount, CreditDebit

                    # is a x0:ActiveCurrencyAndAmount
                    # Amount is simple value with attributes
                    Amount =>
                    { # is a xs:string
                      # attribute Currency is required
                      # Pattern: [A-Z]{3,3}
                      Currency => "example",

                      # is a xs:decimal
                      # string content of the container
                      _ => 3.1415, },

                    # is a xs:string
                    # is optional
                    # Enum: CRDT DBIT
                    CreditDebit => "CRDT", },

                  # is a x0:FinancialInstrumentQuantity1Choice
                  # is optional
                  LotQty =>
                  { # choice of Unit, FaceAmout, AmtsdVal

                    # is a xs:decimal
                    # faction digits is 17
                    # total digits is 18
                    Unit => 3.1415,

                    # is a xs:decimal
                    # faction digits is 5
                    # value >= 0
                    # total digits is 18
                    FaceAmout => 3.1415,

                    # is a xs:decimal
                    # faction digits is 5
                    # value >= 0
                    # total digits is 18
                    AmtsdVal => 3.1415, },

                  # is a x0:GenericIdentification30
                  # complex structure shown above
                  # is optional
                  CashSubBalanceType => [{},], }, ], },

            # is a x0:CashSubBalanceTypeAndQuantityBreakdown3
            # complex structure shown above
            # is optional
            BallanceTotal => [{},], }, ],

        # is a x0:GenericIdentification37
        # complex structure shown above
        # occurs any number of times
        CashSubBalanceId => [{},],

        # is a x0:ImpliedCurrencyAmountRange1Choice
        # is optional
        SettlementAmount =>
        { # choice of FromAmount, ToAmount, FromToAmount, EqualAmount,
          #   NotEqualAmount

          # is a x0:AmountRangeBoundary1
          FromAmount =>
          { # sequence of BdryAmt, Included

            # is a xs:decimal
            # faction digits is 5
            # value >= 0
            # total digits is 18
            BdryAmt => 3.1415,

            # is a xs:boolean
            Included => "true", },

          # is a x0:AmountRangeBoundary1
          # complex structure shown above
          ToAmount => {},

          # is a x0:FromToAmountRange1
          FromToAmount =>
          { # sequence of FromAmount, ToAmount

            # is a x0:AmountRangeBoundary1
            # complex structure shown above
            FromAmount => {},

            # is a x0:AmountRangeBoundary1
            # complex structure shown above
            ToAmount => {}, },

          # is a xs:decimal
          # faction digits is 5
          # value >= 0
          # total digits is 18
          EqualAmount => 3.1415,

          # is a xs:decimal
          # faction digits is 5
          # value >= 0
          # total digits is 18
          NotEqualAmount => 3.1415, },

        # is a x0:ImpliedCurrencyAmountRange1Choice
        # complex structure shown above
        # is optional
        SettledAmount => [{},],

        # is a xs:string
        # occurs any number of times
        # Pattern: [A-Z]{3,3}
        SettlementCurrency => [ "example", ],

        # is a x0:DateAndDateTimeSearch5Choice
        # complex structure shown above
        # is optional
        IntnddSttlmDt => [{},],

        # is a x0:DateAndDateTimeSearch5Choice
        # complex structure shown above
        # is optional
        EffectiveSettlementDate => [{},],

        # is a x0:PriorityNumeric4Choice
        # occurs any number of times
        Priority =>
        [ { # choice of Numeric, Proprietary

            # is a xs:string
            # Pattern: [0-9]{4}
            Numeric => "example",

            # is a x0:GenericIdentification30
            # complex structure shown above
            Proprietary => {}, }, ],

        # is a x0:SystemPartyIdentification8
        # complex structure shown above
        # occurs any number of times
        MessageOriginator => [{},],

        # is a x0:DateAndDateTimeSearch5Choice
        # complex structure shown above
        # is optional
        CreationDateTime => [{},], }, },

    # is a x0:SupplementaryData1
    # occurs any number of times
    SupplementaryData =>
    [ { # sequence of PlaceAndName, Envelope

        # is a xs:string
        # is optional
        # length <= 350
        # length >= 1
        PlaceAndName => "example",

        # is a x0:SupplementaryDataEnvelope1
        Envelope =>
        { # sequence of ANY

          # any element in any namespace
          ANY => "Anything", }, }, ], }, }
