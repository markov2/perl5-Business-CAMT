# Describing complex x0:Document
#     {urn:iso:std:iso:20022:tech:xsd:camt.110.001.01}Document
#
# Produced by XML::Compile::Translate::Template version undef
#          on Mon Nov 25 15:46:22 2024
#
# BE WARNED: in most cases, the example below cannot be used without
# interpretation.  The comments will guide you.
#
# xmlns:x0        urn:iso:std:iso:20022:tech:xsd:camt.110.001.01
# xmlns:xs        http://www.w3.org/2001/XMLSchema

# is a x0:Document
{ # sequence of InvestigationRequest

  # is a x0:InvestigationRequestV01
  InvestigationRequest =>
  { # sequence of InvestigationRequest, InvestigationData,
    #   SupplementaryData

    # is a x0:InvestigationRequest2
    # probably a recursive complex
    InvestigationRequest => {},

    # is a x0:InvestigationReason2
    # occurs 1 <= # <= unbounded times
    InvestigationData =>
    [ { # sequence of Sequence, Reason, ReasonSubType,
        #   AdditionalRequestData, RelatedInvestigationData,
        #   EnclosureFile, RelatedFileFata

        # is a xs:decimal
        # is optional
        # faction digits is 0
        # total digits is 3
        Sequence => 3.1415,

        # is a x0:InvestigationReason1Choice
        Reason =>
        { # choice of Code, Proprietary

          # is a xs:string
          # length <= 4
          # length >= 1
          Code => "example",

          # is a xs:string
          # length <= 35
          # length >= 1
          Proprietary => "example", },

        # is a x0:InvestigationReasonSubType1Choice
        # is optional
        ReasonSubType =>
        { # choice of Code, Proprietary

          # is a xs:string
          # length <= 4
          # length >= 1
          Code => "example",

          # is a xs:string
          # length <= 35
          # length >= 1
          Proprietary => "example", },

        # is a x0:AdditionalRequestData1Choice
        # is optional
        AdditionalRequestData =>
        { # choice of RequestedDebitAuthorisation, RequestedComposition,
          #   RequestedValidation, RequestNarrative

          # is a x0:DebitAuthorisation3
          RequestedDebitAuthorisation =>
          { # sequence of CancellationReason, AmountToDebit, Account,
            #   ValueDateToDebit, AdditionalCancellationReasonInformation

            # is a x0:CancellationReason33Choice
            CancellationReason =>
            { # choice of Code, Proprietary

              # is a xs:string
              # length <= 4
              # length >= 1
              Code => "example",

              # is a xs:string
              # length <= 35
              # length >= 1
              Proprietary => "example", },

            # is a x0:ActiveOrHistoricCurrencyAndAmount
            # AmountToDebit is simple value with attributes
            # is optional
            AmountToDebit =>
            { # is a xs:string
              # attribute Currency is required
              # Pattern: [A-Z]{3,3}
              Currency => "example",

              # is a xs:decimal
              # string content of the container
              _ => 3.1415, },

            # is a x0:CashAccount40
            # is optional
            Account =>
            { # sequence of Identification, Type, Currency, Name, Proxy

              # is a x0:AccountIdentification4Choice
              # is optional
              Identification =>
              { # choice of IBAN, Other

                # is a xs:string
                # Pattern: [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
                IBAN => "example",

                # is a x0:GenericAccountIdentification1
                Other =>
                { # sequence of Identification, SchemName, Issuer

                  # is a xs:string
                  # length <= 34
                  # length >= 1
                  Identification => "example",

                  # is a x0:AccountSchemeName1Choice
                  # is optional
                  SchemName =>
                  { # choice of Code, Proprietary

                    # is a xs:string
                    # length <= 4
                    # length >= 1
                    Code => "example",

                    # is a xs:string
                    # length <= 35
                    # length >= 1
                    Proprietary => "example", },

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  Issuer => "example", }, },

              # is a x0:CashAccountType2Choice
              # is optional
              Type =>
              { # choice of Code, Proprietary

                # is a xs:string
                # length <= 4
                # length >= 1
                Code => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                Proprietary => "example", },

              # is a xs:string
              # is optional
              # Pattern: [A-Z]{3,3}
              Currency => "example",

              # is a xs:string
              # is optional
              # length <= 70
              # length >= 1
              Name => "example",

              # is a x0:ProxyAccountIdentification1
              # is optional
              Proxy =>
              { # sequence of Type, Identification

                # is a x0:ProxyAccountType1Choice
                # complex structure shown above
                # is optional
                Type => [{},],

                # is a xs:string
                # length <= 2048
                # length >= 1
                Identification => "example", }, },

            # is a xs:date
            # is optional
            ValueDateToDebit => "2006-10-06",

            # is a xs:string
            # occurs any number of times
            # length <= 140
            # length >= 1
            AdditionalCancellationReasonInformation => [ "example", ], },

          # is a x0:CompensationRequest1
          RequestedComposition =>
          { # sequence of CompensationAccount, Period, Amount,
            #   ExpectedValueDate, InterestRate, Reason

            # is a x0:CashAccount40
            # complex structure shown above
            # is optional
            CompensationAccount => [{},],

            # is a x0:DatePeriod2
            Period =>
            { # sequence of FromDate, ToDate

              # is a xs:date
              FromDate => "2006-10-06",

              # is a xs:date
              ToDate => "2006-10-06", },

            # is a x0:ActiveCurrencyAndAmount
            # Amount is simple value with attributes
            # is optional
            Amount =>
            { # is a xs:string
              # attribute Currency is required
              # Pattern: [A-Z]{3,3}
              Currency => "example",

              # is a xs:decimal
              # string content of the container
              _ => 3.1415, },

            # is a xs:date
            # is optional
            ExpectedValueDate => "2006-10-06",

            # is a xs:decimal
            # is optional
            # faction digits is 10
            # total digits is 11
            InterestRate => 3.1415,

            # is a xs:string
            # occurs any number of times
            # length <= 140
            # length >= 1
            Reason => [ "example", ], },

          # is a x0:AdjustmentRequest1
          RequestedValidation =>
          { # sequence of Period

            # is a x0:DatePeriod5
            # complex structure shown above
            # is optional
            Period => [{},], },

          # is a xs:string
          # length <= 500
          # length >= 1
          RequestNarrative => "example", },

        # is a x0:RelatedInvestigationData1
        # is optional
        RelatedInvestigationData =>
        { # sequence of InvestigationData, Location

          # is a xs:string
          # is optional
          # length <= 35
          # length >= 1
          InvestigationData => "example",

          # is a x0:InvestigationLocationData1
          # occurs any number of times
          Location =>
          [ { # sequence of Method, ElectronicAddress, PostalAddress

              # is a xs:string
              # Enum: EDIC EMAL FAXI POST SMSM URID
              Method => "EDIC",

              # is a xs:string
              # is optional
              # length <= 2048
              # length >= 1
              ElectronicAddress => "example",

              # is a x0:NameAndAddress16
              # is optional
              PostalAddress =>
              { # sequence of Name, Address

                # is a xs:string
                # length <= 140
                # length >= 1
                Name => "example",

                # is a x0:PostalAddress24
                Address =>
                { # sequence of AddressType, Department, SubDepartment,
                  #   SteetName, BuildingNumber, BuildingName, Floor, Postbox,
                  #   Room, PostalCode, TownName, TownLocationName, DistrictName,
                  #   CountrySubDivision, Country, AddressLine

                  # is a x0:AddressType3Choice
                  # is optional
                  AddressType =>
                  { # choice of Code, Proprietary

                    # is a xs:string
                    # Enum: ADDR BIZZ DLVY HOME MLTO PBOX
                    Code => "ADDR",

                    # is a x0:GenericIdentification30
                    Proprietary =>
                    { # sequence of Identification, Issuer, SchemName

                      # is a xs:string
                      # Pattern: [a-zA-Z0-9]{4}
                      Identification => "example",

                      # is a xs:string
                      # length <= 35
                      # length >= 1
                      Issuer => "example",

                      # is a xs:string
                      # is optional
                      # length <= 35
                      # length >= 1
                      SchemName => "example", }, },

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Department => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  SubDepartment => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  SteetName => "example",

                  # is a xs:string
                  # is optional
                  # length <= 16
                  # length >= 1
                  BuildingNumber => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  BuildingName => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Floor => "example",

                  # is a xs:string
                  # is optional
                  # length <= 16
                  # length >= 1
                  Postbox => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Room => "example",

                  # is a xs:string
                  # is optional
                  # length <= 16
                  # length >= 1
                  PostalCode => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  TownName => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  TownLocationName => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  DistrictName => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  CountrySubDivision => "example",

                  # is a xs:string
                  # is optional
                  # Pattern: [A-Z]{2,2}
                  Country => "example",

                  # is a xs:string
                  # occurs 0 <= # <= 7 times
                  # length <= 70
                  # length >= 1
                  AddressLine => [ "example", ], }, }, }, ], },

        # is a x0:Document12
        # occurs any number of times
        EnclosureFile =>
        [ { # sequence of Type, Identification, IssueDate, Name,
            #   LanguageCode, Format, FileNumber, DigitalSignature, Enclosure

            # is a x0:DocumentType1Choice
            # complex structure shown above
            Type => {},

            # is a xs:string
            # length <= 35
            # length >= 1
            Identification => "example",

            # is a x0:DateAndDateTime2Choice
            IssueDate =>
            { # choice of Date, DateTime

              # is a xs:date
              Date => "2006-10-06",

              # is a xs:dateTime
              DateTime => "2006-10-06T00:23:02Z", },

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            Name => "example",

            # is a xs:string
            # is optional
            LanguageCode => "example",

            # is a x0:DocumentFormat1Choice
            Format =>
            { # choice of Code, Proprietary

              # is a xs:string
              # length <= 4
              # length >= 1
              Code => "example",

              # is a x0:GenericIdentification1
              # complex structure shown above
              Proprietary => {}, },

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            FileNumber => "example",

            # is a x0:PartyAndSignature3
            # is optional
            DigitalSignature =>
            { # sequence of Party, Signature

              # is a x0:PartyIdentification135
              Party =>
              { # sequence of Name, PostalAddress, Identification,
                #   CountryOfResidence, ContactDetails

                # is a xs:string
                # is optional
                # length <= 140
                # length >= 1
                Name => "example",

                # is a x0:PostalAddress24
                # complex structure shown above
                # is optional
                PostalAddress => [{},],

                # is a x0:Party38Choice
                # complex structure shown above
                # is optional
                Identification => [{},],

                # is a xs:string
                # is optional
                # Pattern: [A-Z]{2,2}
                CountryOfResidence => "example",

                # is a x0:Contact4
                # is optional
                ContactDetails =>
                { # sequence of NamePrefix, Name, PhoneNumber, MobNb, FaxNumber,
                  #   EmailAddress, EmailPurpose, JobTitle, Responsibility,
                  #   Department, Other, PreferredMethod

                  # is a xs:string
                  # is optional
                  # Enum: DOCT MADM MIKS MISS MIST
                  NamePrefix => "DOCT",

                  # is a xs:string
                  # is optional
                  # length <= 140
                  # length >= 1
                  Name => "example",

                  # is a xs:string
                  # is optional
                  # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                  PhoneNumber => "example",

                  # is a xs:string
                  # is optional
                  # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                  MobNb => "example",

                  # is a xs:string
                  # is optional
                  # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
                  FaxNumber => "example",

                  # is a xs:string
                  # is optional
                  # length <= 2048
                  # length >= 1
                  EmailAddress => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  EmailPurpose => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  JobTitle => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  Responsibility => "example",

                  # is a xs:string
                  # is optional
                  # length <= 70
                  # length >= 1
                  Department => "example",

                  # is a x0:OtherContact1
                  # complex structure shown above
                  # occurs any number of times
                  Other => [{},],

                  # is a xs:string
                  # is optional
                  # Enum: CELL FAXX LETT MAIL PHON
                  PreferredMethod => "LETT", }, },

              # is a x0:SkipPayload
              Signature =>
              { # sequence of ANY

                # any element in any namespace
                ANY => "Anything", }, },

            # is a xs:base64Binary
            # length <= 10485760
            # length >= 1
            Enclosure => "decoded bytes", }, ],

        # is a x0:FileData1
        # occurs any number of times
        RelatedFileFata =>
        [ { # sequence of Type, Identification, IssueDate, Format,
            #   FileNumber, NetworkReference, FileLocationElectronicAddress

            # is a x0:DocumentType1Choice
            # complex structure shown above
            # is optional
            Type => [{},],

            # is a xs:string
            # length <= 35
            # length >= 1
            Identification => "example",

            # is a x0:DateAndDateTime2Choice
            # complex structure shown above
            # is optional
            IssueDate => [{},],

            # is a x0:DocumentFormat1Choice
            # complex structure shown above
            # is optional
            Format => [{},],

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            FileNumber => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            NetworkReference => "example",

            # is a xs:string
            # is optional
            # length <= 2048
            # length >= 1
            FileLocationElectronicAddress => "example", }, ], }, ],

    # is a x0:SupplementaryData1
    # occurs any number of times
    SupplementaryData =>
    [ { # sequence of PlaceAndName, Envelope

        # is a xs:string
        # is optional
        # length <= 350
        # length >= 1
        PlaceAndName => "example",

        # is a x0:SupplementaryDataEnvelope1
        Envelope =>
        { # sequence of ANY

          # any element in any namespace
          ANY => "Anything", }, }, ], }, }
