# Describing complex x0:Document
#     {urn:iso:std:iso:20022:tech:xsd:camt.108.001.02}Document
#
# Produced by XML::Compile::Translate::Template version undef
#          on Thu Nov 28 17:11:36 2024
#
# BE WARNED: in most cases, the example below cannot be used without
# interpretation.  The comments will guide you.
#
# xmlns:x0        urn:iso:std:iso:20022:tech:xsd:camt.108.001.02
# xmlns:xs        http://www.w3.org/2001/XMLSchema

# is a x0:Document
{ # sequence of ChequeCancelOrStopRequest

  # is a x0:ChequeCancellationOrStopRequestV02
  ChequeCancelOrStopRequest =>
  { # sequence of GroupHeader, Cheque, SupplementaryData

    # is a x0:GroupHeader103
    GroupHeader =>
    { # sequence of MessageId, CreationDateTime, NumberOfCheques,
      #   ControlSum

      # is a xs:string
      # length <= 35
      # length >= 1
      MessageId => "example",

      # is a xs:dateTime
      CreationDateTime => "2006-10-06T00:23:02Z",

      # is a xs:string
      # Pattern: [0-9]{1,15}
      NumberOfCheques => "example",

      # is a xs:decimal
      # is optional
      # faction digits is 17
      # total digits is 18
      ControlSum => 3.1415, },

    # is a x0:Cheque20
    # occurs 1 <= # <= unbounded times
    Cheque =>
    [ { # sequence of InstructingId, OriginalInstructionId,
        #   ChequeNumber, IssueDate, StaleDate, Amount, EffectiveDate,
        #   DrawerAgent, DrawerAgentAccount, Payee, PayeeAccount,
        #   ChequeCancelOrStopReason

        # is a xs:string
        # is optional
        # length <= 35
        # length >= 1
        InstructingId => "example",

        # is a xs:string
        # is optional
        # length <= 35
        # length >= 1
        OriginalInstructionId => "example",

        # is a xs:string
        # length <= 35
        # length >= 1
        ChequeNumber => "example",

        # is a xs:date
        IssueDate => "2006-10-06",

        # is a xs:date
        # is optional
        StaleDate => "2006-10-06",

        # is a x0:ActiveCurrencyAndAmount
        # Amount is simple value with attributes
        Amount =>
        { # is a xs:string
          # attribute Currency is required
          # Pattern: [A-Z]{3,3}
          Currency => "example",

          # is a xs:decimal
          # string content of the container
          _ => 3.1415, },

        # is a x0:DateAndDateTime2Choice
        # is optional
        EffectiveDate =>
        { # choice of Date, DateTime

          # is a xs:date
          Date => "2006-10-06",

          # is a xs:dateTime
          DateTime => "2006-10-06T00:23:02Z", },

        # is a x0:BranchAndFinancialInstitutionIdentification8
        # is optional
        DrawerAgent =>
        { # sequence of FinancialInstitutionId, BranchId

          # is a x0:FinancialInstitutionIdentification23
          FinancialInstitutionId =>
          { # sequence of BICFI, ClearSystemMemberId, LEI, Name,
            #   PostalAddress, Other

            # is a xs:string
            # is optional
            # Pattern:
            #    [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
            BICFI => "example",

            # is a x0:ClearingSystemMemberIdentification2
            # is optional
            ClearSystemMemberId =>
            { # sequence of ClearSystemId, MemberId

              # is a x0:ClearingSystemIdentification2Choice
              # is optional
              ClearSystemId =>
              { # choice of Code, Proprietary

                # is a xs:string
                # length <= 5
                # length >= 1
                Code => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                Proprietary => "example", },

              # is a xs:string
              # length <= 35
              # length >= 1
              MemberId => "example", },

            # is a xs:string
            # is optional
            # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
            LEI => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            Name => "example",

            # is a x0:PostalAddress27
            # is optional
            PostalAddress =>
            { # sequence of AddressType, CareOf, Department, SubDepartment,
              #   SteetName, BuildingNumber, BuildingName, Floor, UnitNumber,
              #   Postbox, Room, PostalCode, TownName, TownLocationName,
              #   DistrictName, CountrySubDivision, Country, AddressLine

              # is a x0:AddressType3Choice
              # is optional
              AddressType =>
              { # choice of Code, Proprietary

                # is a xs:string
                # Enum: ADDR BIZZ DLVY HOME MLTO PBOX
                Code => "ADDR",

                # is a x0:GenericIdentification30
                Proprietary =>
                { # sequence of Identification, Issuer, SchemeName

                  # is a xs:string
                  # Pattern: [a-zA-Z0-9]{4}
                  Identification => "example",

                  # is a xs:string
                  # length <= 35
                  # length >= 1
                  Issuer => "example",

                  # is a xs:string
                  # is optional
                  # length <= 35
                  # length >= 1
                  SchemeName => "example", }, },

              # is a xs:string
              # is optional
              # length <= 140
              # length >= 1
              CareOf => "example",

              # is a xs:string
              # is optional
              # length <= 70
              # length >= 1
              Department => "example",

              # is a xs:string
              # is optional
              # length <= 70
              # length >= 1
              SubDepartment => "example",

              # is a xs:string
              # is optional
              # length <= 140
              # length >= 1
              SteetName => "example",

              # is a xs:string
              # is optional
              # length <= 16
              # length >= 1
              BuildingNumber => "example",

              # is a xs:string
              # is optional
              # length <= 140
              # length >= 1
              BuildingName => "example",

              # is a xs:string
              # is optional
              # length <= 70
              # length >= 1
              Floor => "example",

              # is a xs:string
              # is optional
              # length <= 16
              # length >= 1
              UnitNumber => "example",

              # is a xs:string
              # is optional
              # length <= 16
              # length >= 1
              Postbox => "example",

              # is a xs:string
              # is optional
              # length <= 70
              # length >= 1
              Room => "example",

              # is a xs:string
              # is optional
              # length <= 16
              # length >= 1
              PostalCode => "example",

              # is a xs:string
              # is optional
              # length <= 140
              # length >= 1
              TownName => "example",

              # is a xs:string
              # is optional
              # length <= 140
              # length >= 1
              TownLocationName => "example",

              # is a xs:string
              # is optional
              # length <= 140
              # length >= 1
              DistrictName => "example",

              # is a xs:string
              # is optional
              # length <= 35
              # length >= 1
              CountrySubDivision => "example",

              # is a xs:string
              # is optional
              # Pattern: [A-Z]{2,2}
              Country => "example",

              # is a xs:string
              # occurs 0 <= # <= 7 times
              # length <= 70
              # length >= 1
              AddressLine => [ "example", ], },

            # is a x0:GenericFinancialIdentification1
            # is optional
            Other =>
            { # sequence of Identification, SchemeName, Issuer

              # is a xs:string
              # length <= 35
              # length >= 1
              Identification => "example",

              # is a x0:FinancialIdentificationSchemeName1Choice
              # is optional
              SchemeName =>
              { # choice of Code, Proprietary

                # is a xs:string
                # length <= 4
                # length >= 1
                Code => "example",

                # is a xs:string
                # length <= 35
                # length >= 1
                Proprietary => "example", },

              # is a xs:string
              # is optional
              # length <= 35
              # length >= 1
              Issuer => "example", }, },

          # is a x0:BranchData5
          # is optional
          BranchId =>
          { # sequence of Identification, LEI, Name, PostalAddress

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            Identification => "example",

            # is a xs:string
            # is optional
            # Pattern: [A-Z0-9]{18,18}[0-9]{2,2}
            LEI => "example",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            Name => "example",

            # is a x0:PostalAddress27
            # complex structure shown above
            # is optional
            PostalAddress => [{},], }, },

        # is a x0:CashAccount40
        # is optional
        DrawerAgentAccount =>
        { # sequence of Identification, Type, Currency, Name, Proxy

          # is a x0:AccountIdentification4Choice
          # is optional
          Identification =>
          { # choice of IBAN, Other

            # is a xs:string
            # Pattern: [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
            IBAN => "example",

            # is a x0:GenericAccountIdentification1
            # complex structure shown above
            Other => {}, },

          # is a x0:CashAccountType2Choice
          # is optional
          Type =>
          { # choice of Code, Proprietary

            # is a xs:string
            # length <= 4
            # length >= 1
            Code => "example",

            # is a xs:string
            # length <= 35
            # length >= 1
            Proprietary => "example", },

          # is a xs:string
          # is optional
          # Pattern: [A-Z]{3,3}
          Currency => "example",

          # is a xs:string
          # is optional
          # length <= 70
          # length >= 1
          Name => "example",

          # is a x0:ProxyAccountIdentification1
          # is optional
          Proxy =>
          { # sequence of Type, Identification

            # is a x0:ProxyAccountType1Choice
            # complex structure shown above
            # is optional
            Type => [{},],

            # is a xs:string
            # length <= 2048
            # length >= 1
            Identification => "example", }, },

        # is a x0:PartyIdentification272
        # is optional
        Payee =>
        { # sequence of Name, PostalAddress, Identification,
          #   CountryOfResidence, ContactDetails

          # is a xs:string
          # is optional
          # length <= 140
          # length >= 1
          Name => "example",

          # is a x0:PostalAddress27
          # complex structure shown above
          # is optional
          PostalAddress => [{},],

          # is a x0:Party52Choice
          # complex structure shown above
          # is optional
          Identification => [{},],

          # is a xs:string
          # is optional
          # Pattern: [A-Z]{2,2}
          CountryOfResidence => "example",

          # is a x0:Contact13
          # is optional
          ContactDetails =>
          { # sequence of NamePrefix, Name, PhoneNumber,
            #   MobilePhoneNumber, FaxNumber, URLAddress, EmailAddress,
            #   EmailPurpose, JobTitle, Responsibility, Department, Other,
            #   PreferredMethod

            # is a xs:string
            # is optional
            # Enum: DOCT MADM MIKS MISS MIST
            NamePrefix => "DOCT",

            # is a xs:string
            # is optional
            # length <= 140
            # length >= 1
            Name => "example",

            # is a xs:string
            # is optional
            # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
            PhoneNumber => "example",

            # is a xs:string
            # is optional
            # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
            MobilePhoneNumber => "example",

            # is a xs:string
            # is optional
            # Pattern: \+[0-9]{1,3}-[0-9()+\-]{1,30}
            FaxNumber => "example",

            # is a xs:string
            # is optional
            # length <= 2048
            # length >= 1
            URLAddress => "example",

            # is a xs:string
            # is optional
            # length <= 256
            # length >= 1
            EmailAddress => "example",

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            EmailPurpose => "example",

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            JobTitle => "example",

            # is a xs:string
            # is optional
            # length <= 35
            # length >= 1
            Responsibility => "example",

            # is a xs:string
            # is optional
            # length <= 70
            # length >= 1
            Department => "example",

            # is a x0:OtherContact1
            # complex structure shown above
            # occurs any number of times
            Other => [{},],

            # is a xs:string
            # is optional
            # Enum: CELL FAXX LETT MAIL ONLI PHON
            PreferredMethod => "MAIL", }, },

        # is a x0:CashAccount40
        # complex structure shown above
        # is optional
        PayeeAccount => [{},],

        # is a x0:ChequeCancellationReason1
        # is optional
        ChequeCancelOrStopReason =>
        { # sequence of Originator, Reason, AdditionalInformation

          # is a xs:string
          # is optional
          # Enum: DWEA DWRA PAYE PAYR
          Originator => "DWEA",

          # is a x0:ChequeCancellationReason1Choice
          Reason =>
          { # choice of Code, Proprietary

            # is a xs:string
            # length <= 4
            # length >= 1
            Code => "example",

            # is a xs:string
            # length <= 35
            # length >= 1
            Proprietary => "example", },

          # is a xs:string
          # is optional
          # length <= 140
          # length >= 1
          AdditionalInformation => "example", }, }, ],

    # is a x0:SupplementaryData1
    # occurs any number of times
    SupplementaryData =>
    [ { # sequence of PlaceAndName, Envelope

        # is a xs:string
        # is optional
        # length <= 350
        # length >= 1
        PlaceAndName => "example",

        # is a x0:SupplementaryDataEnvelope1
        Envelope =>
        { # sequence of ANY

          # any element in any namespace
          ANY => "Anything", }, }, ], }, }
